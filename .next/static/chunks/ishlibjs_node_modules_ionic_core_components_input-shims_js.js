"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["ishlibjs_node_modules_ionic_core_components_input-shims_js"],{

/***/ "../ishlibjs/node_modules/@ionic/core/components/input-shims.js":
/*!**********************************************************************!*\
  !*** ../ishlibjs/node_modules/@ionic/core/components/input-shims.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startInputShims\": function() { return /* binding */ startInputShims; }\n/* harmony export */ });\n/* harmony import */ var _index8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index8.js */ \"../ishlibjs/node_modules/@ionic/core/components/index8.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"../ishlibjs/node_modules/@ionic/core/components/helpers.js\");\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\nconst isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.a)(scrollEl, 'ionScrollStart', hideCaret);\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.a)(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.b)(scrollEl, 'ionScrollStart', hideCaret);\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.b)(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.a)(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.b)(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.p)(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.p)(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, { capture: true, passive: true });\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.r)(() => componentEl.click());\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await (0,_index8_js__WEBPACK_IMPORTED_MODULE_1__.c)(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await (0,_index8_js__WEBPACK_IMPORTED_MODULE_1__.g)(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = (0,_index8_js__WEBPACK_IMPORTED_MODULE_1__.a)(input);\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = (config) => {\n  const doc = document;\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', true);\n  const inputBlurring = config.getBoolean('inputBlurring', true);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.c)(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = (0,_index8_js__WEBPACK_IMPORTED_MODULE_1__.a)(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    /**\n     * date/datetime-locale inputs on mobile devices show date picker\n     * overlays instead of keyboards. As a result, scroll assist is\n     * not needed. This also works around a bug in iOS <16 where\n     * scroll assist causes the browser to lock up. See FW-1997.\n     */\n    const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n    if (!isDateInput &&\n      (!!scrollEl || !!footerEl) &&\n      scrollAssist &&\n      !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vaXNobGlianMvbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2NvbXBvbmVudHMvaW5wdXQtc2hpbXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ29HO0FBQytCOztBQUVuSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLEdBQUcsS0FBSyxlQUFlO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDhDQUFnQjtBQUNsQixFQUFFLDhDQUFnQjtBQUNsQjtBQUNBO0FBQ0EsSUFBSSw4Q0FBbUI7QUFDdkIsSUFBSSw4Q0FBbUI7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUUsOENBQWdCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLElBQUksOENBQW1CO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDhDQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDhDQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELDhCQUE4QjtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDhDQUFHO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNkNBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDZDQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDZDQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGVBQWU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw4Q0FBZ0I7QUFDbkQ7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUUyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vaXNobGlianMvbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2NvbXBvbmVudHMvaW5wdXQtc2hpbXMuanM/NDM0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgZyBhcyBnZXRTY3JvbGxFbGVtZW50LCBjIGFzIHNjcm9sbEJ5UG9pbnQsIGEgYXMgZmluZENsb3Nlc3RJb25Db250ZW50IH0gZnJvbSAnLi9pbmRleDguanMnO1xuaW1wb3J0IHsgYSBhcyBhZGRFdmVudExpc3RlbmVyLCBiIGFzIHJlbW92ZUV2ZW50TGlzdGVuZXIsIHIgYXMgcmFmLCBwIGFzIHBvaW50ZXJDb29yZCwgYyBhcyBjb21wb25lbnRPblJlYWR5IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcblxuY29uc3QgY2xvbmVNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgcmVsb2NhdGVJbnB1dCA9IChjb21wb25lbnRFbCwgaW5wdXRFbCwgc2hvdWxkUmVsb2NhdGUsIGlucHV0UmVsYXRpdmVZID0gMCkgPT4ge1xuICBpZiAoY2xvbmVNYXAuaGFzKGNvbXBvbmVudEVsKSA9PT0gc2hvdWxkUmVsb2NhdGUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHNob3VsZFJlbG9jYXRlKSB7XG4gICAgYWRkQ2xvbmUoY29tcG9uZW50RWwsIGlucHV0RWwsIGlucHV0UmVsYXRpdmVZKTtcbiAgfVxuICBlbHNlIHtcbiAgICByZW1vdmVDbG9uZShjb21wb25lbnRFbCwgaW5wdXRFbCk7XG4gIH1cbn07XG5jb25zdCBpc0ZvY3VzZWQgPSAoaW5wdXQpID0+IHtcbiAgcmV0dXJuIGlucHV0ID09PSBpbnB1dC5nZXRSb290Tm9kZSgpLmFjdGl2ZUVsZW1lbnQ7XG59O1xuY29uc3QgYWRkQ2xvbmUgPSAoY29tcG9uZW50RWwsIGlucHV0RWwsIGlucHV0UmVsYXRpdmVZKSA9PiB7XG4gIC8vIHRoaXMgYWxsb3dzIGZvciB0aGUgYWN0dWFsIGlucHV0IHRvIHJlY2VpdmUgdGhlIGZvY3VzIGZyb21cbiAgLy8gdGhlIHVzZXIncyB0b3VjaCBldmVudCwgYnV0IGJlZm9yZSBpdCByZWNlaXZlcyBmb2N1cywgaXRcbiAgLy8gbW92ZXMgdGhlIGFjdHVhbCBpbnB1dCB0byBhIGxvY2F0aW9uIHRoYXQgd2lsbCBub3Qgc2NyZXdcbiAgLy8gdXAgdGhlIGFwcCdzIGxheW91dCwgYW5kIGRvZXMgbm90IGFsbG93IHRoZSBuYXRpdmUgYnJvd3NlclxuICAvLyB0byBhdHRlbXB0IHRvIHNjcm9sbCB0aGUgaW5wdXQgaW50byBwbGFjZSAobWVzc2luZyB1cCBoZWFkZXJzL2Zvb3RlcnMpXG4gIC8vIHRoZSBjbG9uZWQgaW5wdXQgZmlsbHMgdGhlIGFyZWEgb2Ygd2hlcmUgbmF0aXZlIGlucHV0IHNob3VsZCBiZVxuICAvLyB3aGlsZSB0aGUgbmF0aXZlIGlucHV0IGZha2VzIG91dCB0aGUgYnJvd3NlciBieSByZWxvY2F0aW5nIGl0c2VsZlxuICAvLyBiZWZvcmUgaXQgcmVjZWl2ZXMgdGhlIGFjdHVhbCBmb2N1cyBldmVudFxuICAvLyBXZSBoaWRlIHRoZSBmb2N1c2VkIGlucHV0ICh3aXRoIHRoZSB2aXNpYmxlIGNhcmV0KSBpbnZpc2libGUgYnkgbWFraW5nIGl0IHNjYWxlKDApLFxuICBjb25zdCBwYXJlbnRFbCA9IGlucHV0RWwucGFyZW50Tm9kZTtcbiAgLy8gRE9NIFdSSVRFU1xuICBjb25zdCBjbG9uZWRFbCA9IGlucHV0RWwuY2xvbmVOb2RlKGZhbHNlKTtcbiAgY2xvbmVkRWwuY2xhc3NMaXN0LmFkZCgnY2xvbmVkLWlucHV0Jyk7XG4gIGNsb25lZEVsLnRhYkluZGV4ID0gLTE7XG4gIHBhcmVudEVsLmFwcGVuZENoaWxkKGNsb25lZEVsKTtcbiAgY2xvbmVNYXAuc2V0KGNvbXBvbmVudEVsLCBjbG9uZWRFbCk7XG4gIGNvbnN0IGRvYyA9IGNvbXBvbmVudEVsLm93bmVyRG9jdW1lbnQ7XG4gIGNvbnN0IHR4ID0gZG9jLmRpciA9PT0gJ3J0bCcgPyA5OTk5IDogLTk5OTk7XG4gIGNvbXBvbmVudEVsLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7XG4gIGlucHV0RWwuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZTNkKCR7dHh9cHgsJHtpbnB1dFJlbGF0aXZlWX1weCwwKSBzY2FsZSgwKWA7XG59O1xuY29uc3QgcmVtb3ZlQ2xvbmUgPSAoY29tcG9uZW50RWwsIGlucHV0RWwpID0+IHtcbiAgY29uc3QgY2xvbmUgPSBjbG9uZU1hcC5nZXQoY29tcG9uZW50RWwpO1xuICBpZiAoY2xvbmUpIHtcbiAgICBjbG9uZU1hcC5kZWxldGUoY29tcG9uZW50RWwpO1xuICAgIGNsb25lLnJlbW92ZSgpO1xuICB9XG4gIGNvbXBvbmVudEVsLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnJztcbiAgaW5wdXRFbC5zdHlsZS50cmFuc2Zvcm0gPSAnJztcbn07XG5cbmNvbnN0IGVuYWJsZUhpZGVDYXJldE9uU2Nyb2xsID0gKGNvbXBvbmVudEVsLCBpbnB1dEVsLCBzY3JvbGxFbCkgPT4ge1xuICBpZiAoIXNjcm9sbEVsIHx8ICFpbnB1dEVsKSB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIGNvbnN0IHNjcm9sbEhpZGVDYXJldCA9IChzaG91bGRIaWRlQ2FyZXQpID0+IHtcbiAgICBpZiAoaXNGb2N1c2VkKGlucHV0RWwpKSB7XG4gICAgICByZWxvY2F0ZUlucHV0KGNvbXBvbmVudEVsLCBpbnB1dEVsLCBzaG91bGRIaWRlQ2FyZXQpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25CbHVyID0gKCkgPT4gcmVsb2NhdGVJbnB1dChjb21wb25lbnRFbCwgaW5wdXRFbCwgZmFsc2UpO1xuICBjb25zdCBoaWRlQ2FyZXQgPSAoKSA9PiBzY3JvbGxIaWRlQ2FyZXQodHJ1ZSk7XG4gIGNvbnN0IHNob3dDYXJldCA9ICgpID0+IHNjcm9sbEhpZGVDYXJldChmYWxzZSk7XG4gIGFkZEV2ZW50TGlzdGVuZXIoc2Nyb2xsRWwsICdpb25TY3JvbGxTdGFydCcsIGhpZGVDYXJldCk7XG4gIGFkZEV2ZW50TGlzdGVuZXIoc2Nyb2xsRWwsICdpb25TY3JvbGxFbmQnLCBzaG93Q2FyZXQpO1xuICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBvbkJsdXIpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoc2Nyb2xsRWwsICdpb25TY3JvbGxTdGFydCcsIGhpZGVDYXJldCk7XG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihzY3JvbGxFbCwgJ2lvblNjcm9sbEVuZCcsIHNob3dDYXJldCk7XG4gICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKCdpb25CbHVyJywgb25CbHVyKTtcbiAgfTtcbn07XG5cbmNvbnN0IFNLSVBfU0VMRUNUT1IgPSAnaW5wdXQsIHRleHRhcmVhLCBbbm8tYmx1cl0sIFtjb250ZW50ZWRpdGFibGVdJztcbmNvbnN0IGVuYWJsZUlucHV0Qmx1cnJpbmcgPSAoKSA9PiB7XG4gIGxldCBmb2N1c2VkID0gdHJ1ZTtcbiAgbGV0IGRpZFNjcm9sbCA9IGZhbHNlO1xuICBjb25zdCBkb2MgPSBkb2N1bWVudDtcbiAgY29uc3Qgb25TY3JvbGwgPSAoKSA9PiB7XG4gICAgZGlkU2Nyb2xsID0gdHJ1ZTtcbiAgfTtcbiAgY29uc3Qgb25Gb2N1c2luID0gKCkgPT4ge1xuICAgIGZvY3VzZWQgPSB0cnVlO1xuICB9O1xuICBjb25zdCBvblRvdWNoZW5kID0gKGV2KSA9PiB7XG4gICAgLy8gaWYgYXBwIGRpZCBzY3JvbGwgcmV0dXJuIGVhcmx5XG4gICAgaWYgKGRpZFNjcm9sbCkge1xuICAgICAgZGlkU2Nyb2xsID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGFjdGl2ZSA9IGRvYy5hY3RpdmVFbGVtZW50O1xuICAgIGlmICghYWN0aXZlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIG9ubHkgYmx1ciBpZiB0aGUgYWN0aXZlIGVsZW1lbnQgaXMgYSB0ZXh0LWlucHV0IG9yIGEgdGV4dGFyZWFcbiAgICBpZiAoYWN0aXZlLm1hdGNoZXMoU0tJUF9TRUxFQ1RPUikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gaWYgdGhlIHNlbGVjdGVkIHRhcmdldCBpcyB0aGUgYWN0aXZlIGVsZW1lbnQsIGRvIG5vdCBibHVyXG4gICAgY29uc3QgdGFwcGVkID0gZXYudGFyZ2V0O1xuICAgIGlmICh0YXBwZWQgPT09IGFjdGl2ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGFwcGVkLm1hdGNoZXMoU0tJUF9TRUxFQ1RPUikgfHwgdGFwcGVkLmNsb3Nlc3QoU0tJUF9TRUxFQ1RPUikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9jdXNlZCA9IGZhbHNlO1xuICAgIC8vIFRPRE86IGZpbmQgYSBiZXR0ZXIgd2F5LCB3aHkgNTBtcz9cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghZm9jdXNlZCkge1xuICAgICAgICBhY3RpdmUuYmx1cigpO1xuICAgICAgfVxuICAgIH0sIDUwKTtcbiAgfTtcbiAgYWRkRXZlbnRMaXN0ZW5lcihkb2MsICdpb25TY3JvbGxTdGFydCcsIG9uU2Nyb2xsKTtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCBvbkZvY3VzaW4sIHRydWUpO1xuICBkb2MuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBvblRvdWNoZW5kLCBmYWxzZSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2MsICdpb25TY3JvbGxTdGFydCcsIG9uU2Nyb2xsLCB0cnVlKTtcbiAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIG9uRm9jdXNpbiwgdHJ1ZSk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgb25Ub3VjaGVuZCwgZmFsc2UpO1xuICB9O1xufTtcblxuY29uc3QgU0NST0xMX0FTU0lTVF9TUEVFRCA9IDAuMztcbmNvbnN0IGdldFNjcm9sbERhdGEgPSAoY29tcG9uZW50RWwsIGNvbnRlbnRFbCwga2V5Ym9hcmRIZWlnaHQpID0+IHtcbiAgY29uc3QgaXRlbUVsID0gY29tcG9uZW50RWwuY2xvc2VzdCgnaW9uLWl0ZW0sW2lvbi1pdGVtXScpIHx8IGNvbXBvbmVudEVsO1xuICByZXR1cm4gY2FsY1Njcm9sbERhdGEoaXRlbUVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLCBjb250ZW50RWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksIGtleWJvYXJkSGVpZ2h0LCBjb21wb25lbnRFbC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3LmlubmVySGVpZ2h0KTtcbn07XG5jb25zdCBjYWxjU2Nyb2xsRGF0YSA9IChpbnB1dFJlY3QsIGNvbnRlbnRSZWN0LCBrZXlib2FyZEhlaWdodCwgcGxhdGZvcm1IZWlnaHQpID0+IHtcbiAgLy8gY29tcHV0ZSBpbnB1dCdzIFkgdmFsdWVzIHJlbGF0aXZlIHRvIHRoZSBib2R5XG4gIGNvbnN0IGlucHV0VG9wID0gaW5wdXRSZWN0LnRvcDtcbiAgY29uc3QgaW5wdXRCb3R0b20gPSBpbnB1dFJlY3QuYm90dG9tO1xuICAvLyBjb21wdXRlIHZpc2libGUgYXJlYVxuICBjb25zdCB2aXNpYmxlQXJlYVRvcCA9IGNvbnRlbnRSZWN0LnRvcDtcbiAgY29uc3QgdmlzaWJsZUFyZWFCb3R0b20gPSBNYXRoLm1pbihjb250ZW50UmVjdC5ib3R0b20sIHBsYXRmb3JtSGVpZ2h0IC0ga2V5Ym9hcmRIZWlnaHQpO1xuICAvLyBjb21wdXRlIHNhZmUgYXJlYVxuICBjb25zdCBzYWZlQXJlYVRvcCA9IHZpc2libGVBcmVhVG9wICsgMTU7XG4gIGNvbnN0IHNhZmVBcmVhQm90dG9tID0gdmlzaWJsZUFyZWFCb3R0b20gKiAwLjc1O1xuICAvLyBmaWd1cmUgb3V0IGlmIGVhY2ggZWRnZSBvZiB0aGUgaW5wdXQgaXMgd2l0aGluIHRoZSBzYWZlIGFyZWFcbiAgY29uc3QgZGlzdGFuY2VUb0JvdHRvbSA9IHNhZmVBcmVhQm90dG9tIC0gaW5wdXRCb3R0b207XG4gIGNvbnN0IGRpc3RhbmNlVG9Ub3AgPSBzYWZlQXJlYVRvcCAtIGlucHV0VG9wO1xuICAvLyBkZXNpcmVkU2Nyb2xsQW1vdW50IGlzIHRoZSBuZWdhdGVkIGRpc3RhbmNlIHRvIHRoZSBzYWZlIGFyZWEgYWNjb3JkaW5nIHRvIG91ciBjYWxjdWxhdGlvbnMuXG4gIGNvbnN0IGRlc2lyZWRTY3JvbGxBbW91bnQgPSBNYXRoLnJvdW5kKGRpc3RhbmNlVG9Cb3R0b20gPCAwID8gLWRpc3RhbmNlVG9Cb3R0b20gOiBkaXN0YW5jZVRvVG9wID4gMCA/IC1kaXN0YW5jZVRvVG9wIDogMCk7XG4gIC8vIG91ciBjYWxjdWxhdGlvbnMgbWFrZSBzb21lIGFzc3VtcHRpb25zIHRoYXQgYXJlbid0IGFsd2F5cyB0cnVlLCBsaWtlIHRoZSBrZXlib2FyZCBiZWluZyBjbG9zZWQgd2hlbiBhbiBpbnB1dFxuICAvLyBnZXRzIGZvY3VzLCBzbyBtYWtlIHN1cmUgd2UgZG9uJ3Qgc2Nyb2xsIHRoZSBpbnB1dCBhYm92ZSB0aGUgdmlzaWJsZSBhcmVhXG4gIGNvbnN0IHNjcm9sbEFtb3VudCA9IE1hdGgubWluKGRlc2lyZWRTY3JvbGxBbW91bnQsIGlucHV0VG9wIC0gdmlzaWJsZUFyZWFUb3ApO1xuICBjb25zdCBkaXN0YW5jZSA9IE1hdGguYWJzKHNjcm9sbEFtb3VudCk7XG4gIGNvbnN0IGR1cmF0aW9uID0gZGlzdGFuY2UgLyBTQ1JPTExfQVNTSVNUX1NQRUVEO1xuICBjb25zdCBzY3JvbGxEdXJhdGlvbiA9IE1hdGgubWluKDQwMCwgTWF0aC5tYXgoMTUwLCBkdXJhdGlvbikpO1xuICByZXR1cm4ge1xuICAgIHNjcm9sbEFtb3VudCxcbiAgICBzY3JvbGxEdXJhdGlvbixcbiAgICBzY3JvbGxQYWRkaW5nOiBrZXlib2FyZEhlaWdodCxcbiAgICBpbnB1dFNhZmVZOiAtKGlucHV0VG9wIC0gc2FmZUFyZWFUb3ApICsgNCxcbiAgfTtcbn07XG5cbmNvbnN0IGVuYWJsZVNjcm9sbEFzc2lzdCA9IChjb21wb25lbnRFbCwgaW5wdXRFbCwgY29udGVudEVsLCBmb290ZXJFbCwga2V5Ym9hcmRIZWlnaHQpID0+IHtcbiAgbGV0IGNvb3JkO1xuICBjb25zdCB0b3VjaFN0YXJ0ID0gKGV2KSA9PiB7XG4gICAgY29vcmQgPSBwb2ludGVyQ29vcmQoZXYpO1xuICB9O1xuICBjb25zdCB0b3VjaEVuZCA9IChldikgPT4ge1xuICAgIC8vIGlucHV0IGNvdmVyIHRvdWNoZW5kL21vdXNldXBcbiAgICBpZiAoIWNvb3JkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGdldCB3aGVyZSB0aGUgdG91Y2hlbmQvbW91c2V1cCBlbmRlZFxuICAgIGNvbnN0IGVuZENvb3JkID0gcG9pbnRlckNvb3JkKGV2KTtcbiAgICAvLyBmb2N1cyB0aGlzIGlucHV0IGlmIHRoZSBwb2ludGVyIGhhc24ndCBtb3ZlZCBYWCBwaXhlbHNcbiAgICAvLyBhbmQgdGhlIGlucHV0IGRvZXNuJ3QgYWxyZWFkeSBoYXZlIGZvY3VzXG4gICAgaWYgKCFoYXNQb2ludGVyTW92ZWQoNiwgY29vcmQsIGVuZENvb3JkKSAmJiAhaXNGb2N1c2VkKGlucHV0RWwpKSB7XG4gICAgICAvLyBiZWdpbiB0aGUgaW5wdXQgZm9jdXMgcHJvY2Vzc1xuICAgICAganNTZXRGb2N1cyhjb21wb25lbnRFbCwgaW5wdXRFbCwgY29udGVudEVsLCBmb290ZXJFbCwga2V5Ym9hcmRIZWlnaHQpO1xuICAgIH1cbiAgfTtcbiAgY29tcG9uZW50RWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRvdWNoU3RhcnQsIHsgY2FwdHVyZTogdHJ1ZSwgcGFzc2l2ZTogdHJ1ZSB9KTtcbiAgY29tcG9uZW50RWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0b3VjaEVuZCwgdHJ1ZSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29tcG9uZW50RWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRvdWNoU3RhcnQsIHRydWUpO1xuICAgIGNvbXBvbmVudEVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdG91Y2hFbmQsIHRydWUpO1xuICB9O1xufTtcbmNvbnN0IGpzU2V0Rm9jdXMgPSBhc3luYyAoY29tcG9uZW50RWwsIGlucHV0RWwsIGNvbnRlbnRFbCwgZm9vdGVyRWwsIGtleWJvYXJkSGVpZ2h0KSA9PiB7XG4gIGlmICghY29udGVudEVsICYmICFmb290ZXJFbCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBzY3JvbGxEYXRhID0gZ2V0U2Nyb2xsRGF0YShjb21wb25lbnRFbCwgKGNvbnRlbnRFbCB8fCBmb290ZXJFbCksIGtleWJvYXJkSGVpZ2h0KTtcbiAgaWYgKGNvbnRlbnRFbCAmJiBNYXRoLmFicyhzY3JvbGxEYXRhLnNjcm9sbEFtb3VudCkgPCA0KSB7XG4gICAgLy8gdGhlIHRleHQgaW5wdXQgaXMgaW4gYSBzYWZlIHBvc2l0aW9uIHRoYXQgZG9lc24ndFxuICAgIC8vIHJlcXVpcmUgaXQgdG8gYmUgc2Nyb2xsZWQgaW50byB2aWV3LCBqdXN0IHNldCBmb2N1cyBub3dcbiAgICBpbnB1dEVsLmZvY3VzKCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIHRlbXBvcmFyaWx5IG1vdmUgdGhlIGZvY3VzIHRvIHRoZSBmb2N1cyBob2xkZXIgc28gdGhlIGJyb3dzZXJcbiAgLy8gZG9lc24ndCBmcmVhayBvdXQgd2hpbGUgaXQncyB0cnlpbmcgdG8gZ2V0IHRoZSBpbnB1dCBpbiBwbGFjZVxuICAvLyBhdCB0aGlzIHBvaW50IHRoZSBuYXRpdmUgdGV4dCBpbnB1dCBzdGlsbCBkb2VzIG5vdCBoYXZlIGZvY3VzXG4gIHJlbG9jYXRlSW5wdXQoY29tcG9uZW50RWwsIGlucHV0RWwsIHRydWUsIHNjcm9sbERhdGEuaW5wdXRTYWZlWSk7XG4gIGlucHV0RWwuZm9jdXMoKTtcbiAgLyoqXG4gICAqIFJlbG9jYXRpbmcvRm9jdXNpbmcgaW5wdXQgY2F1c2VzIHRoZVxuICAgKiBjbGljayBldmVudCB0byBiZSBjYW5jZWxsZWQsIHNvXG4gICAqIG1hbnVhbGx5IGZpcmUgb25lIGhlcmUuXG4gICAqL1xuICByYWYoKCkgPT4gY29tcG9uZW50RWwuY2xpY2soKSk7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGxldCBzY3JvbGxDb250ZW50VGltZW91dDtcbiAgICBjb25zdCBzY3JvbGxDb250ZW50ID0gYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gY2xlYW4gdXAgbGlzdGVuZXJzIGFuZCB0aW1lb3V0c1xuICAgICAgaWYgKHNjcm9sbENvbnRlbnRUaW1lb3V0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHNjcm9sbENvbnRlbnRUaW1lb3V0KTtcbiAgICAgIH1cbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdpb25LZXlib2FyZERpZFNob3cnLCBkb3VibGVLZXlib2FyZEV2ZW50TGlzdGVuZXIpO1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2lvbktleWJvYXJkRGlkU2hvdycsIHNjcm9sbENvbnRlbnQpO1xuICAgICAgLy8gc2Nyb2xsIHRoZSBpbnB1dCBpbnRvIHBsYWNlXG4gICAgICBpZiAoY29udGVudEVsKSB7XG4gICAgICAgIGF3YWl0IHNjcm9sbEJ5UG9pbnQoY29udGVudEVsLCAwLCBzY3JvbGxEYXRhLnNjcm9sbEFtb3VudCwgc2Nyb2xsRGF0YS5zY3JvbGxEdXJhdGlvbik7XG4gICAgICB9XG4gICAgICAvLyB0aGUgc2Nyb2xsIHZpZXcgaXMgaW4gdGhlIGNvcnJlY3QgcG9zaXRpb24gbm93XG4gICAgICAvLyBnaXZlIHRoZSBuYXRpdmUgdGV4dCBpbnB1dCBmb2N1c1xuICAgICAgcmVsb2NhdGVJbnB1dChjb21wb25lbnRFbCwgaW5wdXRFbCwgZmFsc2UsIHNjcm9sbERhdGEuaW5wdXRTYWZlWSk7XG4gICAgICAvLyBlbnN1cmUgdGhpcyBpcyB0aGUgZm9jdXNlZCBpbnB1dFxuICAgICAgaW5wdXRFbC5mb2N1cygpO1xuICAgIH07XG4gICAgY29uc3QgZG91YmxlS2V5Ym9hcmRFdmVudExpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2lvbktleWJvYXJkRGlkU2hvdycsIGRvdWJsZUtleWJvYXJkRXZlbnRMaXN0ZW5lcik7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignaW9uS2V5Ym9hcmREaWRTaG93Jywgc2Nyb2xsQ29udGVudCk7XG4gICAgfTtcbiAgICBpZiAoY29udGVudEVsKSB7XG4gICAgICBjb25zdCBzY3JvbGxFbCA9IGF3YWl0IGdldFNjcm9sbEVsZW1lbnQoY29udGVudEVsKTtcbiAgICAgIC8qKlxuICAgICAgICogc2Nyb2xsRGF0YSB3aWxsIG9ubHkgY29uc2lkZXIgdGhlIGFtb3VudCB3ZSBuZWVkXG4gICAgICAgKiB0byBzY3JvbGwgaW4gb3JkZXIgdG8gcHJvcGVybHkgYnJpbmcgdGhlIGlucHV0XG4gICAgICAgKiBpbnRvIHZpZXcuIEl0IHdpbGwgbm90IGNvbnNpZGVyIHRoZSBhbW91bnRcbiAgICAgICAqIHdlIGNhbiBzY3JvbGwgaW4gdGhlIGNvbnRlbnQgZWxlbWVudC5cbiAgICAgICAqIEFzIGEgcmVzdWx0LCBzY3JvbGxEYXRhIG1heSByZXF1ZXN0IGEgZ3JlYXRlclxuICAgICAgICogc2Nyb2xsIHBvc2l0aW9uIHRoYW4gaXMgY3VycmVudGx5IGF2YWlsYWJsZVxuICAgICAgICogaW4gdGhlIERPTS4gSWYgdGhpcyBpcyB0aGUgY2FzZSwgd2UgbmVlZCB0b1xuICAgICAgICogd2FpdCBmb3IgdGhlIHdlYnZpZXcgdG8gcmVzaXplL3RoZSBrZXlib2FyZFxuICAgICAgICogdG8gc2hvdyBpbiBvcmRlciBmb3IgYWRkaXRpb25hbCBzY3JvbGxcbiAgICAgICAqIGJhbmR3aWR0aCB0byBiZWNvbWUgYXZhaWxhYmxlLlxuICAgICAgICovXG4gICAgICBjb25zdCB0b3RhbFNjcm9sbEFtb3VudCA9IHNjcm9sbEVsLnNjcm9sbEhlaWdodCAtIHNjcm9sbEVsLmNsaWVudEhlaWdodDtcbiAgICAgIGlmIChzY3JvbGxEYXRhLnNjcm9sbEFtb3VudCA+IHRvdGFsU2Nyb2xsQW1vdW50IC0gc2Nyb2xsRWwuc2Nyb2xsVG9wKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPbiBpT1MgZGV2aWNlcywgdGhlIHN5c3RlbSB3aWxsIHNob3cgYSBcIlBhc3N3b3Jkc1wiIGJhciBhYm92ZSB0aGUga2V5Ym9hcmRcbiAgICAgICAgICogYWZ0ZXIgdGhlIGluaXRpYWwga2V5Ym9hcmQgaXMgc2hvd24uIFRoaXMgcHJldmVudHMgdGhlIHdlYnZpZXcgZnJvbSByZXNpemluZ1xuICAgICAgICAgKiB1bnRpbCB0aGUgXCJQYXNzd29yZHNcIiBiYXIgaXMgc2hvd24sIHNvIHdlIG5lZWQgdG8gd2FpdCBmb3IgdGhhdCB0byBoYXBwZW4gZmlyc3QuXG4gICAgICAgICAqL1xuICAgICAgICBpZiAoaW5wdXRFbC50eXBlID09PSAncGFzc3dvcmQnKSB7XG4gICAgICAgICAgLy8gQWRkIDUwcHggdG8gYWNjb3VudCBmb3IgdGhlIFwiUGFzc3dvcmRzXCIgYmFyXG4gICAgICAgICAgc2Nyb2xsRGF0YS5zY3JvbGxBbW91bnQgKz0gNTA7XG4gICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2lvbktleWJvYXJkRGlkU2hvdycsIGRvdWJsZUtleWJvYXJkRXZlbnRMaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2lvbktleWJvYXJkRGlkU2hvdycsIHNjcm9sbENvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIHNob3VsZCBvbmx5IGZpcmUgaW4gMiBpbnN0YW5jZXM6XG4gICAgICAgICAqIDEuIFRoZSBhcHAgaXMgdmVyeSBzbG93LlxuICAgICAgICAgKiAyLiBUaGUgYXBwIGlzIHJ1bm5pbmcgaW4gYSBicm93c2VyIG9uIGFuIG9sZCBPU1xuICAgICAgICAgKiB0aGF0IGRvZXMgbm90IHN1cHBvcnQgSW9uaWMgS2V5Ym9hcmQgRXZlbnRzXG4gICAgICAgICAqL1xuICAgICAgICBzY3JvbGxDb250ZW50VGltZW91dCA9IHNldFRpbWVvdXQoc2Nyb2xsQ29udGVudCwgMTAwMCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgc2Nyb2xsQ29udGVudCgpO1xuICB9XG59O1xuY29uc3QgaGFzUG9pbnRlck1vdmVkID0gKHRocmVzaG9sZCwgc3RhcnRDb29yZCwgZW5kQ29vcmQpID0+IHtcbiAgaWYgKHN0YXJ0Q29vcmQgJiYgZW5kQ29vcmQpIHtcbiAgICBjb25zdCBkZWx0YVggPSBzdGFydENvb3JkLnggLSBlbmRDb29yZC54O1xuICAgIGNvbnN0IGRlbHRhWSA9IHN0YXJ0Q29vcmQueSAtIGVuZENvb3JkLnk7XG4gICAgY29uc3QgZGlzdGFuY2UgPSBkZWx0YVggKiBkZWx0YVggKyBkZWx0YVkgKiBkZWx0YVk7XG4gICAgcmV0dXJuIGRpc3RhbmNlID4gdGhyZXNob2xkICogdGhyZXNob2xkO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmNvbnN0IFBBRERJTkdfVElNRVJfS0VZID0gJyRpb25QYWRkaW5nVGltZXInO1xuY29uc3QgZW5hYmxlU2Nyb2xsUGFkZGluZyA9IChrZXlib2FyZEhlaWdodCkgPT4ge1xuICBjb25zdCBkb2MgPSBkb2N1bWVudDtcbiAgY29uc3Qgb25Gb2N1c2luID0gKGV2KSA9PiB7XG4gICAgc2V0U2Nyb2xsUGFkZGluZyhldi50YXJnZXQsIGtleWJvYXJkSGVpZ2h0KTtcbiAgfTtcbiAgY29uc3Qgb25Gb2N1c291dCA9IChldikgPT4ge1xuICAgIHNldFNjcm9sbFBhZGRpbmcoZXYudGFyZ2V0LCAwKTtcbiAgfTtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCBvbkZvY3VzaW4pO1xuICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCBvbkZvY3Vzb3V0KTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIG9uRm9jdXNpbik7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0Jywgb25Gb2N1c291dCk7XG4gIH07XG59O1xuY29uc3Qgc2V0U2Nyb2xsUGFkZGluZyA9IChpbnB1dCwga2V5Ym9hcmRIZWlnaHQpID0+IHtcbiAgdmFyIF9hLCBfYjtcbiAgaWYgKGlucHV0LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGlucHV0LnBhcmVudEVsZW1lbnQgJiYgaW5wdXQucGFyZW50RWxlbWVudC50YWdOYW1lID09PSAnSU9OLUlOUFVUJykge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoKChfYiA9IChfYSA9IGlucHV0LnBhcmVudEVsZW1lbnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudGFnTmFtZSkgPT09ICdJT04tU0VBUkNIQkFSJykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBlbCA9IGZpbmRDbG9zZXN0SW9uQ29udGVudChpbnB1dCk7XG4gIGlmIChlbCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB0aW1lciA9IGVsW1BBRERJTkdfVElNRVJfS0VZXTtcbiAgaWYgKHRpbWVyKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgfVxuICBpZiAoa2V5Ym9hcmRIZWlnaHQgPiAwKSB7XG4gICAgZWwuc3R5bGUuc2V0UHJvcGVydHkoJy0ta2V5Ym9hcmQtb2Zmc2V0JywgYCR7a2V5Ym9hcmRIZWlnaHR9cHhgKTtcbiAgfVxuICBlbHNlIHtcbiAgICBlbFtQQURESU5HX1RJTUVSX0tFWV0gPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGVsLnN0eWxlLnNldFByb3BlcnR5KCctLWtleWJvYXJkLW9mZnNldCcsICcwcHgnKTtcbiAgICB9LCAxMjApO1xuICB9XG59O1xuXG5jb25zdCBJTlBVVF9CTFVSUklORyA9IHRydWU7XG5jb25zdCBTQ1JPTExfUEFERElORyA9IHRydWU7XG5jb25zdCBzdGFydElucHV0U2hpbXMgPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IGRvYyA9IGRvY3VtZW50O1xuICBjb25zdCBrZXlib2FyZEhlaWdodCA9IGNvbmZpZy5nZXROdW1iZXIoJ2tleWJvYXJkSGVpZ2h0JywgMjkwKTtcbiAgY29uc3Qgc2Nyb2xsQXNzaXN0ID0gY29uZmlnLmdldEJvb2xlYW4oJ3Njcm9sbEFzc2lzdCcsIHRydWUpO1xuICBjb25zdCBoaWRlQ2FyZXQgPSBjb25maWcuZ2V0Qm9vbGVhbignaGlkZUNhcmV0T25TY3JvbGwnLCB0cnVlKTtcbiAgY29uc3QgaW5wdXRCbHVycmluZyA9IGNvbmZpZy5nZXRCb29sZWFuKCdpbnB1dEJsdXJyaW5nJywgdHJ1ZSk7XG4gIGNvbnN0IHNjcm9sbFBhZGRpbmcgPSBjb25maWcuZ2V0Qm9vbGVhbignc2Nyb2xsUGFkZGluZycsIHRydWUpO1xuICBjb25zdCBpbnB1dHMgPSBBcnJheS5mcm9tKGRvYy5xdWVyeVNlbGVjdG9yQWxsKCdpb24taW5wdXQsIGlvbi10ZXh0YXJlYScpKTtcbiAgY29uc3QgaGlkZUNhcmV0TWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgY29uc3Qgc2Nyb2xsQXNzaXN0TWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgY29uc3QgcmVnaXN0ZXJJbnB1dCA9IGFzeW5jIChjb21wb25lbnRFbCkgPT4ge1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBjb21wb25lbnRPblJlYWR5KGNvbXBvbmVudEVsLCByZXNvbHZlKSk7XG4gICAgY29uc3QgaW5wdXRSb290ID0gY29tcG9uZW50RWwuc2hhZG93Um9vdCB8fCBjb21wb25lbnRFbDtcbiAgICBjb25zdCBpbnB1dEVsID0gaW5wdXRSb290LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0JykgfHwgaW5wdXRSb290LnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhJyk7XG4gICAgY29uc3Qgc2Nyb2xsRWwgPSBmaW5kQ2xvc2VzdElvbkNvbnRlbnQoY29tcG9uZW50RWwpO1xuICAgIGNvbnN0IGZvb3RlckVsID0gIXNjcm9sbEVsID8gY29tcG9uZW50RWwuY2xvc2VzdCgnaW9uLWZvb3RlcicpIDogbnVsbDtcbiAgICBpZiAoIWlucHV0RWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCEhc2Nyb2xsRWwgJiYgaGlkZUNhcmV0ICYmICFoaWRlQ2FyZXRNYXAuaGFzKGNvbXBvbmVudEVsKSkge1xuICAgICAgY29uc3Qgcm1GbiA9IGVuYWJsZUhpZGVDYXJldE9uU2Nyb2xsKGNvbXBvbmVudEVsLCBpbnB1dEVsLCBzY3JvbGxFbCk7XG4gICAgICBoaWRlQ2FyZXRNYXAuc2V0KGNvbXBvbmVudEVsLCBybUZuKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogZGF0ZS9kYXRldGltZS1sb2NhbGUgaW5wdXRzIG9uIG1vYmlsZSBkZXZpY2VzIHNob3cgZGF0ZSBwaWNrZXJcbiAgICAgKiBvdmVybGF5cyBpbnN0ZWFkIG9mIGtleWJvYXJkcy4gQXMgYSByZXN1bHQsIHNjcm9sbCBhc3Npc3QgaXNcbiAgICAgKiBub3QgbmVlZGVkLiBUaGlzIGFsc28gd29ya3MgYXJvdW5kIGEgYnVnIGluIGlPUyA8MTYgd2hlcmVcbiAgICAgKiBzY3JvbGwgYXNzaXN0IGNhdXNlcyB0aGUgYnJvd3NlciB0byBsb2NrIHVwLiBTZWUgRlctMTk5Ny5cbiAgICAgKi9cbiAgICBjb25zdCBpc0RhdGVJbnB1dCA9IGlucHV0RWwudHlwZSA9PT0gJ2RhdGUnIHx8IGlucHV0RWwudHlwZSA9PT0gJ2RhdGV0aW1lLWxvY2FsJztcbiAgICBpZiAoIWlzRGF0ZUlucHV0ICYmXG4gICAgICAoISFzY3JvbGxFbCB8fCAhIWZvb3RlckVsKSAmJlxuICAgICAgc2Nyb2xsQXNzaXN0ICYmXG4gICAgICAhc2Nyb2xsQXNzaXN0TWFwLmhhcyhjb21wb25lbnRFbCkpIHtcbiAgICAgIGNvbnN0IHJtRm4gPSBlbmFibGVTY3JvbGxBc3Npc3QoY29tcG9uZW50RWwsIGlucHV0RWwsIHNjcm9sbEVsLCBmb290ZXJFbCwga2V5Ym9hcmRIZWlnaHQpO1xuICAgICAgc2Nyb2xsQXNzaXN0TWFwLnNldChjb21wb25lbnRFbCwgcm1Gbik7XG4gICAgfVxuICB9O1xuICBjb25zdCB1bnJlZ2lzdGVySW5wdXQgPSAoY29tcG9uZW50RWwpID0+IHtcbiAgICBpZiAoaGlkZUNhcmV0KSB7XG4gICAgICBjb25zdCBmbiA9IGhpZGVDYXJldE1hcC5nZXQoY29tcG9uZW50RWwpO1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9XG4gICAgICBoaWRlQ2FyZXRNYXAuZGVsZXRlKGNvbXBvbmVudEVsKTtcbiAgICB9XG4gICAgaWYgKHNjcm9sbEFzc2lzdCkge1xuICAgICAgY29uc3QgZm4gPSBzY3JvbGxBc3Npc3RNYXAuZ2V0KGNvbXBvbmVudEVsKTtcbiAgICAgIGlmIChmbikge1xuICAgICAgICBmbigpO1xuICAgICAgfVxuICAgICAgc2Nyb2xsQXNzaXN0TWFwLmRlbGV0ZShjb21wb25lbnRFbCk7XG4gICAgfVxuICB9O1xuICBpZiAoaW5wdXRCbHVycmluZyAmJiBJTlBVVF9CTFVSUklORykge1xuICAgIGVuYWJsZUlucHV0Qmx1cnJpbmcoKTtcbiAgfVxuICBpZiAoc2Nyb2xsUGFkZGluZyAmJiBTQ1JPTExfUEFERElORykge1xuICAgIGVuYWJsZVNjcm9sbFBhZGRpbmcoa2V5Ym9hcmRIZWlnaHQpO1xuICB9XG4gIC8vIElucHV0IG1pZ2h0IGJlIGFscmVhZHkgbG9hZGVkIGluIHRoZSBET00gYmVmb3JlIGlvbi1kZXZpY2UtaGFja3MgZGlkLlxuICAvLyBBdCB0aGlzIHBvaW50IHdlIG5lZWQgdG8gbG9vayBmb3IgYWxsIG9mIHRoZSBpbnB1dHMgbm90IHJlZ2lzdGVyZWQgeWV0XG4gIC8vIGFuZCByZWdpc3RlciB0aGVtLlxuICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgIHJlZ2lzdGVySW5wdXQoaW5wdXQpO1xuICB9XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdpb25JbnB1dERpZExvYWQnLCAoKGV2KSA9PiB7XG4gICAgcmVnaXN0ZXJJbnB1dChldi5kZXRhaWwpO1xuICB9KSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdpb25JbnB1dERpZFVubG9hZCcsICgoZXYpID0+IHtcbiAgICB1bnJlZ2lzdGVySW5wdXQoZXYuZGV0YWlsKTtcbiAgfSkpO1xufTtcblxuZXhwb3J0IHsgc3RhcnRJbnB1dFNoaW1zIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../ishlibjs/node_modules/@ionic/core/components/input-shims.js\n"));

/***/ })

}]);