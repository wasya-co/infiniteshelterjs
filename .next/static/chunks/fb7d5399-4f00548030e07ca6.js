"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3737],{2212:function(e,t,i){i.r(t),i.d(t,{ACESFilmicToneMapping:function(){return ei},AddEquation:function(){return M},AddOperation:function(){return J},AdditiveAnimationBlendMode:function(){return tD},AdditiveBlending:function(){return b},AlphaFormat:function(){return eD},AlwaysDepth:function(){return G},AlwaysStencilFunc:function(){return ir},AmbientLight:function(){return hh},AmbientLightProbe:function(){return hT},AnimationClip:function(){return uH},AnimationLoader:function(){return u5},AnimationMixer:function(){return hZ},AnimationObjectGroup:function(){return hX},AnimationUtils:function(){return uR},ArcCurve:function(){return lb},ArrayCamera:function(){return oi},ArrowHelper:function(){return cF},Audio:function(){return hF},AudioAnalyser:function(){return h2},AudioContext:function(){return h_},AudioListener:function(){return hI},AudioLoader:function(){return hS},AxesHelper:function(){return cB},AxisHelper:function(){return dr},BackSide:function(){return m},BasicDepthPacking:function(){return tk},BasicShadowMap:function(){return h},BinaryTextureLoader:function(){return dh},Bone:function(){return oN},BooleanKeyframeTrack:function(){return uF},BoundingBoxHelper:function(){return da},Box2:function(){return ca},Box3:function(){return i5},Box3Helper:function(){return c0},BoxBufferGeometry:function(){return rz},BoxGeometry:function(){return rz},BoxHelper:function(){return cR},BufferAttribute:function(){return ri},BufferGeometry:function(){return ry},BufferGeometryLoader:function(){return h$},ByteType:function(){return eS},Cache:function(){return u3},Camera:function(){return rH},CameraHelper:function(){return cA},CanvasRenderer:function(){return dd},CanvasTexture:function(){return ll},CatmullRomCurve3:function(){return lE},CineonToneMapping:function(){return et},CircleBufferGeometry:function(){return lh},CircleGeometry:function(){return lh},ClampToEdgeWrapping:function(){return ed},Clock:function(){return h1},Color:function(){return nK},ColorKeyframeTrack:function(){return uB},CompressedTexture:function(){return lo},CompressedTextureLoader:function(){return u7},ConeBufferGeometry:function(){return ld},ConeGeometry:function(){return ld},CubeCamera:function(){return r3},CubeReflectionMapping:function(){return ea},CubeRefractionMapping:function(){return es},CubeTexture:function(){return rk},CubeTextureLoader:function(){return uq},CubeUVReflectionMapping:function(){return eu},CubeUVRefractionMapping:function(){return eh},CubicBezierCurve:function(){return lR},CubicBezierCurve3:function(){return l0},CubicInterpolant:function(){return uC},CullFaceBack:function(){return o},CullFaceFront:function(){return l},CullFaceFrontBack:function(){return u},CullFaceNone:function(){return s},Curve:function(){return ly},CurvePath:function(){return lz},CustomBlending:function(){return S},CustomToneMapping:function(){return en},CylinderBufferGeometry:function(){return lc},CylinderGeometry:function(){return lc},Cylindrical:function(){return cn},DataTexture:function(){return oU},DataTexture2DArray:function(){return a1},DataTexture3D:function(){return aI},DataTextureLoader:function(){return uX},DataUtils:function(){return cO},DecrementStencilOp:function(){return tq},DecrementWrapStencilOp:function(){return tY},DefaultLoadingManager:function(){return uV},DepthFormat:function(){return eU},DepthStencilFormat:function(){return eO},DepthTexture:function(){return lu},DirectionalLight:function(){return hu},DirectionalLightHelper:function(){return cM},DiscreteInterpolant:function(){return uD},DodecahedronBufferGeometry:function(){return lf},DodecahedronGeometry:function(){return lf},DoubleSide:function(){return g},DstAlphaFactor:function(){return B},DstColorFactor:function(){return N},DynamicBufferAttribute:function(){return cY},DynamicCopyUsage:function(){return id},DynamicDrawUsage:function(){return is},DynamicReadUsage:function(){return iu},EdgesGeometry:function(){return lx},EdgesHelper:function(){return ds},EllipseCurve:function(){return l8},EqualDepth:function(){return W},EqualStencilFunc:function(){return tK},EquirectangularReflectionMapping:function(){return eo},EquirectangularRefractionMapping:function(){return el},Euler:function(){return nT},EventDispatcher:function(){return i$},ExtrudeBufferGeometry:function(){return uo},ExtrudeGeometry:function(){return uo},FaceColors:function(){return c3},FileLoader:function(){return u6},FlatShading:function(){return $},Float16BufferAttribute:function(){return rh},Float32Attribute:function(){return di},Float32BufferAttribute:function(){return rc},Float64Attribute:function(){return dn},Float64BufferAttribute:function(){return rd},FloatType:function(){return eL},Fog:function(){return oc},FogExp2:function(){return oh},Font:function(){return dx},FontLoader:function(){return dv},FrontSide:function(){return f},Frustum:function(){return rq},GLBufferAttribute:function(){return hK},GLSL1:function(){return im},GLSL3:function(){return ig},GammaEncoding:function(){return tU},GreaterDepth:function(){return q},GreaterEqualDepth:function(){return j},GreaterEqualStencilFunc:function(){return ii},GreaterStencilFunc:function(){return ie},GridHelper:function(){return c8},Group:function(){return on},HalfFloatType:function(){return e1},HemisphereLight:function(){return uJ},HemisphereLightHelper:function(){return cy},HemisphereLightProbe:function(){return hM},IcosahedronBufferGeometry:function(){return uu},IcosahedronGeometry:function(){return uu},ImageBitmapLoader:function(){return hb},ImageLoader:function(){return uj},ImageUtils:function(){return iN},ImmediateRenderObject:function(){return cu},IncrementStencilOp:function(){return tj},IncrementWrapStencilOp:function(){return tX},InstancedBufferAttribute:function(){return oG},InstancedBufferGeometry:function(){return hg},InstancedInterleavedBuffer:function(){return hQ},InstancedMesh:function(){return o4},Int16Attribute:function(){return cK},Int16BufferAttribute:function(){return rs},Int32Attribute:function(){return de},Int32BufferAttribute:function(){return rl},Int8Attribute:function(){return cZ},Int8BufferAttribute:function(){return rn},IntType:function(){return eE},InterleavedBuffer:function(){return op},InterleavedBufferAttribute:function(){return om},Interpolant:function(){return u0},InterpolateDiscrete:function(){return tA},InterpolateLinear:function(){return tL},InterpolateSmooth:function(){return t1},InvertStencilOp:function(){return tZ},JSONLoader:function(){return dp},KeepStencilOp:function(){return t5},KeyframeTrack:function(){return uI},LOD:function(){return oC},LatheBufferGeometry:function(){return uh},LatheGeometry:function(){return uh},Layers:function(){return nE},LensFlare:function(){return dm},LessDepth:function(){return k},LessEqualDepth:function(){return V},LessEqualStencilFunc:function(){return t9},LessStencilFunc:function(){return tQ},Light:function(){return uZ},LightProbe:function(){return hp},Line:function(){return oY},Line3:function(){return cl},LineBasicMaterial:function(){return o6},LineCurve:function(){return lC},LineCurve3:function(){return lP},LineDashedMaterial:function(){return uL},LineLoop:function(){return oK},LinePieces:function(){return cH},LineSegments:function(){return oQ},LineStrip:function(){return c2},LinearEncoding:function(){return tz},LinearFilter:function(){return ex},LinearInterpolant:function(){return uP},LinearMipMapLinearFilter:function(){return ew},LinearMipMapNearestFilter:function(){return e8},LinearMipmapLinearFilter:function(){return eb},LinearMipmapNearestFilter:function(){return ey},LinearToneMapping:function(){return K},Loader:function(){return uW},LoaderUtils:function(){return hm},LoadingManager:function(){return uk},LogLuvEncoding:function(){return t2},LoopOnce:function(){return tM},LoopPingPong:function(){return tE},LoopRepeat:function(){return tT},LuminanceAlphaFormat:function(){return ez},LuminanceFormat:function(){return eB},MOUSE:function(){return r},Material:function(){return nj},MaterialLoader:function(){return hf},Math:function(){return i0},MathUtils:function(){return i0},Matrix3:function(){return iP},Matrix4:function(){return n$},MaxEquation:function(){return L},Mesh:function(){return rF},MeshBasicMaterial:function(){return n9},MeshDepthMaterial:function(){return sJ},MeshDistanceMaterial:function(){return sQ},MeshFaceMaterial:function(){return cV},MeshLambertMaterial:function(){return uE},MeshMatcapMaterial:function(){return uA},MeshNormalMaterial:function(){return uT},MeshPhongMaterial:function(){return uS},MeshPhysicalMaterial:function(){return u_},MeshStandardMaterial:function(){return uw},MeshToonMaterial:function(){return uM},MinEquation:function(){return A},MirroredRepeatWrapping:function(){return ep},MixOperation:function(){return Z},MultiMaterial:function(){return cW},MultiplyBlending:function(){return _},MultiplyOperation:function(){return Y},NearestFilter:function(){return ef},NearestMipMapLinearFilter:function(){return ev},NearestMipMapNearestFilter:function(){return eg},NearestMipmapLinearFilter:function(){return e$},NearestMipmapNearestFilter:function(){return em},NeverDepth:function(){return H},NeverStencilFunc:function(){return tJ},NoBlending:function(){return x},NoColors:function(){return cG},NoToneMapping:function(){return Q},NormalAnimationBlendMode:function(){return tP},NormalBlending:function(){return y},NotEqualDepth:function(){return X},NotEqualStencilFunc:function(){return it},NumberKeyframeTrack:function(){return uz},Object3D:function(){return nU},ObjectLoader:function(){return hv},ObjectSpaceNormalMap:function(){return t4},OctahedronBufferGeometry:function(){return uc},OctahedronGeometry:function(){return uc},OneFactor:function(){return C},OneMinusDstAlphaFactor:function(){return z},OneMinusDstColorFactor:function(){return U},OneMinusSrcAlphaFactor:function(){return F},OneMinusSrcColorFactor:function(){return D},OrthographicCamera:function(){return aa},PCFShadowMap:function(){return c},PCFSoftShadowMap:function(){return d},PMREMGenerator:function(){return ax},ParametricGeometry:function(){return dg},Particle:function(){return c6},ParticleBasicMaterial:function(){return cj},ParticleSystem:function(){return c5},ParticleSystemMaterial:function(){return cq},Path:function(){return lN},PerspectiveCamera:function(){return rG},Plane:function(){return r5},PlaneBufferGeometry:function(){return rZ},PlaneGeometry:function(){return rZ},PlaneHelper:function(){return cC},PointCloud:function(){return c4},PointCloudMaterial:function(){return c7},PointLight:function(){return ho},PointLightHelper:function(){return cg},Points:function(){return lr},PointsMaterial:function(){return o9},PolarGridHelper:function(){return cb},PolyhedronBufferGeometry:function(){return lp},PolyhedronGeometry:function(){return lp},PositionalAudio:function(){return hO},PropertyBinding:function(){return hq},PropertyMixer:function(){return hH},QuadraticBezierCurve:function(){return lD},QuadraticBezierCurve3:function(){return lI},Quaternion:function(){return iV},QuaternionKeyframeTrack:function(){return uU},QuaternionLinearInterpolant:function(){return uN},REVISION:function(){return n},RGBADepthPacking:function(){return tV},RGBAFormat:function(){return eF},RGBAIntegerFormat:function(){return eV},RGBA_ASTC_10x10_Format:function(){return tl},RGBA_ASTC_10x5_Format:function(){return ta},RGBA_ASTC_10x6_Format:function(){return ts},RGBA_ASTC_10x8_Format:function(){return to},RGBA_ASTC_12x10_Format:function(){return tu},RGBA_ASTC_12x12_Format:function(){return th},RGBA_ASTC_4x4_Format:function(){return eQ},RGBA_ASTC_5x4_Format:function(){return eK},RGBA_ASTC_5x5_Format:function(){return e9},RGBA_ASTC_6x5_Format:function(){return te},RGBA_ASTC_6x6_Format:function(){return tt},RGBA_ASTC_8x5_Format:function(){return ti},RGBA_ASTC_8x6_Format:function(){return tn},RGBA_ASTC_8x8_Format:function(){return tr},RGBA_BPTC_Format:function(){return tc},RGBA_ETC2_EAC_Format:function(){return eJ},RGBA_PVRTC_2BPPV1_Format:function(){return eX},RGBA_PVRTC_4BPPV1_Format:function(){return eq},RGBA_S3TC_DXT1_Format:function(){return e4},RGBA_S3TC_DXT3_Format:function(){return e6},RGBA_S3TC_DXT5_Format:function(){return e5},RGBDEncoding:function(){return t3},RGBEEncoding:function(){return tO},RGBEFormat:function(){return eN},RGBFormat:function(){return eI},RGBIntegerFormat:function(){return ek},RGBM16Encoding:function(){return tG},RGBM7Encoding:function(){return tH},RGB_ETC1_Format:function(){return eY},RGB_ETC2_Format:function(){return eZ},RGB_PVRTC_2BPPV1_Format:function(){return ej},RGB_PVRTC_4BPPV1_Format:function(){return e7},RGB_S3TC_DXT1_Format:function(){return eW},RGFormat:function(){return eG},RGIntegerFormat:function(){return e3},RawShaderMaterial:function(){return as},Ray:function(){return ng},Raycaster:function(){return h9},RectAreaLight:function(){return hc},RedFormat:function(){return e2},RedIntegerFormat:function(){return eH},ReinhardToneMapping:function(){return ee},RepeatWrapping:function(){return ec},ReplaceStencilOp:function(){return t7},ReverseSubtractEquation:function(){return E},RingBufferGeometry:function(){return ud},RingGeometry:function(){return ud},SRGB8_ALPHA8_ASTC_10x10_Format:function(){return tw},SRGB8_ALPHA8_ASTC_10x5_Format:function(){return ty},SRGB8_ALPHA8_ASTC_10x6_Format:function(){return t8},SRGB8_ALPHA8_ASTC_10x8_Format:function(){return tb},SRGB8_ALPHA8_ASTC_12x10_Format:function(){return t_},SRGB8_ALPHA8_ASTC_12x12_Format:function(){return tS},SRGB8_ALPHA8_ASTC_4x4_Format:function(){return td},SRGB8_ALPHA8_ASTC_5x4_Format:function(){return tp},SRGB8_ALPHA8_ASTC_5x5_Format:function(){return tf},SRGB8_ALPHA8_ASTC_6x5_Format:function(){return tm},SRGB8_ALPHA8_ASTC_6x6_Format:function(){return tg},SRGB8_ALPHA8_ASTC_8x5_Format:function(){return t$},SRGB8_ALPHA8_ASTC_8x6_Format:function(){return tv},SRGB8_ALPHA8_ASTC_8x8_Format:function(){return tx},Scene:function(){return od},SceneUtils:function(){return df},ShaderChunk:function(){return rJ},ShaderLib:function(){return rK},ShaderMaterial:function(){return r2},ShadowMaterial:function(){return ub},Shape:function(){return lU},ShapeBufferGeometry:function(){return up},ShapeGeometry:function(){return up},ShapePath:function(){return cz},ShapeUtils:function(){return ur},ShortType:function(){return eM},Skeleton:function(){return oH},SkeletonHelper:function(){return cm},SkinnedMesh:function(){return oz},SmoothShading:function(){return v},Sphere:function(){return nl},SphereBufferGeometry:function(){return uf},SphereGeometry:function(){return uf},Spherical:function(){return ci},SphericalHarmonics3:function(){return hd},SplineCurve:function(){return lF},SpotLight:function(){return hi},SpotLightHelper:function(){return cc},Sprite:function(){return oL},SpriteMaterial:function(){return og},SrcAlphaFactor:function(){return I},SrcAlphaSaturateFactor:function(){return O},SrcColorFactor:function(){return P},StaticCopyUsage:function(){return ic},StaticDrawUsage:function(){return ia},StaticReadUsage:function(){return il},StereoCamera:function(){return hL},StreamCopyUsage:function(){return ip},StreamDrawUsage:function(){return io},StreamReadUsage:function(){return ih},StringKeyframeTrack:function(){return uO},SubtractEquation:function(){return T},SubtractiveBlending:function(){return w},TOUCH:function(){return a},TangentSpaceNormalMap:function(){return tW},TetrahedronBufferGeometry:function(){return um},TetrahedronGeometry:function(){return um},TextGeometry:function(){return d$},Texture:function(){return iO},TextureLoader:function(){return uY},TorusBufferGeometry:function(){return ug},TorusGeometry:function(){return ug},TorusKnotBufferGeometry:function(){return u$},TorusKnotGeometry:function(){return u$},Triangle:function(){return n5},TriangleFanDrawMode:function(){return tB},TriangleStripDrawMode:function(){return tF},TrianglesDrawMode:function(){return tI},TubeBufferGeometry:function(){return uv},TubeGeometry:function(){return uv},UVMapping:function(){return er},Uint16Attribute:function(){return c9},Uint16BufferAttribute:function(){return ro},Uint32Attribute:function(){return dt},Uint32BufferAttribute:function(){return ru},Uint8Attribute:function(){return cJ},Uint8BufferAttribute:function(){return rr},Uint8ClampedAttribute:function(){return cQ},Uint8ClampedBufferAttribute:function(){return ra},Uniform:function(){return hJ},UniformsLib:function(){return rQ},UniformsUtils:function(){return rO},UnsignedByteType:function(){return e_},UnsignedInt248Type:function(){return eP},UnsignedIntType:function(){return eA},UnsignedShort4444Type:function(){return eR},UnsignedShort5551Type:function(){return e0},UnsignedShort565Type:function(){return eC},UnsignedShortType:function(){return eT},VSMShadowMap:function(){return p},Vector2:function(){return iC},Vector3:function(){return iW},Vector4:function(){return iH},VectorKeyframeTrack:function(){return u2},Vertex:function(){return cX},VertexColors:function(){return ck},VideoTexture:function(){return ls},WebGL1Renderer:function(){return ou},WebGLCubeRenderTarget:function(){return rV},WebGLMultipleRenderTargets:function(){return i3},WebGLMultisampleRenderTarget:function(){return ik},WebGLRenderTarget:function(){return iG},WebGLRenderTargetCube:function(){return dc},WebGLRenderer:function(){return ol},WebGLUtils:function(){return ot},WireframeGeometry:function(){return ux},WireframeHelper:function(){return dl},WrapAroundEnding:function(){return tC},XHRLoader:function(){return du},ZeroCurvatureEnding:function(){return tR},ZeroFactor:function(){return R},ZeroSlopeEnding:function(){return t0},ZeroStencilOp:function(){return t6},sRGBEncoding:function(){return tN}});/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let n="133",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,l=2,u=3,h=0,c=1,d=2,p=3,f=0,m=1,g=2,$=1,v=2,x=0,y=1,b=2,w=3,_=4,S=5,M=100,T=101,E=102,A=103,L=104,R=200,C=201,P=202,D=203,I=204,F=205,B=206,z=207,N=208,U=209,O=210,H=0,G=1,k=2,V=3,W=4,j=5,q=6,X=7,Y=0,Z=1,J=2,Q=0,K=1,ee=2,et=3,ei=4,en=5,er=300,ea=301,es=302,eo=303,el=304,eu=306,eh=307,ec=1e3,ed=1001,ep=1002,ef=1003,em=1004,eg=1004,e$=1005,ev=1005,ex=1006,ey=1007,e8=1007,eb=1008,ew=1008,e_=1009,eS=1010,eM=1011,eT=1012,eE=1013,eA=1014,eL=1015,e1=1016,eR=1017,e0=1018,eC=1019,eP=1020,eD=1021,eI=1022,eF=1023,eB=1024,ez=1025,eN=eF,eU=1026,eO=1027,e2=1028,eH=1029,eG=1030,e3=1031,ek=1032,eV=1033,eW=33776,e4=33777,e6=33778,e5=33779,e7=35840,ej=35841,eq=35842,eX=35843,eY=36196,eZ=37492,eJ=37496,eQ=37808,eK=37809,e9=37810,te=37811,tt=37812,ti=37813,tn=37814,tr=37815,ta=37816,ts=37817,to=37818,tl=37819,tu=37820,th=37821,tc=36492,td=37840,tp=37841,tf=37842,tm=37843,tg=37844,t$=37845,tv=37846,tx=37847,ty=37848,t8=37849,tb=37850,tw=37851,t_=37852,tS=37853,tM=2200,tT=2201,tE=2202,tA=2300,tL=2301,t1=2302,tR=2400,t0=2401,tC=2402,tP=2500,tD=2501,tI=0,tF=1,tB=2,tz=3e3,tN=3001,tU=3007,tO=3002,t2=3003,tH=3004,tG=3005,t3=3006,tk=3200,tV=3201,tW=0,t4=1,t6=0,t5=7680,t7=7681,tj=7682,tq=7683,tX=34055,tY=34056,tZ=5386,tJ=512,tQ=513,tK=514,t9=515,ie=516,it=517,ii=518,ir=519,ia=35044,is=35048,io=35040,il=35045,iu=35049,ih=35041,ic=35046,id=35050,ip=35042,im="100",ig="300 es";class i${addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners,n=i[e];if(void 0!==n){let r=n.indexOf(t);-1!==r&&n.splice(r,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,i=t[e.type];if(void 0!==i){e.target=this;let n=i.slice(0);for(let r=0,a=n.length;r<a;r++)n[r].call(this,e);e.target=null}}}let iv=1234567,ix=Math.PI/180,iy=180/Math.PI,i8=[];for(let ib=0;ib<256;ib++)i8[ib]=(ib<16?"0":"")+ib.toString(16);let iw="undefined"!=typeof crypto&&"randomUUID"in crypto;function i_(){if(iw)return crypto.randomUUID().toUpperCase();let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=i8[255&e]+i8[e>>8&255]+i8[e>>16&255]+i8[e>>24&255]+"-"+i8[255&t]+i8[t>>8&255]+"-"+i8[t>>16&15|64]+i8[t>>24&255]+"-"+i8[63&i|128]+i8[i>>8&255]+"-"+i8[i>>16&255]+i8[i>>24&255]+i8[255&n]+i8[n>>8&255]+i8[n>>16&255]+i8[n>>24&255];return r.toUpperCase()}function iS(e,t,i){return Math.max(t,Math.min(i,e))}function iM(e,t){return(e%t+t)%t}function iT(e,t,i){return(1-i)*e+i*t}function iE(e){return e*ix}function iA(e){return e*iy}function iL(e){return(e&e-1)==0&&0!==e}function i1(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function iR(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var i0=Object.freeze({__proto__:null,DEG2RAD:ix,RAD2DEG:iy,generateUUID:i_,clamp:iS,euclideanModulo:iM,mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:iT,damp:function(e,t,i,n){return iT(e,t,1-Math.exp(-i*n))},pingpong:function(e,t=1){return t-Math.abs(iM(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(iv=e%2147483647),((iv=16807*iv%2147483647)-1)/2147483646},degToRad:iE,radToDeg:iA,isPowerOfTwo:iL,ceilPowerOfTwo:i1,floorPowerOfTwo:iR,setQuaternionFromProperEuler:function(e,t,i,n,r){let a=Math.cos,s=Math.sin,o=a(i/2),l=s(i/2),u=a((t+n)/2),h=s((t+n)/2),c=a((t-n)/2),d=s((t-n)/2),p=a((n-t)/2),f=s((n-t)/2);switch(r){case"XYX":e.set(o*h,l*c,l*d,o*u);break;case"YZY":e.set(l*d,o*h,l*c,o*u);break;case"ZXZ":e.set(l*c,l*d,o*h,o*u);break;case"XZX":e.set(o*h,l*f,l*p,o*u);break;case"YXY":e.set(l*p,o*h,l*f,o*u);break;case"ZYZ":e.set(l*f,l*p,o*h,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}});class iC{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*n+e.x,this.y=r*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}iC.prototype.isVector2=!0;class iP{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,n,r,a,s,o,l){let u=this.elements;return u[0]=e,u[1]=n,u[2]=s,u[3]=t,u[4]=r,u[5]=o,u[6]=i,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],u=i[4],h=i[7],c=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],$=n[1],v=n[4],x=n[7],y=n[2],b=n[5],w=n[8];return r[0]=a*f+s*$+o*y,r[3]=a*m+s*v+o*b,r[6]=a*g+s*x+o*w,r[1]=l*f+u*$+h*y,r[4]=l*m+u*v+h*b,r[7]=l*g+u*x+h*w,r[2]=c*f+d*$+p*y,r[5]=c*m+d*v+p*b,r[8]=c*g+d*x+p*w,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8];return t*a*u-t*s*l-i*r*u+i*s*o+n*r*l-n*a*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],h=u*a-s*l,c=s*o-u*r,d=l*r-a*o,p=t*h+i*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=h*f,e[1]=(n*l-u*i)*f,e[2]=(s*i-n*a)*f,e[3]=c*f,e[4]=(u*t-n*o)*f,e[5]=(n*r-s*t)*f,e[6]=d*f,e[7]=(i*o-l*t)*f,e[8]=(a*t-i*r)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,a,s){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*a+l*s)+a+e,-n*l,n*o,-n*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),n=this.elements,r=n[0],a=n[3],s=n[6],o=n[1],l=n[4],u=n[7];return n[0]=t*r+i*o,n[3]=t*a+i*l,n[6]=t*s+i*u,n[1]=-i*r+t*o,n[4]=-i*a+t*l,n[7]=-i*s+t*u,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function iD(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,n=e.length;i<n;++i)e[i]>t&&(t=e[i]);return t}iP.prototype.isMatrix3=!0;let iI={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function iF(e,t){return new iI[e](t)}function iB(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}let iz;class iN{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===iz&&(iz=iB("canvas")),iz.width=e.width,iz.height=e.height;let i=iz.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=iz}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let iU=0;class iO extends i${constructor(e=iO.DEFAULT_IMAGE,t=iO.DEFAULT_MAPPING,i=ed,n=ed,r=ex,a=eb,s=eF,o=e_,l=1,u=tz){super(),Object.defineProperty(this,"id",{value:iU++}),this.uuid=i_(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new iC(0,0),this.repeat=new iC(1,1),this.center=new iC(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new iP,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let n=this.image;if(void 0===n.uuid&&(n.uuid=i_()),!t&&void 0===e.images[n.uuid]){let r;if(Array.isArray(n)){r=[];for(let a=0,s=n.length;a<s;a++)n[a].isDataTexture?r.push(i2(n[a].image)):r.push(i2(n[a]))}else r=i2(n);e.images[n.uuid]={uuid:n.uuid,url:r}}i.image=n.uuid}return t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==er)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ec:e.x=e.x-Math.floor(e.x);break;case ed:e.x=e.x<0?0:1;break;case ep:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case ec:e.y=e.y-Math.floor(e.y);break;case ed:e.y=e.y<0?0:1;break;case ep:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function i2(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?iN.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}iO.DEFAULT_IMAGE=void 0,iO.DEFAULT_MAPPING=er,iO.prototype.isTexture=!0;class iH{constructor(e=0,t=0,i=0,n=1){this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r,a=e.elements,s=a[0],o=a[4],l=a[8],u=a[1],h=a[5],c=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(o-u)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+u)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(s+h+f-3))return this.set(1,0,0,0),this;t=Math.PI;let m=(s+1)/2,g=(h+1)/2,$=(f+1)/2,v=(o+u)/4,x=(l+d)/4,y=(c+p)/4;return m>g&&m>$?m<.01?(i=0,n=.707106781,r=.707106781):(n=v/(i=Math.sqrt(m)),r=x/i):g>$?g<.01?(i=.707106781,n=0,r=.707106781):(i=v/(n=Math.sqrt(g)),r=y/n):$<.01?(i=.707106781,n=.707106781,r=0):(i=x/(r=Math.sqrt($)),n=y/r),this.set(i,n,r,t),this}let b=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(u-o)*(u-o));return .001>Math.abs(b)&&(b=1),this.x=(p-c)/b,this.y=(l-d)/b,this.z=(u-o)/b,this.w=Math.acos((s+h+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}iH.prototype.isVector4=!0;class iG extends i${constructor(e,t,i={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new iH(0,0,e,t),this.scissorTest=!1,this.viewport=new iH(0,0,e,t),this.texture=new iO(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:ex,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}iG.prototype.isWebGLRenderTarget=!0;class i3 extends iG{constructor(e,t,i){super(e,t);let n=this.texture;this.texture=[];for(let r=0;r<i;r++)this.texture[r]=n.clone()}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.texture.length;n<r;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone();return this}}i3.prototype.isWebGLMultipleRenderTargets=!0;class ik extends iG{constructor(e,t,i){super(e,t,i),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}ik.prototype.isWebGLMultisampleRenderTarget=!0;class iV{constructor(e=0,t=0,i=0,n=1){this._x=e,this._y=t,this._z=i,this._w=n}static slerp(e,t,i,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,t,n)}static slerpFlat(e,t,i,n,r,a,s){let o=i[n+0],l=i[n+1],u=i[n+2],h=i[n+3],c=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(h!==f||o!==c||l!==d||u!==p){let m=1-s,g=o*c+l*d+u*p+h*f,$=g>=0?1:-1,v=1-g*g;if(v>Number.EPSILON){let x=Math.sqrt(v),y=Math.atan2(x,g*$);m=Math.sin(m*y)/x,s=Math.sin(s*y)/x}let b=s*$;if(o=o*m+c*b,l=l*m+d*b,u=u*m+p*b,h=h*m+f*b,m===1-s){let w=1/Math.sqrt(o*o+l*l+u*u+h*h);o*=w,l*=w,u*=w,h*=w}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,n,r,a){let s=i[n],o=i[n+1],l=i[n+2],u=i[n+3],h=r[a],c=r[a+1],d=r[a+2],p=r[a+3];return e[t]=s*p+u*h+o*d-l*c,e[t+1]=o*p+u*c+l*h-s*d,e[t+2]=l*p+u*d+s*c-o*h,e[t+3]=u*p-s*h-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let i=e._x,n=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(i/2),u=s(n/2),h=s(r/2),c=o(i/2),d=o(n/2),p=o(r/2);switch(a){case"XYZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"YXZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"ZXY":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"ZYX":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"YZX":this._x=c*u*h+l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h-c*d*p;break;case"XZY":this._x=c*u*h-l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],a=t[1],s=t[5],o=t[9],l=t[2],u=t[6],h=t[10],c=i+s+h;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(u-o)*d,this._y=(r-l)*d,this._z=(a-n)*d}else if(i>s&&i>h){let p=2*Math.sqrt(1+i-s-h);this._w=(u-o)/p,this._x=.25*p,this._y=(n+a)/p,this._z=(r+l)/p}else if(s>h){let f=2*Math.sqrt(1+s-i-h);this._w=(r-l)/f,this._x=(n+a)/f,this._y=.25*f,this._z=(o+u)/f}else{let m=2*Math.sqrt(1+h-i-s);this._w=(a-n)/m,this._x=(r+l)/m,this._y=(o+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(iS(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);return 0===i||this.slerp(e,Math.min(1,t/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,a=e._w,s=t._x,o=t._y,l=t._z,u=t._w;return this._x=i*u+a*s+n*l-r*o,this._y=n*u+a*o+r*s-i*l,this._z=r*u+a*l+i*o-n*s,this._w=a*u-i*s-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,a=this._w,s=a*e._w+i*e._x+n*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;let o=1-s*s;if(o<=Number.EPSILON){let l=1-t;return this._w=l*a+t*this._w,this._x=l*i+t*this._x,this._y=l*n+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let u=Math.sqrt(o),h=Math.atan2(u,s),c=Math.sin((1-t)*h)/u,d=Math.sin(t*h)/u;return this._w=a*c+this._w*d,this._x=i*c+this._x*d,this._y=n*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){this.copy(e).slerp(t,i)}random(){let e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(r),i*Math.cos(r),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}iV.prototype.isQuaternion=!0;class iW{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(i6.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(i6.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*n-s*i,u=o*i+s*t-r*n,h=o*n+r*i-a*t,c=-r*t-a*i-s*n;return this.x=l*o+-(c*r)+-(u*s)- -(h*a),this.y=u*o+-(c*a)+-(h*r)- -(l*s),this.z=h*o+-(c*s)+-(l*a)- -(u*r),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-r*s,this.y=r*a-i*o,this.z=i*s-n*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return i4.copy(this).projectOnVector(e),this.sub(i4)}reflect(e){return this.sub(i4.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(iS(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}iW.prototype.isVector3=!0;let i4=new iW,i6=new iV;class i5{constructor(e=new iW(Infinity,Infinity,Infinity),t=new iW(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let u=e[o],h=e[o+1],c=e[o+2];u<t&&(t=u),h<i&&(i=h),c<n&&(n=c),u>r&&(r=u),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,i,n),this.max.set(r,a,s),this}setFromBufferAttribute(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let u=e.getX(o),h=e.getY(o),c=e.getZ(o);u<t&&(t=u),h<i&&(i=h),c<n&&(n=c),u>r&&(r=u),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,i,n),this.max.set(r,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=ij.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);let t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),iq.copy(t.boundingBox),iq.applyMatrix4(e.matrixWorld),this.union(iq));let i=e.children;for(let n=0,r=i.length;n<r;n++)this.expandByObject(i[n]);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ij),ij.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(i9),ne.subVectors(this.max,i9),iX.subVectors(e.a,i9),iY.subVectors(e.b,i9),iZ.subVectors(e.c,i9),iJ.subVectors(iY,iX),iQ.subVectors(iZ,iY),iK.subVectors(iX,iZ);let t=[0,-iJ.z,iJ.y,0,-iQ.z,iQ.y,0,-iK.z,iK.y,iJ.z,0,-iJ.x,iQ.z,0,-iQ.x,iK.z,0,-iK.x,-iJ.y,iJ.x,0,-iQ.y,iQ.x,0,-iK.y,iK.x,0];return!!(nn(t,iX,iY,iZ,ne)&&nn(t=[1,0,0,0,1,0,0,0,1],iX,iY,iZ,ne))&&(nt.crossVectors(iJ,iQ),nn(t=[nt.x,nt.y,nt.z],iX,iY,iZ,ne))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=ij.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(ij).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(i7[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),i7[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),i7[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),i7[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),i7[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),i7[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),i7[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),i7[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(i7)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}i5.prototype.isBox3=!0;let i7=[new iW,new iW,new iW,new iW,new iW,new iW,new iW,new iW],ij=new iW,iq=new i5,iX=new iW,iY=new iW,iZ=new iW,iJ=new iW,iQ=new iW,iK=new iW,i9=new iW,ne=new iW,nt=new iW,ni=new iW;function nn(e,t,i,n,r){for(let a=0,s=e.length-3;a<=s;a+=3){ni.fromArray(e,a);let o=r.x*Math.abs(ni.x)+r.y*Math.abs(ni.y)+r.z*Math.abs(ni.z),l=t.dot(ni),u=i.dot(ni),h=n.dot(ni);if(Math.max(-Math.max(l,u,h),Math.min(l,u,h))>o)return!1}return!0}let nr=new i5,na=new iW,ns=new iW,no=new iW;class nl{constructor(e=new iW,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):nr.setFromPoints(e).getCenter(i);let n=0;for(let r=0,a=e.length;r<a;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){no.subVectors(e,this.center);let t=no.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.add(no.multiplyScalar(n/i)),this.radius+=n}return this}union(e){return ns.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(na.copy(e.center).add(ns)),this.expandByPoint(na.copy(e.center).sub(ns)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let nu=new iW,nh=new iW,nc=new iW,nd=new iW,np=new iW,nf=new iW,nm=new iW;class ng{constructor(e=new iW,t=new iW(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,nu)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=nu.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(nu.copy(this.direction).multiplyScalar(t).add(this.origin),nu.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){nh.copy(e).add(t).multiplyScalar(.5),nc.copy(t).sub(e).normalize(),nd.copy(this.origin).sub(nh);let r=.5*e.distanceTo(t),a=-this.direction.dot(nc),s=nd.dot(this.direction),o=-nd.dot(nc),l=nd.lengthSq(),u=Math.abs(1-a*a),h,c,d,p;if(u>0){if(h=a*o-s,c=a*s-o,p=r*u,h>=0){if(c>=-p){if(c<=p){let f=1/u;h*=f,c*=f,d=h*(h+a*c+2*s)+c*(a*h+c+2*o)+l}else d=-(h=Math.max(0,-(a*(c=r)+s)))*h+c*(c+2*o)+l}else d=-(h=Math.max(0,-(a*(c=-r)+s)))*h+c*(c+2*o)+l}else c<=-p?(c=(h=Math.max(0,-(-a*r+s)))>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+c*(c+2*o)+l):c<=p?(h=0,d=(c=Math.min(Math.max(-r,-o),r))*(c+2*o)+l):(c=(h=Math.max(0,-(a*r+s)))>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+c*(c+2*o)+l)}else c=a>0?-r:r,d=-(h=Math.max(0,-(a*c+s)))*h+c*(c+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(nc).multiplyScalar(c).add(nh),d}intersectSphere(e,t){nu.subVectors(e.center,this.origin);let i=nu.dot(this.direction),n=nu.dot(nu)-i*i,r=e.radius*e.radius;if(n>r)return null;let a=Math.sqrt(r-n),s=i-a,o=i+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let i=e.normal.dot(this.direction);return i*t<0}intersectBox(e,t){let i,n,r,a,s,o,l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,c=this.origin;return(l>=0?(i=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),u>=0?(r=(e.min.y-c.y)*u,a=(e.max.y-c.y)*u):(r=(e.max.y-c.y)*u,a=(e.min.y-c.y)*u),i>a||r>n)?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),h>=0?(s=(e.min.z-c.z)*h,o=(e.max.z-c.z)*h):(s=(e.max.z-c.z)*h,o=(e.min.z-c.z)*h),i>o||s>n)?null:((s>i||i!=i)&&(i=s),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,nu)}intersectTriangle(e,t,i,n,r){np.subVectors(t,e),nf.subVectors(i,e),nm.crossVectors(np,nf);let a=this.direction.dot(nm),s;if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}nd.subVectors(this.origin,e);let o=s*this.direction.dot(nf.crossVectors(nd,nf));if(o<0)return null;let l=s*this.direction.dot(np.cross(nd));if(l<0||o+l>a)return null;let u=-s*nd.dot(nm);return u<0?null:this.at(u/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class n${constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,n,r,a,s,o,l,u,h,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=u,g[10]=h,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new n$().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/nv.setFromMatrixColumn(e,0).length(),r=1/nv.setFromMatrixColumn(e,1).length(),a=1/nv.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,i=e.x,n=e.y,r=e.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(n),l=Math.sin(n),u=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){let c=a*u,d=a*h,p=s*u,f=s*h;t[0]=o*u,t[4]=-o*h,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-s*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=a*o}else if("YXZ"===e.order){let m=o*u,g=o*h,$=l*u,v=l*h;t[0]=m+v*s,t[4]=$*s-g,t[8]=a*l,t[1]=a*h,t[5]=a*u,t[9]=-s,t[2]=g*s-$,t[6]=v+m*s,t[10]=a*o}else if("ZXY"===e.order){let x=o*u,y=o*h,b=l*u,w=l*h;t[0]=x-w*s,t[4]=-a*h,t[8]=b+y*s,t[1]=y+b*s,t[5]=a*u,t[9]=w-x*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let _=a*u,S=a*h,M=s*u,T=s*h;t[0]=o*u,t[4]=M*l-S,t[8]=_*l+T,t[1]=o*h,t[5]=T*l+_,t[9]=S*l-M,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let E=a*o,A=a*l,L=s*o,R=s*l;t[0]=o*u,t[4]=R-E*h,t[8]=L*h+A,t[1]=h,t[5]=a*u,t[9]=-s*u,t[2]=-l*u,t[6]=A*h+L,t[10]=E-R*h}else if("XZY"===e.order){let C=a*o,P=a*l,D=s*o,I=s*l;t[0]=o*u,t[4]=-h,t[8]=l*u,t[1]=C*h+I,t[5]=a*u,t[9]=P*h-D,t[2]=D*h-P,t[6]=s*u,t[10]=I*h+C}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ny,e,n8)}lookAt(e,t,i){let n=this.elements;return n_.subVectors(e,t),0===n_.lengthSq()&&(n_.z=1),n_.normalize(),nb.crossVectors(i,n_),0===nb.lengthSq()&&(1===Math.abs(i.z)?n_.x+=1e-4:n_.z+=1e-4,n_.normalize(),nb.crossVectors(i,n_)),nb.normalize(),nw.crossVectors(n_,nb),n[0]=nb.x,n[4]=nw.x,n[8]=n_.x,n[1]=nb.y,n[5]=nw.y,n[9]=n_.y,n[2]=nb.z,n[6]=nw.z,n[10]=n_.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],u=i[1],h=i[5],c=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],$=i[3],v=i[7],x=i[11],y=i[15],b=n[0],w=n[4],_=n[8],S=n[12],M=n[1],T=n[5],E=n[9],A=n[13],L=n[2],R=n[6],C=n[10],P=n[14],D=n[3],I=n[7],F=n[11],B=n[15];return r[0]=a*b+s*M+o*L+l*D,r[4]=a*w+s*T+o*R+l*I,r[8]=a*_+s*E+o*C+l*F,r[12]=a*S+s*A+o*P+l*B,r[1]=u*b+h*M+c*L+d*D,r[5]=u*w+h*T+c*R+d*I,r[9]=u*_+h*E+c*C+d*F,r[13]=u*S+h*A+c*P+d*B,r[2]=p*b+f*M+m*L+g*D,r[6]=p*w+f*T+m*R+g*I,r[10]=p*_+f*E+m*C+g*F,r[14]=p*S+f*A+m*P+g*B,r[3]=$*b+v*M+x*L+y*D,r[7]=$*w+v*T+x*R+y*I,r[11]=$*_+v*E+x*C+y*F,r[15]=$*S+v*A+x*P+y*B,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],u=e[2],h=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],g=e[15];return p*(+r*o*h-n*l*h-r*s*c+i*l*c+n*s*d-i*o*d)+f*(+t*o*d-t*l*c+r*a*c-n*a*d+n*l*u-r*o*u)+m*(+t*l*h-t*s*d-r*a*h+i*a*d+r*s*u-i*l*u)+g*(-n*s*u-t*o*h+t*s*c+n*a*h-i*a*c+i*o*u)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],$=h*m*l-f*c*l+f*o*d-s*m*d-h*o*g+s*c*g,v=p*c*l-u*m*l-p*o*d+a*m*d+u*o*g-a*c*g,x=u*f*l-p*h*l+p*s*d-a*f*d-u*s*g+a*h*g,y=p*h*o-u*f*o-p*s*c+a*f*c+u*s*m-a*h*m,b=t*$+i*v+n*x+r*y;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return e[0]=$*w,e[1]=(f*c*r-h*m*r-f*n*d+i*m*d+h*n*g-i*c*g)*w,e[2]=(s*m*r-f*o*r+f*n*l-i*m*l-s*n*g+i*o*g)*w,e[3]=(h*o*r-s*c*r-h*n*l+i*c*l+s*n*d-i*o*d)*w,e[4]=v*w,e[5]=(u*m*r-p*c*r+p*n*d-t*m*d-u*n*g+t*c*g)*w,e[6]=(p*o*r-a*m*r-p*n*l+t*m*l+a*n*g-t*o*g)*w,e[7]=(a*c*r-u*o*r+u*n*l-t*c*l-a*n*d+t*o*d)*w,e[8]=x*w,e[9]=(p*h*r-u*f*r-p*i*d+t*f*d+u*i*g-t*h*g)*w,e[10]=(a*f*r-p*s*r+p*i*l-t*f*l-a*i*g+t*s*g)*w,e[11]=(u*s*r-a*h*r-u*i*l+t*h*l+a*i*d-t*s*d)*w,e[12]=y*w,e[13]=(u*f*n-p*h*n+p*i*c-t*f*c-u*i*m+t*h*m)*w,e[14]=(p*s*n-a*f*n-p*i*o+t*f*o+a*i*m-t*s*m)*w,e[15]=(a*h*n-u*s*n+u*i*o-t*h*o-a*i*c+t*s*c)*w,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,a=e.x,s=e.y,o=e.z,l=r*a,u=r*s;return this.set(l*a+i,l*s-n*o,l*o+n*s,0,l*s+n*o,u*s+i,u*o-n*a,0,l*o-n*s,u*o+n*a,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,a){return this.set(1,i,r,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,u=a+a,h=s+s,c=r*l,d=r*u,p=r*h,f=a*u,m=a*h,g=s*h,$=o*l,v=o*u,x=o*h,y=i.x,b=i.y,w=i.z;return n[0]=(1-(f+g))*y,n[1]=(d+x)*y,n[2]=(p-v)*y,n[3]=0,n[4]=(d-x)*b,n[5]=(1-(c+g))*b,n[6]=(m+$)*b,n[7]=0,n[8]=(p+v)*w,n[9]=(m-$)*w,n[10]=(1-(c+f))*w,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=nv.set(n[0],n[1],n[2]).length(),a=nv.set(n[4],n[5],n[6]).length(),s=nv.set(n[8],n[9],n[10]).length(),o=this.determinant();o<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],nx.copy(this);let l=1/r,u=1/a,h=1/s;return nx.elements[0]*=l,nx.elements[1]*=l,nx.elements[2]*=l,nx.elements[4]*=u,nx.elements[5]*=u,nx.elements[6]*=u,nx.elements[8]*=h,nx.elements[9]*=h,nx.elements[10]*=h,t.setFromRotationMatrix(nx),i.x=r,i.y=a,i.z=s,this}makePerspective(e,t,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let s=this.elements;return s[0]=2*r/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*r/(i-n),s[9]=(i+n)/(i-n),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+r)/(a-r),s[14]=-2*a*r/(a-r),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,i,n,r,a){let s=this.elements,o=1/(t-e),l=1/(i-n),u=1/(a-r);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((i+n)*l),s[2]=0,s[6]=0,s[10]=-2*u,s[14]=-((a+r)*u),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}n$.prototype.isMatrix4=!0;let nv=new iW,nx=new n$,ny=new iW(0,0,0),n8=new iW(1,1,1),nb=new iW,nw=new iW,n_=new iW,nS=new n$,nM=new iV;class nT{constructor(e=0,t=0,i=0,n=nT.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],a=n[4],s=n[8],o=n[1],l=n[5],u=n[9],h=n[2],c=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(iS(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-iS(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(iS(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-iS(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(iS(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-iS(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return nS.makeRotationFromQuaternion(e),this.setFromRotationMatrix(nS,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return nM.setFromEuler(this),this.setFromQuaternion(nM,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new iW(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}nT.prototype.isEuler=!0,nT.DefaultOrder="XYZ",nT.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class nE{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}}let nA=0,nL=new iW,n1=new iV,nR=new n$,n0=new iW,nC=new iW,nP=new iW,nD=new iV,nI=new iW(1,0,0),nF=new iW(0,1,0),nB=new iW(0,0,1),nz={type:"added"},nN={type:"removed"};class nU extends i${constructor(){super(),Object.defineProperty(this,"id",{value:nA++}),this.uuid=i_(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nU.DefaultUp.clone();let e=new iW,t=new nT,i=new iV,n=new iW(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new n$},normalMatrix:{value:new iP}}),this.matrix=new n$,this.matrixWorld=new n$,this.matrixAutoUpdate=nU.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new nE,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return n1.setFromAxisAngle(e,t),this.quaternion.multiply(n1),this}rotateOnWorldAxis(e,t){return n1.setFromAxisAngle(e,t),this.quaternion.premultiply(n1),this}rotateX(e){return this.rotateOnAxis(nI,e)}rotateY(e){return this.rotateOnAxis(nF,e)}rotateZ(e){return this.rotateOnAxis(nB,e)}translateOnAxis(e,t){return nL.copy(e).applyQuaternion(this.quaternion),this.position.add(nL.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(nI,e)}translateY(e){return this.translateOnAxis(nF,e)}translateZ(e){return this.translateOnAxis(nB,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(nR.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?n0.copy(e):n0.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),nC.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?nR.lookAt(nC,n0,this.up):nR.lookAt(n0,nC,this.up),this.quaternion.setFromRotationMatrix(nR),n&&(nR.extractRotation(n.matrixWorld),n1.setFromRotationMatrix(nR),this.quaternion.premultiply(n1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(nz)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let i=this.children.indexOf(e);return -1!==i&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(nN)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(nN)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),nR.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),nR.multiply(e.parent.matrixWorld)),e.applyMatrix4(nR),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let r=this.children[i],a=r.getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nC,e,nP),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nC,nD,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let n=this.children;for(let r=0,a=n.length;r<a;r++)n[r].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){let s=a.shapes;if(Array.isArray(s))for(let o=0,l=s.length;o<l;o++){let u=s[o];r(e.shapes,u)}else r(e.shapes,s)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let h=[];for(let c=0,d=this.material.length;c<d;c++)h.push(r(e.materials,this.material[c]));n.material=h}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let p=0;p<this.children.length;p++)n.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];n.animations.push(r(e.animations,m))}}if(t){let g=_(e.geometries),$=_(e.materials),v=_(e.textures),x=_(e.images),y=_(e.shapes),b=_(e.skeletons),w=_(e.animations);g.length>0&&(i.geometries=g),$.length>0&&(i.materials=$),v.length>0&&(i.textures=v),x.length>0&&(i.images=x),y.length>0&&(i.shapes=y),b.length>0&&(i.skeletons=b),w.length>0&&(i.animations=w)}return i.object=n,i;function _(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){let n=e.children[i];this.add(n.clone())}return this}}nU.DefaultUp=new iW(0,1,0),nU.DefaultMatrixAutoUpdate=!0,nU.prototype.isObject3D=!0;let nO=new iW,n2=new iW,nH=new iW,nG=new iW,n3=new iW,nk=new iW,nV=new iW,nW=new iW,n4=new iW,n6=new iW;class n5{constructor(e=new iW,t=new iW,i=new iW){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),nO.subVectors(e,t),n.cross(nO);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){nO.subVectors(n,t),n2.subVectors(i,t),nH.subVectors(e,t);let a=nO.dot(nO),s=nO.dot(n2),o=nO.dot(nH),l=n2.dot(n2),u=n2.dot(nH),h=a*l-s*s;if(0===h)return r.set(-2,-1,-1);let c=1/h,d=(l*o-s*u)*c,p=(a*u-s*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,nG),nG.x>=0&&nG.y>=0&&nG.x+nG.y<=1}static getUV(e,t,i,n,r,a,s,o){return this.getBarycoord(e,t,i,n,nG),o.set(0,0),o.addScaledVector(r,nG.x),o.addScaledVector(a,nG.y),o.addScaledVector(s,nG.z),o}static isFrontFacing(e,t,i,n){return nO.subVectors(i,t),n2.subVectors(e,t),0>nO.cross(n2).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return nO.subVectors(this.c,this.b),n2.subVectors(this.a,this.b),.5*nO.cross(n2).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return n5.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return n5.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,r){return n5.getUV(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return n5.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return n5.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,n=this.b,r=this.c,a,s;n3.subVectors(n,i),nk.subVectors(r,i),nW.subVectors(e,i);let o=n3.dot(nW),l=nk.dot(nW);if(o<=0&&l<=0)return t.copy(i);n4.subVectors(e,n);let u=n3.dot(n4),h=nk.dot(n4);if(u>=0&&h<=u)return t.copy(n);let c=o*h-u*l;if(c<=0&&o>=0&&u<=0)return a=o/(o-u),t.copy(i).addScaledVector(n3,a);n6.subVectors(e,r);let d=n3.dot(n6),p=nk.dot(n6);if(p>=0&&d<=p)return t.copy(r);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),t.copy(i).addScaledVector(nk,s);let m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return nV.subVectors(r,n),s=(h-u)/(h-u+(d-p)),t.copy(n).addScaledVector(nV,s);let g=1/(m+f+c);return a=f*g,s=c*g,t.copy(i).addScaledVector(n3,a).addScaledVector(nk,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let n7=0;class nj extends i${constructor(){super(),Object.defineProperty(this,"id",{value:n7++}),this.uuid=i_(),this.name="",this.type="Material",this.fog=!0,this.blending=y,this.side=f,this.vertexColors=!1,this.opacity=1,this.format=eF,this.transparent=!1,this.blendSrc=I,this.blendDst=F,this.blendEquation=M,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ir,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=t5,this.stencilZFail=t5,this.stencilZPass=t5,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===$;continue}let n=this[t];if(void 0===n){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenTint&&this.sheenTint.isColor&&(i.sheenTint=this.sheenTint.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(i.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(i.specularTintMap=this.specularTintMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(i.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==y&&(i.blending=this.blending),this.side!==f&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.format!==eF&&(i.format=this.format),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){let r=n(e.textures),a=n(e.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let n=t.length;i=Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}nj.prototype.isMaterial=!0;let nq={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},nX={h:0,s:0,l:0},nY={h:0,s:0,l:0};function nZ(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}function nJ(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function nQ(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class nK{constructor(e,t,i){if(void 0===t&&void 0===i)return this.set(e);return this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=iM(e,1),t=iS(t,0,1),i=iS(i,0,1),0===t)this.r=this.g=this.b=i;else{let n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=nZ(r,n,e+1/3),this.g=nZ(r,n,e),this.b=nZ(r,n,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let n,r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){let s=parseFloat(n[1])/360,o=parseInt(n[2],10)/100,l=parseInt(n[3],10)/100;return t(n[4]),this.setHSL(s,o,l)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let u=i[1],h=u.length;if(3===h)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){let t=nq[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){let i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=nJ(e.r),this.g=nJ(e.g),this.b=nJ(e.b),this}copyLinearToSRGB(e){return this.r=nQ(e.r),this.g=nQ(e.g),this.b=nQ(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){let t=this.r,i=this.g,n=this.b,r=Math.max(t,i,n),a=Math.min(t,i,n),s,o,l=(a+r)/2;if(a===r)s=0,o=0;else{let u=r-a;switch(o=l<=.5?u/(r+a):u/(2-r-a),r){case t:s=(i-n)/u+(i<n?6:0);break;case i:s=(n-t)/u+2;break;case n:s=(t-i)/u+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,i){return this.getHSL(nX),nX.h+=e,nX.s+=t,nX.l+=i,this.setHSL(nX.h,nX.s,nX.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(nX),e.getHSL(nY);let i=iT(nX.h,nY.h,t),n=iT(nX.s,nY.s,t),r=iT(nX.l,nY.l,t);return this.setHSL(i,n,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}nK.NAMES=nq,nK.prototype.isColor=!0,nK.prototype.r=1,nK.prototype.g=1,nK.prototype.b=1;class n9 extends nj{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new nK(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}n9.prototype.isMeshBasicMaterial=!0;let re=new iW,rt=new iC;class ri{constructor(e,t,i){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=ia,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,i=0;for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new nK),t[i++]=a.r,t[i++]=a.g,t[i++]=a.b}return this}copyVector2sArray(e){let t=this.array,i=0;for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),a=new iC),t[i++]=a.x,t[i++]=a.y}return this}copyVector3sArray(e){let t=this.array,i=0;for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new iW),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z}return this}copyVector4sArray(e){let t=this.array,i=0;for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),a=new iH),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z,t[i++]=a.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)rt.fromBufferAttribute(this,t),rt.applyMatrix3(e),this.setXY(t,rt.x,rt.y);else if(3===this.itemSize)for(let n=0,r=this.count;n<r;n++)re.fromBufferAttribute(this,n),re.applyMatrix3(e),this.setXYZ(n,re.x,re.y,re.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)re.x=this.getX(t),re.y=this.getY(t),re.z=this.getZ(t),re.applyMatrix4(e),this.setXYZ(t,re.x,re.y,re.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)re.x=this.getX(t),re.y=this.getY(t),re.z=this.getZ(t),re.applyNormalMatrix(e),this.setXYZ(t,re.x,re.y,re.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)re.x=this.getX(t),re.y=this.getY(t),re.z=this.getZ(t),re.transformDirection(e),this.setXYZ(t,re.x,re.y,re.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ia&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}ri.prototype.isBufferAttribute=!0;class rn extends ri{constructor(e,t,i){super(new Int8Array(e),t,i)}}class rr extends ri{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class ra extends ri{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class rs extends ri{constructor(e,t,i){super(new Int16Array(e),t,i)}}class ro extends ri{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class rl extends ri{constructor(e,t,i){super(new Int32Array(e),t,i)}}class ru extends ri{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class rh extends ri{constructor(e,t,i){super(new Uint16Array(e),t,i)}}rh.prototype.isFloat16BufferAttribute=!0;class rc extends ri{constructor(e,t,i){super(new Float32Array(e),t,i)}}class rd extends ri{constructor(e,t,i){super(new Float64Array(e),t,i)}}let rp=0,rf=new n$,rm=new nU,rg=new iW,r$=new i5,rv=new i5,rx=new iW;class ry extends i${constructor(){super(),Object.defineProperty(this,"id",{value:rp++}),this.uuid=i_(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(iD(e)>65535?ru:ro)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let n=new iP().getNormalMatrix(e);i.applyNormalMatrix(n),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return rf.makeRotationFromQuaternion(e),this.applyMatrix4(rf),this}rotateX(e){return rf.makeRotationX(e),this.applyMatrix4(rf),this}rotateY(e){return rf.makeRotationY(e),this.applyMatrix4(rf),this}rotateZ(e){return rf.makeRotationZ(e),this.applyMatrix4(rf),this}translate(e,t,i){return rf.makeTranslation(e,t,i),this.applyMatrix4(rf),this}scale(e,t,i){return rf.makeScale(e,t,i),this.applyMatrix4(rf),this}lookAt(e){return rm.lookAt(e),rm.updateMatrix(),this.applyMatrix4(rm.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(rg).negate(),this.translate(rg.x,rg.y,rg.z),this}setFromPoints(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new rc(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new i5);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new iW(-1/0,-1/0,-1/0),new iW(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){let r=t[i];r$.setFromBufferAttribute(r),this.morphTargetsRelative?(rx.addVectors(this.boundingBox.min,r$.min),this.boundingBox.expandByPoint(rx),rx.addVectors(this.boundingBox.max,r$.max),this.boundingBox.expandByPoint(rx)):(this.boundingBox.expandByPoint(r$.min),this.boundingBox.expandByPoint(r$.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new nl);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new iW,1/0);return}if(e){let i=this.boundingSphere.center;if(r$.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){let a=t[n];rv.setFromBufferAttribute(a),this.morphTargetsRelative?(rx.addVectors(r$.min,rv.min),r$.expandByPoint(rx),rx.addVectors(r$.max,rv.max),r$.expandByPoint(rx)):(r$.expandByPoint(rv.min),r$.expandByPoint(rv.max))}r$.getCenter(i);let s=0;for(let o=0,l=e.count;o<l;o++)rx.fromBufferAttribute(e,o),s=Math.max(s,i.distanceToSquared(rx));if(t)for(let u=0,h=t.length;u<h;u++){let c=t[u],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)rx.fromBufferAttribute(c,p),d&&(rg.fromBufferAttribute(e,p),rx.add(rg)),s=Math.max(s,i.distanceToSquared(rx))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,n=t.position.array,r=t.normal.array,a=t.uv.array,s=n.length/3;void 0===t.tangent&&this.setAttribute("tangent",new ri(new Float32Array(4*s),4));let o=t.tangent.array,l=[],u=[];for(let h=0;h<s;h++)l[h]=new iW,u[h]=new iW;let c=new iW,d=new iW,p=new iW,f=new iC,m=new iC,g=new iC,$=new iW,v=new iW;function x(e,t,i){c.fromArray(n,3*e),d.fromArray(n,3*t),p.fromArray(n,3*i),f.fromArray(a,2*e),m.fromArray(a,2*t),g.fromArray(a,2*i),d.sub(c),p.sub(c),m.sub(f),g.sub(f);let r=1/(m.x*g.y-g.x*m.y);isFinite(r)&&($.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(r),v.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(r),l[e].add($),l[t].add($),l[i].add($),u[e].add(v),u[t].add(v),u[i].add(v))}let y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let b=0,w=y.length;b<w;++b){let _=y[b],S=_.start,M=_.count;for(let T=S,E=S+M;T<E;T+=3)x(i[T+0],i[T+1],i[T+2])}let A=new iW,L=new iW,R=new iW,C=new iW;function P(e){R.fromArray(r,3*e),C.copy(R);let t=l[e];A.copy(t),A.sub(R.multiplyScalar(R.dot(t))).normalize(),L.crossVectors(C,t);let i=L.dot(u[e]);o[4*e]=A.x,o[4*e+1]=A.y,o[4*e+2]=A.z,o[4*e+3]=i<0?-1:1}for(let D=0,I=y.length;D<I;++D){let F=y[D],B=F.start,z=F.count;for(let N=B,U=B+z;N<U;N+=3)P(i[N+0]),P(i[N+1]),P(i[N+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new ri(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let n=0,r=i.count;n<r;n++)i.setXYZ(n,0,0,0);let a=new iW,s=new iW,o=new iW,l=new iW,u=new iW,h=new iW,c=new iW,d=new iW;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),g=e.getX(p+1),$=e.getX(p+2);a.fromBufferAttribute(t,m),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,$),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),l.fromBufferAttribute(i,m),u.fromBufferAttribute(i,g),h.fromBufferAttribute(i,$),l.add(c),u.add(c),h.add(c),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(g,u.x,u.y,u.z),i.setXYZ($,h.x,h.y,h.z)}else for(let v=0,x=t.count;v<x;v+=3)a.fromBufferAttribute(t,v+0),s.fromBufferAttribute(t,v+1),o.fromBufferAttribute(t,v+2),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),i.setXYZ(v+0,c.x,c.y,c.z),i.setXYZ(v+1,c.x,c.y,c.z),i.setXYZ(v+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let i=this.attributes;for(let n in i){if(void 0===e.attributes[n])continue;let r=i[n],a=r.array,s=e.attributes[n],o=s.array,l=s.itemSize*t,u=Math.min(o.length,a.length-l);for(let h=0,c=l;h<u;h++,c++)a[c]=o[h]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)rx.fromBufferAttribute(e,t),rx.normalize(),e.setXYZ(t,rx.x,rx.y,rx.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,a=new i.constructor(t.length*n),s=0,o=0;for(let l=0,u=t.length;l<u;l++){s=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*n;for(let h=0;h<n;h++)a[o++]=i[s++]}return new ri(a,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new ry,i=this.index.array,n=this.attributes;for(let r in n){let a=n[r],s=e(a,i);t.setAttribute(r,s)}let o=this.morphAttributes;for(let l in o){let u=[],h=o[l];for(let c=0,d=h.length;c<d;c++){let p=h[c],f=e(p,i);u.push(f)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let g=0,$=m.length;g<$;g++){let v=m[g];t.addGroup(v.start,v.count,v.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let n=this.index;null!==n&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});let r=this.attributes;for(let a in r){let s=r[a];e.data.attributes[a]=s.toJSON(e.data)}let o={},l=!1;for(let u in this.morphAttributes){let h=this.morphAttributes[u],c=[];for(let d=0,p=h.length;d<p;d++){let f=h[d];c.push(f.toJSON(e.data))}c.length>0&&(o[u]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let r in n){let a=n[r];this.setAttribute(r,a.clone(t))}let s=e.morphAttributes;for(let o in s){let l=[],u=s[o];for(let h=0,c=u.length;h<c;h++)l.push(u[h].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let $=e.boundingSphere;return null!==$&&(this.boundingSphere=$.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ry.prototype.isBufferGeometry=!0;let r8=new n$,rb=new ng,rw=new nl,r_=new iW,rS=new iW,rM=new iW,rT=new iW,rE=new iW,rA=new iW,rL=new iW,r1=new iW,rR=new iW,r0=new iC,rC=new iC,rP=new iC,rD=new iW,rI=new iW;class rF extends nU{constructor(e=new ry,t=new n9){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n||(null===i.boundingSphere&&i.computeBoundingSphere(),rw.copy(i.boundingSphere),rw.applyMatrix4(r),!1===e.ray.intersectsSphere(rw))||(r8.copy(r).invert(),rb.copy(e.ray).applyMatrix4(r8),null!==i.boundingBox&&!1===rb.intersectsBox(i.boundingBox)))return;let a;if(i.isBufferGeometry){let s=i.index,o=i.attributes.position,l=i.morphAttributes.position,u=i.morphTargetsRelative,h=i.attributes.uv,c=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==s){if(Array.isArray(n))for(let f=0,m=d.length;f<m;f++){let g=d[f],$=n[g.materialIndex],v=Math.max(g.start,p.start),x=Math.min(s.count,Math.min(g.start+g.count,p.start+p.count));for(let y=v,b=x;y<b;y+=3){let w=s.getX(y),_=s.getX(y+1),S=s.getX(y+2);(a=rB(this,$,e,rb,o,l,u,h,c,w,_,S))&&(a.faceIndex=Math.floor(y/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{let M=Math.max(0,p.start),T=Math.min(s.count,p.start+p.count);for(let E=M,A=T;E<A;E+=3){let L=s.getX(E),R=s.getX(E+1),C=s.getX(E+2);(a=rB(this,n,e,rb,o,l,u,h,c,L,R,C))&&(a.faceIndex=Math.floor(E/3),t.push(a))}}}else if(void 0!==o){if(Array.isArray(n))for(let P=0,D=d.length;P<D;P++){let I=d[P],F=n[I.materialIndex],B=Math.max(I.start,p.start),z=Math.min(o.count,Math.min(I.start+I.count,p.start+p.count));for(let N=B,U=z;N<U;N+=3){let O=N,H=N+1,G=N+2;(a=rB(this,F,e,rb,o,l,u,h,c,O,H,G))&&(a.faceIndex=Math.floor(N/3),a.face.materialIndex=I.materialIndex,t.push(a))}}else{let k=Math.max(0,p.start),V=Math.min(o.count,p.start+p.count);for(let W=k,j=V;W<j;W+=3){let q=W,X=W+1,Y=W+2;(a=rB(this,n,e,rb,o,l,u,h,c,q,X,Y))&&(a.faceIndex=Math.floor(W/3),t.push(a))}}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function rB(e,t,i,n,r,a,s,o,l,u,h,c){r_.fromBufferAttribute(r,u),rS.fromBufferAttribute(r,h),rM.fromBufferAttribute(r,c);let d=e.morphTargetInfluences;if(a&&d){rL.set(0,0,0),r1.set(0,0,0),rR.set(0,0,0);for(let p=0,f=a.length;p<f;p++){let $=d[p],v=a[p];0!==$&&(rT.fromBufferAttribute(v,u),rE.fromBufferAttribute(v,h),rA.fromBufferAttribute(v,c),s?(rL.addScaledVector(rT,$),r1.addScaledVector(rE,$),rR.addScaledVector(rA,$)):(rL.addScaledVector(rT.sub(r_),$),r1.addScaledVector(rE.sub(rS),$),rR.addScaledVector(rA.sub(rM),$)))}r_.add(rL),rS.add(r1),rM.add(rR)}e.isSkinnedMesh&&(e.boneTransform(u,r_),e.boneTransform(h,rS),e.boneTransform(c,rM));let x=function(e,t,i,n,r,a,s,o){let l;if(null===(t.side===m?n.intersectTriangle(s,a,r,!0,o):n.intersectTriangle(r,a,s,t.side!==g,o)))return null;rI.copy(o),rI.applyMatrix4(e.matrixWorld);let u=i.ray.origin.distanceTo(rI);return u<i.near||u>i.far?null:{distance:u,point:rI.clone(),object:e}}(e,t,i,n,r_,rS,rM,rD);if(x){o&&(r0.fromBufferAttribute(o,u),rC.fromBufferAttribute(o,h),rP.fromBufferAttribute(o,c),x.uv=n5.getUV(rD,r_,rS,rM,r0,rC,rP,new iC)),l&&(r0.fromBufferAttribute(l,u),rC.fromBufferAttribute(l,h),rP.fromBufferAttribute(l,c),x.uv2=n5.getUV(rD,r_,rS,rM,r0,rC,rP,new iC));let y={a:u,b:h,c:c,normal:new iW,materialIndex:0};n5.getNormal(r_,rS,rM,y.normal),x.face=y}return x}rF.prototype.isMesh=!0;class rz extends ry{constructor(e=1,t=1,i=1,n=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};let s=this;n=Math.floor(n),r=Math.floor(r),a=Math.floor(a);let o=[],l=[],u=[],h=[],c=0,d=0;function p(e,t,i,n,r,a,p,f,m,g,$){let v=a/m,x=p/g,y=a/2,b=p/2,w=f/2,_=m+1,S=g+1,M=0,T=0,E=new iW;for(let A=0;A<S;A++){let L=A*x-b;for(let R=0;R<_;R++){let C=R*v-y;E[e]=C*n,E[t]=L*r,E[i]=w,l.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[i]=f>0?1:-1,u.push(E.x,E.y,E.z),h.push(R/m),h.push(1-A/g),M+=1}}for(let P=0;P<g;P++)for(let D=0;D<m;D++){let I=c+D+_*P,F=c+D+_*(P+1),B=c+(D+1)+_*(P+1),z=c+(D+1)+_*P;o.push(I,F,z),o.push(F,B,z),T+=6}s.addGroup(d,T,$),d+=T,c+=M}p("z","y","x",-1,-1,i,t,e,a,r,0),p("z","y","x",1,-1,i,t,-e,a,r,1),p("x","z","y",1,1,e,i,t,n,a,2),p("x","z","y",1,-1,e,i,-t,n,a,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new rc(l,3)),this.setAttribute("normal",new rc(u,3)),this.setAttribute("uv",new rc(h,2))}static fromJSON(e){return new rz(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function rN(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function rU(e){let t={};for(let i=0;i<e.length;i++){let n=rN(e[i]);for(let r in n)t[r]=n[r]}return t}let rO={clone:rN,merge:rU};class r2 extends nj{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=rN(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i],r=n.value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let a={};for(let s in this.extensions)!0===this.extensions[s]&&(a[s]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}r2.prototype.isShaderMaterial=!0;class rH extends nU{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new n$,this.projectionMatrix=new n$,this.projectionMatrixInverse=new n$}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}rH.prototype.isCamera=!0;class rG extends rH{constructor(e=50,t=1,i=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*iy*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*ix*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*iy*Math.atan(Math.tan(.5*ix*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*ix*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){let s=a.fullWidth,o=a.fullHeight;r+=a.offsetX*n/s,t-=a.offsetY*i/o,n*=a.width/s,i*=a.height/o}let l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}rG.prototype.isPerspectiveCamera=!0;class r3 extends nU{constructor(e,t,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;let n=new rG(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new iW(1,0,0)),this.add(n);let r=new rG(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new iW(-1,0,0)),this.add(r);let a=new rG(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new iW(0,1,0)),this.add(a);let s=new rG(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new iW(0,-1,0)),this.add(s);let o=new rG(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new iW(0,0,1)),this.add(o);let l=new rG(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new iW(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget,[n,r,a,s,o,l]=this.children,u=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;let c=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,s),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=c,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=u}}class rk extends iO{constructor(e,t,i,n,r,a,s,o,l,u){super(e=void 0!==e?e:[],t=void 0!==t?t:ea,i,n,r,a,s,o,l,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}rk.prototype.isCubeTexture=!0;class rV extends iG{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),t=t||{},this.texture=new rk(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:ex,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=eF,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new rz(5,5,5),r=new r2({name:"CubemapFromEquirect",uniforms:rN(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:m,blending:x});r.uniforms.tEquirect.value=t;let a=new rF(n,r),s=t.minFilter;t.minFilter===eb&&(t.minFilter=ex);let o=new r3(1,10,this);return o.update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,n){let r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,n);e.setRenderTarget(r)}}rV.prototype.isWebGLCubeRenderTarget=!0;let rW=new iW,r4=new iW,r6=new iP;class r5{constructor(e=new iW(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=rW.subVectors(i,t).cross(r4.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let i=e.delta(rW),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||r6.getNormalMatrix(e),n=this.coplanarPoint(rW).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}r5.prototype.isPlane=!0;let r7=new nl,rj=new iW;class rq{constructor(e=new r5,t=new r5,i=new r5,n=new r5,r=new r5,a=new r5){this.planes=[e,t,i,n,r,a]}set(e,t,i,n,r,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],l=i[5],u=i[6],h=i[7],c=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],$=i[14],v=i[15];return t[0].setComponents(s-n,h-o,f-c,v-m).normalize(),t[1].setComponents(s+n,h+o,f+c,v+m).normalize(),t[2].setComponents(s+r,h+l,f+d,v+g).normalize(),t[3].setComponents(s-r,h-l,f-d,v-g).normalize(),t[4].setComponents(s-a,h-u,f-p,v-$).normalize(),t[5].setComponents(s+a,h+u,f+p,v+$).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),r7.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(r7)}intersectsSprite(e){return r7.center.set(0,0,0),r7.radius=.7071067811865476,r7.applyMatrix4(e.matrixWorld),this.intersectsSphere(r7)}intersectsSphere(e){let t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++){let a=t[r].distanceToPoint(i);if(a<n)return!1}return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let n=t[i];if(rj.x=n.normal.x>0?e.max.x:e.min.x,rj.y=n.normal.y>0?e.max.y:e.min.y,rj.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(rj))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function rX(){let e=null,t=!1,i=null,n=null;function r(t,a){i(t,a),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function rY(e,t){let i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let i=n.get(t);i&&(e.deleteBuffer(i.buffer),n.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){let a=n.get(t);(!a||a.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let s=n.get(t);void 0===s?n.set(t,function(t,n){let r=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(n,s),e.bufferData(n,r,a),t.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?t.isFloat16BufferAttribute?i?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:r instanceof Uint8Array?o=5121:r instanceof Uint8ClampedArray&&(o=5121),{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):s.version<t.version&&(!function(t,n,r){let a=n.array,s=n.updateRange;e.bindBuffer(r,t),-1===s.count?e.bufferSubData(r,0,a):(i?e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,t,r),s.version=t.version)}}}class rZ extends ry{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,a=t/2,s=Math.floor(i),o=Math.floor(n),l=s+1,u=o+1,h=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let g=0;g<u;g++){let $=g*c-a;for(let v=0;v<l;v++){let x=v*h-r;p.push(x,-$,0),f.push(0,0,1),m.push(v/s),m.push(1-g/o)}}for(let y=0;y<o;y++)for(let b=0;b<s;b++){let w=b+l*y,_=b+l*(y+1),S=b+1+l*(y+1),M=b+1+l*y;d.push(w,_,M),d.push(_,S,M)}this.setIndex(d),this.setAttribute("position",new rc(p,3)),this.setAttribute("normal",new rc(f,3)),this.setAttribute("uv",new rc(m,2))}static fromJSON(e){return new rZ(e.width,e.height,e.widthSegments,e.heightSegments)}}let rJ={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenTint * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n		envColor = envMapTexelToLinear( envColor );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec;\n			#ifdef ENVMAP_MODE_REFLECTION\n				reflectVec = reflect( - viewDir, normal );\n				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			#else\n				reflectVec = refract( - viewDir, normal, refractionRatio );\n			#endif\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		lightMapIrradiance *= PI;\n	#endif\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularTintFactor = specularTint;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARTINTMAP\n			specularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularTintFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenTint = sheenTint;\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenTint;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform vec2 morphTargetsTextureSize;\n		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n			float texelIndex = float( vertexIndex * stride + offset );\n			float y = floor( texelIndex / morphTargetsTextureSize.x );\n			float x = texelIndex - y * morphTargetsTextureSize.x;\n			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n			return texture( morphTargetsTexture, morphUV ).xyz;\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			#ifndef USE_MORPHNORMALS\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n			#else\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n			#endif\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationTint, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationTint;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( float roughness, float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef TEXTURE_LOD_EXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n		vec3 attenuationColor, float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularTint;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARTINTMAP\n		uniform sampler2D specularTintMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenTint;\n	uniform float sheenRoughness;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},rQ={common:{diffuse:{value:new nK(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new iP},uv2Transform:{value:new iP},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new iC(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new nK(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new nK(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new iP}},sprite:{diffuse:{value:new nK(16777215)},opacity:{value:1},center:{value:new iC(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new iP}}},rK={basic:{uniforms:rU([rQ.common,rQ.specularmap,rQ.envmap,rQ.aomap,rQ.lightmap,rQ.fog]),vertexShader:rJ.meshbasic_vert,fragmentShader:rJ.meshbasic_frag},lambert:{uniforms:rU([rQ.common,rQ.specularmap,rQ.envmap,rQ.aomap,rQ.lightmap,rQ.emissivemap,rQ.fog,rQ.lights,{emissive:{value:new nK(0)}}]),vertexShader:rJ.meshlambert_vert,fragmentShader:rJ.meshlambert_frag},phong:{uniforms:rU([rQ.common,rQ.specularmap,rQ.envmap,rQ.aomap,rQ.lightmap,rQ.emissivemap,rQ.bumpmap,rQ.normalmap,rQ.displacementmap,rQ.fog,rQ.lights,{emissive:{value:new nK(0)},specular:{value:new nK(1118481)},shininess:{value:30}}]),vertexShader:rJ.meshphong_vert,fragmentShader:rJ.meshphong_frag},standard:{uniforms:rU([rQ.common,rQ.envmap,rQ.aomap,rQ.lightmap,rQ.emissivemap,rQ.bumpmap,rQ.normalmap,rQ.displacementmap,rQ.roughnessmap,rQ.metalnessmap,rQ.fog,rQ.lights,{emissive:{value:new nK(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rJ.meshphysical_vert,fragmentShader:rJ.meshphysical_frag},toon:{uniforms:rU([rQ.common,rQ.aomap,rQ.lightmap,rQ.emissivemap,rQ.bumpmap,rQ.normalmap,rQ.displacementmap,rQ.gradientmap,rQ.fog,rQ.lights,{emissive:{value:new nK(0)}}]),vertexShader:rJ.meshtoon_vert,fragmentShader:rJ.meshtoon_frag},matcap:{uniforms:rU([rQ.common,rQ.bumpmap,rQ.normalmap,rQ.displacementmap,rQ.fog,{matcap:{value:null}}]),vertexShader:rJ.meshmatcap_vert,fragmentShader:rJ.meshmatcap_frag},points:{uniforms:rU([rQ.points,rQ.fog]),vertexShader:rJ.points_vert,fragmentShader:rJ.points_frag},dashed:{uniforms:rU([rQ.common,rQ.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rJ.linedashed_vert,fragmentShader:rJ.linedashed_frag},depth:{uniforms:rU([rQ.common,rQ.displacementmap]),vertexShader:rJ.depth_vert,fragmentShader:rJ.depth_frag},normal:{uniforms:rU([rQ.common,rQ.bumpmap,rQ.normalmap,rQ.displacementmap,{opacity:{value:1}}]),vertexShader:rJ.meshnormal_vert,fragmentShader:rJ.meshnormal_frag},sprite:{uniforms:rU([rQ.sprite,rQ.fog]),vertexShader:rJ.sprite_vert,fragmentShader:rJ.sprite_frag},background:{uniforms:{uvTransform:{value:new iP},t2D:{value:null}},vertexShader:rJ.background_vert,fragmentShader:rJ.background_frag},cube:{uniforms:rU([rQ.envmap,{opacity:{value:1}}]),vertexShader:rJ.cube_vert,fragmentShader:rJ.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rJ.equirect_vert,fragmentShader:rJ.equirect_frag},distanceRGBA:{uniforms:rU([rQ.common,rQ.displacementmap,{referencePosition:{value:new iW},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rJ.distanceRGBA_vert,fragmentShader:rJ.distanceRGBA_frag},shadow:{uniforms:rU([rQ.lights,rQ.fog,{color:{value:new nK(0)},opacity:{value:1}},]),vertexShader:rJ.shadow_vert,fragmentShader:rJ.shadow_frag}};function r9(e,t,i,n,r){let a=new nK(0),s=0,o,l,u=null,h=0,c=null;function d(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),d(a,s=t)},getClearAlpha:function(){return s},setClearAlpha:function(e){d(a,s=e)},render:function(i,r){let p=!1,g=!0===r.isScene?r.background:null;g&&g.isTexture&&(g=t.get(g));let $=e.xr,v=$.getSession&&$.getSession();v&&"additive"===v.environmentBlendMode&&(g=null),null===g?d(a,s):g&&g.isColor&&(d(g,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===eu)?(void 0===l&&((l=new rF(new rz(1,1,1),new r2({name:"BackgroundCubeMaterial",uniforms:rN(rK.cube.uniforms),vertexShader:rK.cube.vertexShader,fragmentShader:rK.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,(u!==g||h!==g.version||c!==e.toneMapping)&&(l.material.needsUpdate=!0,u=g,h=g.version,c=e.toneMapping),i.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(void 0===o&&((o=new rF(new rZ(2,2),new r2({name:"BackgroundMaterial",uniforms:rN(rK.background.uniforms),vertexShader:rK.background.vertexShader,fragmentShader:rK.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),(u!==g||h!==g.version||c!==e.toneMapping)&&(o.material.needsUpdate=!0,u=g,h=g.version,c=e.toneMapping),i.unshift(o,o.geometry,o.material,0,0,null))}}}function ae(e,t,i,n){let r=e.getParameter(34921),a=n.isWebGL2?null:t.get("OES_vertex_array_object"),s=n.isWebGL2||null!==a,o={},l=d(null),u=l;function h(t){return n.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function c(t){return n.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){let t=[],i=[],n=[];for(let a=0;a<r;a++)t[a]=0,i[a]=0,n[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{},index:null}}function p(){let e=u.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function f(e){m(e,0)}function m(i,r){let a=u.newAttributes,s=u.enabledAttributes,o=u.attributeDivisors;if(a[i]=1,0===s[i]&&(e.enableVertexAttribArray(i),s[i]=1),o[i]!==r){let l=n.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),o[i]=r}}function g(){let t=u.newAttributes,i=u.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function $(t,i,r,a,s,o){!0===n.isWebGL2&&(5124===r||5125===r)?e.vertexAttribIPointer(t,i,r,s,o):e.vertexAttribPointer(t,i,r,a,s,o)}function v(){x(),u!==l&&h((u=l).object)}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,c,v,x){let y=!1;if(s){let b=function(t,i,r){let s=!0===r.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[i.id];void 0===u&&(u={},l[i.id]=u);let h=u[s];return void 0===h&&(h=d(n.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[s]=h),h}(v,c,l);u!==b&&h((u=b).object),(y=function(e,t){let i=u.attributes,n=e.attributes,r=0;for(let a in n){let s=i[a],o=n[a];if(void 0===s||s.attribute!==o||s.data!==o.data)return!0;r++}return u.attributesNum!==r||u.index!==t}(v,x))&&function(e,t){let i={},n=e.attributes,r=0;for(let a in n){let s=n[a],o={};o.attribute=s,s.data&&(o.data=s.data),i[a]=o,r++}u.attributes=i,u.attributesNum=r,u.index=t}(v,x)}else{let w=!0===l.wireframe;(u.geometry!==v.id||u.program!==c.id||u.wireframe!==w)&&(u.geometry=v.id,u.program=c.id,u.wireframe=w,y=!0)}!0===r.isInstancedMesh&&(y=!0),null!==x&&i.update(x,34963),y&&(function(r,a,s,o){if(!1===n.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();let l=o.attributes,u=s.getAttributes(),h=a.defaultAttributeValues;for(let c in u){let d=u[c];if(d.location>=0){let v=l[c];if(void 0===v&&("instanceMatrix"===c&&r.instanceMatrix&&(v=r.instanceMatrix),"instanceColor"===c&&r.instanceColor&&(v=r.instanceColor)),void 0!==v){let x=v.normalized,y=v.itemSize,b=i.get(v);if(void 0===b)continue;let w=b.buffer,_=b.type,S=b.bytesPerElement;if(v.isInterleavedBufferAttribute){let M=v.data,T=M.stride,E=v.offset;if(M&&M.isInstancedInterleavedBuffer){for(let A=0;A<d.locationSize;A++)m(d.location+A,M.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=M.meshPerAttribute*M.count)}else for(let L=0;L<d.locationSize;L++)f(d.location+L);e.bindBuffer(34962,w);for(let R=0;R<d.locationSize;R++)$(d.location+R,y/d.locationSize,_,x,T*S,(E+y/d.locationSize*R)*S)}else{if(v.isInstancedBufferAttribute){for(let C=0;C<d.locationSize;C++)m(d.location+C,v.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=v.meshPerAttribute*v.count)}else for(let P=0;P<d.locationSize;P++)f(d.location+P);e.bindBuffer(34962,w);for(let D=0;D<d.locationSize;D++)$(d.location+D,y/d.locationSize,_,x,y*S,y/d.locationSize*D*S)}}else if(void 0!==h){let I=h[c];if(void 0!==I)switch(I.length){case 2:e.vertexAttrib2fv(d.location,I);break;case 3:e.vertexAttrib3fv(d.location,I);break;case 4:e.vertexAttrib4fv(d.location,I);break;default:e.vertexAttrib1fv(d.location,I)}}}}g()}(r,l,c,v),null!==x&&e.bindBuffer(34963,i.get(x).buffer))},reset:v,resetDefaultState:x,dispose:function(){for(let e in v(),o){let t=o[e];for(let i in t){let n=t[i];for(let r in n)c(n[r].object),delete n[r];delete t[i]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let i in t){let n=t[i];for(let r in n)c(n[r].object),delete n[r];delete t[i]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let i=o[t];if(void 0===i[e.id])continue;let n=i[e.id];for(let r in n)c(n[r].object),delete n[r];delete i[e.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function at(e,t,i,n){let r=n.isWebGL2,a;function s(e){a=e}this.setMode=s,this.render=function(t,n){e.drawArrays(a,t,n),i.update(n,a,1)},this.renderInstances=function(n,s,o){if(0===o)return;let l,u;if(r)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[u](a,n,s,o),i.update(s,a,o)}}function ai(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==i.precision?i.precision:"highp",o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),u=!0===i.logarithmicDepthBuffer,h=e.getParameter(34930),c=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),$=e.getParameter(36349),v=c>0,x=a||t.has("OES_texture_float"),y=a?e.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let i=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:$,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:y}}function an(e){let t=this,i=null,n=0,r=!1,a=!1,s=new r5,o=new iP,l={value:null,needsUpdate:!1};function u(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(e,i,n,r){let a=null!==e?e.length:0,u=null;if(0!==a){if(u=l.value,!0!==r||null===u){let h=n+4*a,c=i.matrixWorldInverse;o.getNormalMatrix(c),(null===u||u.length<h)&&(u=new Float32Array(h));for(let d=0,p=n;d!==a;++d,p+=4)s.copy(e[d]).applyMatrix4(c,o),s.normal.toArray(u,p),u[p+3]=s.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==n||r;return r=t,i=h(e,a,0),n=e.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,u()},this.setState=function(t,s,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(r&&null!==c&&0!==c.length&&(!a||p)){let m=a?0:n,g=4*m,$=f.clippingState||null;l.value=$,$=h(c,s,g,o);for(let v=0;v!==g;++v)$[v]=i[v];f.clippingState=$,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else a?h(null):u()}}function ar(e){let t=new WeakMap;function i(e,t){return t===eo?e.mapping=ea:t===el&&(e.mapping=es),e}function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){let a=r.mapping;if(a===eo||a===el){if(t.has(r)){let s=t.get(r).texture;return i(s,r.mapping)}{let o=r.image;if(!o||!(o.height>0))return null;{let l=e.getRenderTarget(),u=new rV(o.height/2);return u.fromEquirectangularTexture(e,r),t.set(r,u),e.setRenderTarget(l),r.addEventListener("dispose",n),i(u.texture,r.mapping)}}}}return r},dispose:function(){t=new WeakMap}}}rK.physical={uniforms:rU([rK.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new iC(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new nK(0)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new iC},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new nK(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new nK(1,1,1)},specularTintMap:{value:null}}]),vertexShader:rJ.meshphysical_vert,fragmentShader:rJ.meshphysical_frag};class aa extends rH{constructor(e=-1,t=1,i=1,n=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,a=i+e,s=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,s-=u*this.view.offsetY,o=s-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}aa.prototype.isOrthographicCamera=!0;class as extends r2{constructor(e){super(e),this.type="RawShaderMaterial"}}as.prototype.isRawShaderMaterial=!0;let ao=[.125,.215,.35,.446,.526,.582],al=5+ao.length,au={[tz]:0,[tN]:1,[tO]:2,[tH]:3,[tG]:4,[t3]:5,[tU]:6},ah=new aa,{_lodPlanes:ac,_sizeLods:ad,_sigmas:ap}=function(){let e=[],t=[],i=[],n=8;for(let r=0;r<al;r++){let a=Math.pow(2,n);t.push(a);let s=1/a;r>4?s=ao[r-8+4-1]:0==r&&(s=0),i.push(s);let o=1/(a-1),l=-o/2,u=1+o/2,h=[l,l,u,l,u,u,l,l,u,u,l,u],c=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let f=0;f<6;f++){let m=f%3*2/3-1,g=f>2?0:-1,$=[m,g,0,m+2/3,g,0,m+2/3,g+1,0,m,g,0,m+2/3,g+1,0,m,g+1,0];c.set($,18*f),d.set(h,12*f);let v=[f,f,f,f,f,f];p.set(v,6*f)}let x=new ry;x.setAttribute("position",new ri(c,3)),x.setAttribute("uv",new ri(d,2)),x.setAttribute("faceIndex",new ri(p,1)),e.push(x),n>4&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:i}}(),af=new nK,am=null,ag=(1+Math.sqrt(5))/2,a$=1/ag,av=[new iW(1,1,1),new iW(-1,1,1),new iW(1,1,-1),new iW(-1,1,-1),new iW(0,ag,a$),new iW(0,ag,-a$),new iW(a$,0,ag),new iW(-a$,0,ag),new iW(ag,a$,0),new iW(-ag,a$,0)];class ax{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){let t=new Float32Array(e),i=new iW(0,1,0),n=new as({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i},inputEncoding:{value:au[tz]},outputEncoding:{value:au[tz]}},vertexShader:a_(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${aS()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:x,depthTest:!1,depthWrite:!1});return n}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){am=this._renderer.getRenderTarget();let r=this._allocateTargets();return this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=aw(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=ab(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<ac.length;e++)ac[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(am),e.scissorTest=!1,a8(e,0,0,e.width,e.height)}_fromTexture(e){am=this._renderer.getRenderTarget();let t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t;let i={magFilter:ef,minFilter:ef,generateMipmaps:!1,type:e_,format:eN,encoding:(t=e,void 0!==t&&t.type===e_&&(t.encoding===tz||t.encoding===tN||t.encoding===tU))?e.encoding:tO,depthBuffer:!1},n=ay(i);return n.depthBuffer=!e,this._pingPongRenderTarget=ay(i),n}_compileMaterial(e){let t=new rF(ac[0],e);this._renderer.compile(t,ah)}_sceneToCubeUV(e,t,i,n){let r=new rG(90,1,t,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.outputEncoding,h=o.toneMapping;o.getClearColor(af),o.toneMapping=Q,o.outputEncoding=tz,o.autoClear=!1;let c=new n9({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),d=new rF(new rz,c),p=!1,f=e.background;f?f.isColor&&(c.color.copy(f),e.background=null,p=!0):(c.color.copy(af),p=!0);for(let g=0;g<6;g++){let $=g%3;0==$?(r.up.set(0,a[g],0),r.lookAt(s[g],0,0)):1==$?(r.up.set(0,0,a[g]),r.lookAt(0,s[g],0)):(r.up.set(0,a[g],0),r.lookAt(0,0,s[g])),a8(n,256*$,g>2?256:0,256,256),o.setRenderTarget(n),p&&o.render(d,r),o.render(e,r)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=h,o.outputEncoding=u,o.autoClear=l,e.background=f}_setEncoding(e,t){!0===this._renderer.capabilities.isWebGL2&&t.format===eF&&t.type===e_&&t.encoding===tN?e.value=au[tz]:e.value=au[t.encoding]}_textureToCubeUV(e,t){let i=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=aw()):null==this._equirectShader&&(this._equirectShader=ab());let n=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new rF(ac[0],n),a=n.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(a.inputEncoding,e),this._setEncoding(a.outputEncoding,t.texture),a8(t,0,0,768,512),i.setRenderTarget(t),i.render(r,ah)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<al;n++){let r=Math.sqrt(ap[n]*ap[n]-ap[n-1]*ap[n-1]),a=av[(n-1)%av.length];this._blur(e,n-1,n,r,a)}t.autoClear=i}_blur(e,t,i,n,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",r),this._halfBlur(a,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let u=new rF(ac[n],l),h=l.uniforms,c=ad[i]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let $=0;$<20;++$){let v=$/p,x=Math.exp(-v*v/2);m.push(x),0==$?g+=x:$<f&&(g+=2*x)}for(let y=0;y<m.length;y++)m[y]=m[y]/g;h.envMap.value=e.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s),h.dTheta.value=d,h.mipInt.value=8-i,this._setEncoding(h.inputEncoding,e.texture),this._setEncoding(h.outputEncoding,e.texture);let b=ad[n];a8(t,3*Math.max(0,256-2*b),(0===n?0:512)+2*b*(n>4?n-8+4:0),3*b,2*b),o.setRenderTarget(t),o.render(u,ah)}}function ay(e){let t=new iG(768,768,e);return t.texture.mapping=eu,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function a8(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function ab(){let e=new iC(1,1),t=new as({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:au[tz]},outputEncoding:{value:au[tz]}},vertexShader:a_(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${aS()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:x,depthTest:!1,depthWrite:!1});return t}function aw(){let e=new as({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:au[tz]},outputEncoding:{value:au[tz]}},vertexShader:a_(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${aS()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:x,depthTest:!1,depthWrite:!1});return e}function a_(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function aS(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function aM(e){let t=new WeakMap,i=null;function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){let a=r.mapping,s=a===eo||a===el,o=a===ea||a===es;if(s||o){if(t.has(r))return t.get(r).texture;{let l=r.image;if(!(s&&l&&l.height>0||o&&l&&function(e){let t=0;for(let i=0;i<6;i++)void 0!==e[i]&&t++;return 6===t}(l)))return null;{let u=e.getRenderTarget();null===i&&(i=new ax(e));let h=s?i.fromEquirectangular(r):i.fromCubemap(r);return t.set(r,h),e.setRenderTarget(u),r.addEventListener("dispose",n),h.texture}}}}return r},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function aT(e){let t={};function i(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function aE(e,t,i,n){let r={},a=new WeakMap;function s(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",s),delete r[o.id];let u=a.get(o);u&&(t.remove(u),a.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],n=e.index,r=e.attributes.position,s=0;if(null!==n){let o=n.array;s=n.version;for(let l=0,u=o.length;l<u;l+=3){let h=o[l+0],c=o[l+1],d=o[l+2];i.push(h,c,c,d,d,h)}}else{let p=r.array;s=r.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let g=f+0,$=f+1,v=f+2;i.push(g,$,$,v,v,g)}}let x=new(iD(i)>65535?ru:ro)(i,1);x.version=s;let y=a.get(e);y&&t.remove(y),a.set(e,x)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,i.memory.geometries++),t},update:function(e){let i=e.attributes;for(let n in i)t.update(i[n],34962);let r=e.morphAttributes;for(let a in r){let s=r[a];for(let o=0,l=s.length;o<l;o++)t.update(s[o],34962)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return a.get(e)}}}function aA(e,t,i,n){let r=n.isWebGL2,a;function s(e){a=e}let o,l;this.setMode=s,this.setIndex=function(e){o=e.type,l=e.bytesPerElement},this.render=function(t,n){e.drawElements(a,n,o,t*l),i.update(n,a,1)},this.renderInstances=function(n,s,u){if(0===u)return;let h,c;if(r)h=e,c="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===h){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[c](a,s,o,n*l,u),i.update(s,a,u)}}function aL(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,n){switch(t.calls++,i){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}class a1 extends iO{constructor(e=null,t=1,i=1,n=1){super(null),this.image={data:e,width:t,height:i,depth:n},this.magFilter=ef,this.minFilter=ef,this.wrapR=ed,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}function aR(e,t){return e[0]-t[0]}function a0(e,t){return Math.abs(t[1])-Math.abs(e[1])}function aC(e,t){let i=1,n=t.isInterleavedBufferAttribute?t.data.array:t.array;n instanceof Int8Array?i=127:n instanceof Int16Array?i=32767:n instanceof Int32Array?i=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),e.divideScalar(i)}function aP(e,t,i){let n={},r=new Float32Array(8),a=new WeakMap,s=new iW,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,u,h,c){let d=l.morphTargetInfluences;if(!0===t.isWebGL2){let p=u.morphAttributes.position.length,f=a.get(u);if(void 0===f||f.count!==p){void 0!==f&&f.texture.dispose();let m=void 0!==u.morphAttributes.normal,g=u.morphAttributes.position,$=u.morphAttributes.normal||[],v=u.attributes.position.count,x=!0===m?2:1,y=v*x,b=1;y>t.maxTextureSize&&(b=Math.ceil(y/t.maxTextureSize),y=t.maxTextureSize);let w=new Float32Array(y*b*4*p),_=new a1(w,y,b,p);_.format=eF,_.type=eL;let S=4*x;for(let M=0;M<p;M++){let T=g[M],E=$[M],A=y*b*4*M;for(let L=0;L<T.count;L++){s.fromBufferAttribute(T,L),!0===T.normalized&&aC(s,T);let R=L*S;w[A+R+0]=s.x,w[A+R+1]=s.y,w[A+R+2]=s.z,w[A+R+3]=0,!0===m&&(s.fromBufferAttribute(E,L),!0===E.normalized&&aC(s,E),w[A+R+4]=s.x,w[A+R+5]=s.y,w[A+R+6]=s.z,w[A+R+7]=0)}}f={count:p,texture:_,size:new iC(y,b)},a.set(u,f)}let C=0;for(let P=0;P<d.length;P++)C+=d[P];let D=u.morphTargetsRelative?1:1-C;c.getUniforms().setValue(e,"morphTargetBaseInfluence",D),c.getUniforms().setValue(e,"morphTargetInfluences",d),c.getUniforms().setValue(e,"morphTargetsTexture",f.texture,i),c.getUniforms().setValue(e,"morphTargetsTextureSize",f.size)}else{let I=void 0===d?0:d.length,F=n[u.id];if(void 0===F||F.length!==I){F=[];for(let B=0;B<I;B++)F[B]=[B,0];n[u.id]=F}for(let z=0;z<I;z++){let N=F[z];N[0]=z,N[1]=d[z]}F.sort(a0);for(let U=0;U<8;U++)U<I&&F[U][1]?(o[U][0]=F[U][0],o[U][1]=F[U][1]):(o[U][0]=Number.MAX_SAFE_INTEGER,o[U][1]=0);o.sort(aR);let O=u.morphAttributes.position,H=u.morphAttributes.normal,G=0;for(let k=0;k<8;k++){let V=o[k],W=V[0],j=V[1];W!==Number.MAX_SAFE_INTEGER&&j?(O&&u.getAttribute("morphTarget"+k)!==O[W]&&u.setAttribute("morphTarget"+k,O[W]),H&&u.getAttribute("morphNormal"+k)!==H[W]&&u.setAttribute("morphNormal"+k,H[W]),r[k]=j,G+=j):(O&&!0===u.hasAttribute("morphTarget"+k)&&u.deleteAttribute("morphTarget"+k),H&&!0===u.hasAttribute("morphNormal"+k)&&u.deleteAttribute("morphNormal"+k),r[k]=0)}let q=u.morphTargetsRelative?1:1-G;c.getUniforms().setValue(e,"morphTargetBaseInfluence",q),c.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function aD(e,t,i,n){let r=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){let s=n.render.frame,o=e.geometry,l=t.get(e,o);return r.get(l)!==s&&(t.update(l),r.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}a1.prototype.isDataTexture2DArray=!0;class aI extends iO{constructor(e=null,t=1,i=1,n=1){super(null),this.image={data:e,width:t,height:i,depth:n},this.magFilter=ef,this.minFilter=ef,this.wrapR=ed,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}aI.prototype.isDataTexture3D=!0;let aF=new iO,aB=new a1,az=new aI,aN=new rk,aU=[],aO=[],a2=new Float32Array(16),aH=new Float32Array(9),aG=new Float32Array(4);function a3(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,a=aU[r];if(void 0===a&&(a=new Float32Array(r),aU[r]=a),0!==t){n.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=i,e[s].toArray(a,o)}return a}function ak(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function aV(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function aW(e,t){let i=aO[t];void 0===i&&(i=new Int32Array(t),aO[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function a4(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function a6(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(ak(i,t))return;e.uniform2fv(this.addr,t),aV(i,t)}}function a5(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(ak(i,t))return;e.uniform3fv(this.addr,t),aV(i,t)}}function a7(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(ak(i,t))return;e.uniform4fv(this.addr,t),aV(i,t)}}function aj(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(ak(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),aV(i,t)}else{if(ak(i,n))return;aG.set(n),e.uniformMatrix2fv(this.addr,!1,aG),aV(i,n)}}function aq(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(ak(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),aV(i,t)}else{if(ak(i,n))return;aH.set(n),e.uniformMatrix3fv(this.addr,!1,aH),aV(i,n)}}function aX(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(ak(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),aV(i,t)}else{if(ak(i,n))return;a2.set(n),e.uniformMatrix4fv(this.addr,!1,a2),aV(i,n)}}function aY(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function aZ(e,t){let i=this.cache;ak(i,t)||(e.uniform2iv(this.addr,t),aV(i,t))}function aJ(e,t){let i=this.cache;ak(i,t)||(e.uniform3iv(this.addr,t),aV(i,t))}function aQ(e,t){let i=this.cache;ak(i,t)||(e.uniform4iv(this.addr,t),aV(i,t))}function aK(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function a9(e,t){let i=this.cache;ak(i,t)||(e.uniform2uiv(this.addr,t),aV(i,t))}function se(e,t){let i=this.cache;ak(i,t)||(e.uniform3uiv(this.addr,t),aV(i,t))}function st(e,t){let i=this.cache;ak(i,t)||(e.uniform4uiv(this.addr,t),aV(i,t))}function si(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(t||aF,r)}function sn(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||az,r)}function sr(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(t||aN,r)}function sa(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||aB,r)}function ss(e,t){e.uniform1fv(this.addr,t)}function so(e,t){let i=a3(t,this.size,2);e.uniform2fv(this.addr,i)}function sl(e,t){let i=a3(t,this.size,3);e.uniform3fv(this.addr,i)}function su(e,t){let i=a3(t,this.size,4);e.uniform4fv(this.addr,i)}function sh(e,t){let i=a3(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function sc(e,t){let i=a3(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function sd(e,t){let i=a3(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function sp(e,t){e.uniform1iv(this.addr,t)}function sf(e,t){e.uniform2iv(this.addr,t)}function sm(e,t){e.uniform3iv(this.addr,t)}function sg(e,t){e.uniform4iv(this.addr,t)}function s$(e,t){e.uniform1uiv(this.addr,t)}function sv(e,t){e.uniform2uiv(this.addr,t)}function sx(e,t){e.uniform3uiv(this.addr,t)}function sy(e,t){e.uniform4uiv(this.addr,t)}function s8(e,t,i){let n=t.length,r=aW(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.safeSetTexture2D(t[a]||aF,r[a])}function sb(e,t,i){let n=t.length,r=aW(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.safeSetTextureCube(t[a]||aN,r[a])}function sw(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return a4;case 35664:return a6;case 35665:return a5;case 35666:return a7;case 35674:return aj;case 35675:return aq;case 35676:return aX;case 5124:case 35670:return aY;case 35667:case 35671:return aZ;case 35668:case 35672:return aJ;case 35669:case 35673:return aQ;case 5125:return aK;case 36294:return a9;case 36295:return se;case 36296:return st;case 35678:case 36198:case 36298:case 36306:case 35682:return si;case 35679:case 36299:case 36307:return sn;case 35680:case 36300:case 36308:case 36293:return sr;case 36289:case 36303:case 36311:case 36292:return sa}}(t.type)}function s_(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return ss;case 35664:return so;case 35665:return sl;case 35666:return su;case 35674:return sh;case 35675:return sc;case 35676:return sd;case 5124:case 35670:return sp;case 35667:case 35671:return sf;case 35668:case 35672:return sm;case 35669:case 35673:return sg;case 5125:return s$;case 36294:return sv;case 36295:return sx;case 36296:return sy;case 35678:case 36198:case 36298:case 36306:case 35682:return s8;case 35680:case 36300:case 36308:case 36293:return sb}}(t.type)}function sS(e){this.id=e,this.seq=[],this.map={}}s_.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),aV(t,e)},sS.prototype.setValue=function(e,t,i){let n=this.seq;for(let r=0,a=n.length;r!==a;++r){let s=n[r];s.setValue(e,t[s.id],i)}};let sM=/(\w+)(\])?(\[|\.)?/g;function sT(e,t){e.seq.push(t),e.map[t.id]=t}function sE(e,t,i){let n=e.name,r=n.length;for(sM.lastIndex=0;;){let a=sM.exec(n),s=sM.lastIndex,o=a[1],l="]"===a[2],u=a[3];if(l&&(o|=0),void 0===u||"["===u&&s+2===r){sT(i,void 0===u?new sw(o,e,t):new s_(o,e,t));break}{let h=i.map,c=h[o];void 0===c&&sT(i,c=new sS(o)),i=c}}}function sA(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){let r=e.getActiveUniform(t,n),a=e.getUniformLocation(t,r.name);sE(r,a,this)}}function sL(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}sA.prototype.setValue=function(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)},sA.prototype.setOptional=function(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)},sA.upload=function(e,t,i,n){for(let r=0,a=t.length;r!==a;++r){let s=t[r],o=i[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,n)}},sA.seqWithValue=function(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let a=e[n];a.id in t&&i.push(a)}return i};let s1=0;function sR(e){switch(e){case tz:return["Linear","( value )"];case tN:return["sRGB","( value )"];case tO:return["RGBE","( value )"];case tH:return["RGBM","( value, 7.0 )"];case tG:return["RGBM","( value, 16.0 )"];case t3:return["RGBD","( value, 256.0 )"];case tU:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case t2:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function s0(e,t,i){let n=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();return n&&""===r?"":i.toUpperCase()+"\n\n"+r+"\n\n"+function(e){let t=e.split("\n");for(let i=0;i<t.length;i++)t[i]=i+1+": "+t[i];return t.join("\n")}(e.getShaderSource(t))}function sC(e,t){let i=sR(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function sP(e){return""!==e}function sD(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function sI(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let sF=/^[ \t]*#include +<([\w\d./]+)>/gm;function sB(e){return e.replace(sF,sz)}function sz(e,t){let i=rJ[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return sB(i)}let sN=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,sU=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sO(e){return e.replace(sU,sH).replace(sN,s2)}function s2(e,t,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sH(e,t,i,n)}function sH(e,t,i,n){let r="";for(let a=parseInt(t);a<parseInt(i);a++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function sG(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function s3(e,t,i,n){var r;let a=e.getContext(),s=i.defines,o=i.vertexShader,l=i.fragmentShader,u,h=(r=i,u="SHADOWMAP_TYPE_BASIC",r.shadowMapType===c?u="SHADOWMAP_TYPE_PCF":r.shadowMapType===d?u="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===p&&(u="SHADOWMAP_TYPE_VSM"),u),f=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ea:case es:t="ENVMAP_TYPE_CUBE";break;case eu:case eh:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),m=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case es:case eh:t="ENVMAP_MODE_REFRACTION"}return t}(i),g=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Y:t="ENVMAP_BLENDING_MULTIPLY";break;case Z:t="ENVMAP_BLENDING_MIX";break;case J:t="ENVMAP_BLENDING_ADD"}return t}(i),$=e.gammaFactor>0?e.gammaFactor:1,v=i.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(sP).join("\n")}(i),x=function(e){let t=[];for(let i in e){let n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(s),y=a.createProgram(),b,w,_=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((b=[x].filter(sP).join("\n")).length>0&&(b+="\n"),(w=[v,x].filter(sP).join("\n")).length>0&&(w+="\n")):(b=[sG(i),"#define SHADER_NAME "+i.shaderName,x,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+$,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+m:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularTintMap?"#define USE_SPECULARTINTMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphTargets&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargets&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+h:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(sP).join("\n"),w=[v,sG(i),"#define SHADER_NAME "+i.shaderName,x,"#define GAMMA_FACTOR "+$,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+f:"",i.envMap?"#define "+m:"",i.envMap?"#define "+g:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularTintMap?"#define USE_SPECULARTINTMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+h:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==Q?"#define TONE_MAPPING":"",i.toneMapping!==Q?rJ.tonemapping_pars_fragment:"",i.toneMapping!==Q?function(e,t){let i;switch(t){case K:i="Linear";break;case ee:i="Reinhard";break;case et:i="OptimizedCineon";break;case ei:i="ACESFilmic";break;case en:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.format===eI?"#define OPAQUE":"",rJ.encodings_pars_fragment,i.map?sC("mapTexelToLinear",i.mapEncoding):"",i.matcap?sC("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?sC("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?sC("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.specularTintMap?sC("specularTintMapTexelToLinear",i.specularTintMapEncoding):"",i.lightMap?sC("lightMapTexelToLinear",i.lightMapEncoding):"",function(e,t){let i=sR(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(sP).join("\n")),o=sI(o=sD(o=sB(o),i),i),l=sI(l=sD(l=sB(l),i),i),o=sO(o),l=sO(l),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(_="#version 300 es\n",b="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+b,w=["#define varying in",i.glslVersion===ig?"":"out highp vec4 pc_fragColor;",i.glslVersion===ig?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);let S=_+b+o,M=_+w+l,T=sL(a,35633,S),E=sL(a,35632,M);if(a.attachShader(y,T),a.attachShader(y,E),void 0!==i.index0AttributeName?a.bindAttribLocation(y,0,i.index0AttributeName):!0===i.morphTargets&&a.bindAttribLocation(y,0,"position"),a.linkProgram(y),e.debug.checkShaderErrors){let A=a.getProgramInfoLog(y).trim(),L=a.getShaderInfoLog(T).trim(),R=a.getShaderInfoLog(E).trim(),C=!0,P=!0;if(!1===a.getProgramParameter(y,35714)){C=!1;let D=s0(a,T,"vertex"),I=s0(a,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(y,35715)+"\n\nProgram Info Log: "+A+"\n"+D+"\n"+I)}else""!==A?console.warn("THREE.WebGLProgram: Program Info Log:",A):(""===L||""===R)&&(P=!1);P&&(this.diagnostics={runnable:C,programLog:A,vertexShader:{log:L,prefix:b},fragmentShader:{log:R,prefix:w}})}a.deleteShader(T),a.deleteShader(E);let F;this.getUniforms=function(){return void 0===F&&(F=new sA(a,y)),F};let B;return this.getAttributes=function(){return void 0===B&&(B=function(e,t){let i={},n=e.getProgramParameter(t,35721);for(let r=0;r<n;r++){let a=e.getActiveAttrib(t,r),s=a.name,o=1;35674===a.type&&(o=2),35675===a.type&&(o=3),35676===a.type&&(o=4),i[s]={type:a.type,location:e.getAttribLocation(t,s),locationSize:o}}return i}(a,y)),B},this.destroy=function(){n.releaseStatesOfProgram(this),a.deleteProgram(y),this.program=void 0},this.name=i.shaderName,this.id=s1++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=T,this.fragmentShader=E,this}function sk(e,t,i,n,r,a,s){let o=[],l=r.isWebGL2,u=r.logarithmicDepthBuffer,h=r.floatVertexTextures,c=r.maxVertexUniforms,d=r.vertexTextures,p=r.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},$=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheen","transmission","transmissionMap","thicknessMap"];function v(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=tz,l&&e&&e.isTexture&&e.format===eF&&e.type===e_&&e.encoding===tN&&(t=tz),t}return{getParameters:function(a,o,$,x,y){let b=x.fog,w=a.isMeshStandardMaterial?x.environment:null,_=(a.isMeshStandardMaterial?i:t).get(a.envMap||w),S=f[a.type],M=y.isSkinnedMesh?function(e){let t=e.skeleton,i=t.bones;if(h)return 1024;{let n=Math.min(Math.floor((c-20)/4),i.length);return n<i.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+i.length+" bones. This GPU supports "+n+"."),0):n}}(y):0;null!==a.precision&&(p=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");let T,E;if(S){let A=rK[S];T=A.vertexShader,E=A.fragmentShader}else T=a.vertexShader,E=a.fragmentShader;let L=e.getRenderTarget(),R=a.alphaTest>0,C=a.clearcoat>0,P={isWebGL2:l,shaderID:S,shaderName:a.type,vertexShader:T,fragmentShader:E,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:d,outputEncoding:null!==L?v(L.texture):e.outputEncoding,map:!!a.map,mapEncoding:v(a.map),matcap:!!a.matcap,matcapEncoding:v(a.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:v(_),envMapCubeUV:!!_&&(_.mapping===eu||_.mapping===eh),lightMap:!!a.lightMap,lightMapEncoding:v(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:v(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===t4,tangentSpaceNormalMap:a.normalMapType===tW,clearcoat:C,clearcoatMap:C&&!!a.clearcoatMap,clearcoatRoughnessMap:C&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:C&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularTintMap:!!a.specularTintMap,specularTintMapEncoding:v(a.specularTintMap),alphaMap:!!a.alphaMap,alphaTest:R,gradientMap:!!a.gradientMap,sheen:a.sheen>0,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!y.geometry&&!!y.geometry.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!y.geometry&&!!y.geometry.attributes.color&&4===y.geometry.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularTintMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularTintMap)&&!!a.displacementMap,fog:!!b,useFog:a.fog,fogExp2:b&&b.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===y.isSkinnedMesh&&M>0,maxBones:M,useVertexTexture:h,morphTargets:!!y.geometry&&!!y.geometry.morphAttributes.position,morphNormals:!!y.geometry&&!!y.geometry.morphAttributes.normal,morphTargetsCount:y.geometry&&y.geometry.morphAttributes.position?y.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,format:a.format,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&$.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:Q,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===g,flipSided:a.side===m,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||n.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return P},getProgramCacheKey:function(t){let i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.fragmentShader),i.push(t.vertexShader)),void 0!==t.defines)for(let n in t.defines)i.push(n),i.push(t.defines[n]);if(!1===t.isRawShaderMaterial){for(let r=0;r<$.length;r++)i.push(t[$[r]]);i.push(e.outputEncoding),i.push(e.gammaFactor)}return i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){let t=f[e.type],i;if(t){let n=rK[t];i=rO.clone(n.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let n;for(let r=0,s=o.length;r<s;r++){let l=o[r];if(l.cacheKey===i){n=l,++n.usedTimes;break}}return void 0===n&&(n=new s3(e,i,t,a),o.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function sV(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function sW(e,t){if(e.groupOrder!==t.groupOrder)return e.groupOrder-t.groupOrder;if(e.renderOrder!==t.renderOrder)return e.renderOrder-t.renderOrder;if(e.program!==t.program)return e.program.id-t.program.id;if(e.material.id!==t.material.id)return e.material.id-t.material.id;if(e.z!==t.z)return e.z-t.z;else return e.id-t.id}function s4(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function s6(e){let t=[],i=0,n=[],r=[],a=[],s={id:-1};function o(n,r,a,o,l,u){let h=t[i],c=e.get(a);return void 0===h?(h={id:n.id,object:n,geometry:r,material:a,program:c.program||s,groupOrder:o,renderOrder:n.renderOrder,z:l,group:u},t[i]=h):(h.id=n.id,h.object=n,h.geometry=r,h.material=a,h.program=c.program||s,h.groupOrder=o,h.renderOrder=n.renderOrder,h.z=l,h.group=u),i++,h}return{opaque:n,transmissive:r,transparent:a,init:function(){i=0,n.length=0,r.length=0,a.length=0},push:function(e,t,i,s,l,u){let h=o(e,t,i,s,l,u);i.transmission>0?r.push(h):!0===i.transparent?a.push(h):n.push(h)},unshift:function(e,t,i,s,l,u){let h=o(e,t,i,s,l,u);i.transmission>0?r.unshift(h):!0===i.transparent?a.unshift(h):n.unshift(h)},finish:function(){for(let e=i,n=t.length;e<n;e++){let r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){n.length>1&&n.sort(e||sW),r.length>1&&r.sort(t||s4),a.length>1&&a.sort(t||s4)}}}function s5(e){let t=new WeakMap;return{get:function(i,n){let r;return!1===t.has(i)?(r=new s6(e),t.set(i,[r])):n>=t.get(i).length?(r=new s6(e),t.get(i).push(r)):r=t.get(i)[n],r},dispose:function(){t=new WeakMap}}}function s7(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new iW,color:new nK};break;case"SpotLight":i={position:new iW,direction:new iW,color:new nK,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new iW,color:new nK,distance:0,decay:0};break;case"HemisphereLight":i={direction:new iW,skyColor:new nK,groundColor:new nK};break;case"RectAreaLight":i={color:new nK,position:new iW,halfWidth:new iW,halfHeight:new iW}}return e[t.id]=i,i}}}let sj=0;function sq(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function sX(e,t){let i=new s7,n=function(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new iC};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new iC,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)r.probe.push(new iW);let s=new iW,o=new n$,l=new n$;return{setup:function(a,s){let o=0,l=0,u=0;for(let h=0;h<9;h++)r.probe[h].set(0,0,0);let c=0,d=0,p=0,f=0,m=0,g=0,$=0,v=0;a.sort(sq);let x=!0!==s?Math.PI:1;for(let y=0,b=a.length;y<b;y++){let w=a[y],_=w.color,S=w.intensity,M=w.distance,T=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)o+=_.r*S*x,l+=_.g*S*x,u+=_.b*S*x;else if(w.isLightProbe)for(let E=0;E<9;E++)r.probe[E].addScaledVector(w.sh.coefficients[E],S);else if(w.isDirectionalLight){let A=i.get(w);if(A.color.copy(w.color).multiplyScalar(w.intensity*x),w.castShadow){let L=w.shadow,R=n.get(w);R.shadowBias=L.bias,R.shadowNormalBias=L.normalBias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,r.directionalShadow[c]=R,r.directionalShadowMap[c]=T,r.directionalShadowMatrix[c]=w.shadow.matrix,g++}r.directional[c]=A,c++}else if(w.isSpotLight){let C=i.get(w);if(C.position.setFromMatrixPosition(w.matrixWorld),C.color.copy(_).multiplyScalar(S*x),C.distance=M,C.coneCos=Math.cos(w.angle),C.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),C.decay=w.decay,w.castShadow){let P=w.shadow,D=n.get(w);D.shadowBias=P.bias,D.shadowNormalBias=P.normalBias,D.shadowRadius=P.radius,D.shadowMapSize=P.mapSize,r.spotShadow[p]=D,r.spotShadowMap[p]=T,r.spotShadowMatrix[p]=w.shadow.matrix,v++}r.spot[p]=C,p++}else if(w.isRectAreaLight){let I=i.get(w);I.color.copy(_).multiplyScalar(S),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),r.rectArea[f]=I,f++}else if(w.isPointLight){let F=i.get(w);if(F.color.copy(w.color).multiplyScalar(w.intensity*x),F.distance=w.distance,F.decay=w.decay,w.castShadow){let B=w.shadow,z=n.get(w);z.shadowBias=B.bias,z.shadowNormalBias=B.normalBias,z.shadowRadius=B.radius,z.shadowMapSize=B.mapSize,z.shadowCameraNear=B.camera.near,z.shadowCameraFar=B.camera.far,r.pointShadow[d]=z,r.pointShadowMap[d]=T,r.pointShadowMatrix[d]=w.shadow.matrix,$++}r.point[d]=F,d++}else if(w.isHemisphereLight){let N=i.get(w);N.skyColor.copy(w.color).multiplyScalar(S*x),N.groundColor.copy(w.groundColor).multiplyScalar(S*x),r.hemi[m]=N,m++}}f>0&&(t.isWebGL2?(r.rectAreaLTC1=rQ.LTC_FLOAT_1,r.rectAreaLTC2=rQ.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=rQ.LTC_FLOAT_1,r.rectAreaLTC2=rQ.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=rQ.LTC_HALF_1,r.rectAreaLTC2=rQ.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=u;let U=r.hash;(U.directionalLength!==c||U.pointLength!==d||U.spotLength!==p||U.rectAreaLength!==f||U.hemiLength!==m||U.numDirectionalShadows!==g||U.numPointShadows!==$||U.numSpotShadows!==v)&&(r.directional.length=c,r.spot.length=p,r.rectArea.length=f,r.point.length=d,r.hemi.length=m,r.directionalShadow.length=g,r.directionalShadowMap.length=g,r.pointShadow.length=$,r.pointShadowMap.length=$,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=g,r.pointShadowMatrix.length=$,r.spotShadowMatrix.length=v,U.directionalLength=c,U.pointLength=d,U.spotLength=p,U.rectAreaLength=f,U.hemiLength=m,U.numDirectionalShadows=g,U.numPointShadows=$,U.numSpotShadows=v,r.version=sj++)},setupView:function(e,t){let i=0,n=0,a=0,u=0,h=0,c=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){let f=e[d];if(f.isDirectionalLight){let m=r.directional[i];m.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),m.direction.sub(s),m.direction.transformDirection(c),i++}else if(f.isSpotLight){let g=r.spot[a];g.position.setFromMatrixPosition(f.matrixWorld),g.position.applyMatrix4(c),g.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(s),g.direction.transformDirection(c),a++}else if(f.isRectAreaLight){let $=r.rectArea[u];$.position.setFromMatrixPosition(f.matrixWorld),$.position.applyMatrix4(c),l.identity(),o.copy(f.matrixWorld),o.premultiply(c),l.extractRotation(o),$.halfWidth.set(.5*f.width,0,0),$.halfHeight.set(0,.5*f.height,0),$.halfWidth.applyMatrix4(l),$.halfHeight.applyMatrix4(l),u++}else if(f.isPointLight){let v=r.point[n];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(c),n++}else if(f.isHemisphereLight){let x=r.hemi[h];x.direction.setFromMatrixPosition(f.matrixWorld),x.direction.transformDirection(c),x.direction.normalize(),h++}}},state:r}}function sY(e,t){let i=new sX(e,t),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(e){i.setup(n,e)},setupLightsView:function(e){i.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){r.push(e)}}}function sZ(e,t){let i=new WeakMap;return{get:function(n,r=0){let a;return!1===i.has(n)?(a=new sY(e,t),i.set(n,[a])):r>=i.get(n).length?(a=new sY(e,t),i.get(n).push(a)):a=i.get(n)[r],a},dispose:function(){i=new WeakMap}}}class sJ extends nj{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=tk,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}sJ.prototype.isMeshDepthMaterial=!0;class sQ extends nj{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new iW,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sK(e,t,i){let n=new rq,r=new iC,a=new iC,s=new iH,o=new sJ({depthPacking:tV}),l=new sQ,u={},h=i.maxTextureSize,d={0:m,1:f,2:g},$=new r2({uniforms:{shadow_pass:{value:null},resolution:{value:new iC},radius:{value:4},samples:{value:8}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),v=$.clone();v.defines.HORIZONTAL_PASS=1;let y=new ry;y.setAttribute("position",new ri(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let b=new rF(y,$),w=this;function _(i,n){let r=t.update(b);$.uniforms.shadow_pass.value=i.map.texture,$.uniforms.resolution.value=i.mapSize,$.uniforms.radius.value=i.radius,$.uniforms.samples.value=i.blurSamples,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,r,$,b,null),v.uniforms.shadow_pass.value=i.mapPass.texture,v.uniforms.resolution.value=i.mapSize,v.uniforms.radius.value=i.radius,v.uniforms.samples.value=i.blurSamples,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,r,v,b,null)}function S(t,i,n,r,a,s,h){let c=null,f=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(c=void 0!==f?f:!0===r.isPointLight?l:o,e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){let m=c.uuid,g=n.uuid,$=u[m];void 0===$&&($={},u[m]=$);let v=$[g];void 0===v&&(v=c.clone(),$[g]=v),c=v}return c.visible=n.visible,c.wireframe=n.wireframe,h===p?c.side=null!==n.shadowSide?n.shadowSide:n.side:c.side=null!==n.shadowSide?n.shadowSide:d[n.side],c.alphaMap=n.alphaMap,c.alphaTest=n.alphaTest,c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.displacementMap=n.displacementMap,c.displacementScale=n.displacementScale,c.displacementBias=n.displacementBias,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=a,c.farDistance=s),c}function M(i,r,a,s,o){if(!1===i.visible)return;let l=i.layers.test(r.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===p)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);let u=t.update(i),h=i.material;if(Array.isArray(h)){let c=u.groups;for(let d=0,f=c.length;d<f;d++){let m=c[d],g=h[m.materialIndex];if(g&&g.visible){let $=S(i,u,g,s,a.near,a.far,o);e.renderBufferDirect(a,null,u,$,i,m)}}}else if(h.visible){let v=S(i,u,h,s,a.near,a.far,o);e.renderBufferDirect(a,null,u,v,i,null)}}let x=i.children;for(let y=0,b=x.length;y<b;y++)M(x[y],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=c,this.render=function(t,i,o){if(!1===w.enabled||!1===w.autoUpdate&&!1===w.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),u=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(x),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=t.length;f<m;f++){let g=t[f],$=g.shadow;if(void 0===$){console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");continue}if(!1===$.autoUpdate&&!1===$.needsUpdate)continue;r.copy($.mapSize);let v=$.getFrameExtents();if(r.multiply(v),a.copy($.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/v.x),r.x=a.x*v.x,$.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/v.y),r.y=a.y*v.y,$.mapSize.y=a.y)),null===$.map&&!$.isPointLightShadow&&this.type===p){let y={minFilter:ex,magFilter:ex,format:eF};$.map=new iG(r.x,r.y,y),$.map.texture.name=g.name+".shadowMap",$.mapPass=new iG(r.x,r.y,y),$.camera.updateProjectionMatrix()}if(null===$.map){let b={minFilter:ef,magFilter:ef,format:eF};$.map=new iG(r.x,r.y,b),$.map.texture.name=g.name+".shadowMap",$.camera.updateProjectionMatrix()}e.setRenderTarget($.map),e.clear();let S=$.getViewportCount();for(let T=0;T<S;T++){let E=$.getViewport(T);s.set(a.x*E.x,a.y*E.y,a.x*E.z,a.y*E.w),d.viewport(s),$.updateMatrices(g,T),n=$.getFrustum(),M(i,o,$.camera,g,this.type)}$.isPointLightShadow||this.type!==p||_($,o),$.needsUpdate=!1}w.needsUpdate=!1,e.setRenderTarget(l,u,c)}}function s9(e,t,i){let n=i.isWebGL2,r=new function(){let t=!1,i=new iH,n=null,r=new iH(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,a,s,o){!0===o&&(t*=s,n*=s,a*=s),i.set(t,n,a,s),!1===r.equals(i)&&(e.clearColor(t,n,a,s),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,i=null,n=null,r=null;return{setTest:function(e){e?ev(2929):ex(2929)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case H:e.depthFunc(512);break;case G:e.depthFunc(519);break;case k:e.depthFunc(513);break;case V:e.depthFunc(515);break;case W:e.depthFunc(514);break;case j:e.depthFunc(518);break;case q:e.depthFunc(516);break;case X:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,i=null,n=null,r=null}}},u=new function(){let t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?ev(2960):ex(2960))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,s){(n!==t||r!==i||a!==s)&&(e.stencilFunc(t,i,s),n=t,r=i,a=s)},setOp:function(t,i,n){(s!==t||o!==i||l!==n)&&(e.stencilOp(t,i,n),s=t,o=i,l=n)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,u=null}}},h={},c=null,d={},p=null,f=!1,$=null,v=null,Y=null,Z=null,J=null,Q=null,K=null,ee=!1,et=null,ei=null,en=null,er=null,ea=null,es=e.getParameter(35661),eo=!1,el=0,eu=e.getParameter(7938);-1!==eu.indexOf("WebGL")?eo=parseFloat(/^WebGL (\d)/.exec(eu)[1])>=1:-1!==eu.indexOf("OpenGL ES")&&(eo=parseFloat(/^OpenGL ES (\d)/.exec(eu)[1])>=2);let eh=null,ec={},ed=e.getParameter(3088),ep=e.getParameter(2978),ef=new iH().fromArray(ed),em=new iH().fromArray(ep);function eg(t,i,n){let r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let s=0;s<n;s++)e.texImage2D(i+s,0,6408,1,1,0,6408,5121,r);return a}let e$={};function ev(t){!0!==h[t]&&(e.enable(t),h[t]=!0)}function ex(t){!1!==h[t]&&(e.disable(t),h[t]=!1)}e$[3553]=eg(3553,3553,1),e$[34067]=eg(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),u.setClear(0),ev(2929),a.setFunc(V),e_(!1),eS(o),ev(2884),ew(x);let ey={[M]:32774,[T]:32778,[E]:32779};if(n)ey[A]=32775,ey[L]=32776;else{let e8=t.get("EXT_blend_minmax");null!==e8&&(ey[A]=e8.MIN_EXT,ey[L]=e8.MAX_EXT)}let eb={[R]:0,[C]:1,[P]:768,[I]:770,[O]:776,[N]:774,[B]:772,[D]:769,[F]:771,[U]:775,[z]:773};function ew(t,i,n,r,a,s,o,l){if(t===x){!0===f&&(ex(3042),f=!1);return}if(!1===f&&(ev(3042),f=!0),t!==S){if(t!==$||l!==ee){if((v!==M||J!==M)&&(e.blendEquation(32774),v=M,J=M),l)switch(t){case y:e.blendFuncSeparate(1,771,1,771);break;case b:e.blendFunc(1,1);break;case w:e.blendFuncSeparate(0,0,769,771);break;case _:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case y:e.blendFuncSeparate(770,771,1,771);break;case b:e.blendFunc(770,1);break;case w:e.blendFunc(0,769);break;case _:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}Y=null,Z=null,Q=null,K=null,$=t,ee=l}return}a=a||i,s=s||n,o=o||r,(i!==v||a!==J)&&(e.blendEquationSeparate(ey[i],ey[a]),v=i,J=a),(n!==Y||r!==Z||s!==Q||o!==K)&&(e.blendFuncSeparate(eb[n],eb[r],eb[s],eb[o]),Y=n,Z=r,Q=s,K=o),$=t,ee=null}function e_(t){et!==t&&(t?e.frontFace(2304):e.frontFace(2305),et=t)}function eS(t){t!==s?(ev(2884),t!==ei&&(t===o?e.cullFace(1029):t===l?e.cullFace(1028):e.cullFace(1032))):ex(2884),ei=t}function eM(t,i,n){t?(ev(32823),(er!==i||ea!==n)&&(e.polygonOffset(i,n),er=i,ea=n)):ex(32823)}function eT(t){void 0===t&&(t=33984+es-1),eh!==t&&(e.activeTexture(t),eh=t)}return{buffers:{color:r,depth:a,stencil:u},enable:ev,disable:ex,bindFramebuffer:function(t,i){return null===i&&null!==c&&(i=c),d[t]!==i&&(e.bindFramebuffer(t,i),d[t]=i,n&&(36009===t&&(d[36160]=i),36160===t&&(d[36009]=i)),!0)},bindXRFramebuffer:function(t){t!==c&&(e.bindFramebuffer(36160,t),c=t)},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:ew,setMaterial:function(e,t){e.side===g?ex(2884):ev(2884);let i=e.side===m;t&&(i=!i),e_(i),e.blending===y&&!1===e.transparent?ew(x):ew(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);let n=e.stencilWrite;u.setTest(n),n&&(u.setMask(e.stencilWriteMask),u.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),u.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),eM(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?ev(32926):ex(32926)},setFlipSided:e_,setCullFace:eS,setLineWidth:function(t){t!==en&&(eo&&e.lineWidth(t),en=t)},setPolygonOffset:eM,setScissorTest:function(e){e?ev(3089):ex(3089)},activeTexture:eT,bindTexture:function(t,i){null===eh&&eT();let n=ec[eh];void 0===n&&(n={type:void 0,texture:void 0},ec[eh]=n),(n.type!==t||n.texture!==i)&&(e.bindTexture(t,i||e$[t]),n.type=t,n.texture=i)},unbindTexture:function(){let t=ec[eh];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===ef.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ef.copy(t))},viewport:function(t){!1===em.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),em.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===n&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),h={},eh=null,ec={},c=null,d={},p=null,f=!1,$=null,v=null,Y=null,Z=null,J=null,Q=null,K=null,ee=!1,et=null,ei=null,en=null,er=null,ea=null,ef.set(0,0,e.canvas.width,e.canvas.height),em.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),u.reset()}}}function oe(e,t,i,n,r,a,s){let o=r.isWebGL2,l=r.maxTextures,u=r.maxCubemapSize,h=r.maxTextureSize,c=r.maxSamples,d=new WeakMap,p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(m){}function g(e,t){return f?new OffscreenCanvas(e,t):iB("canvas")}function $(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let a=t?iR:Math.floor,s=a(r*e.width),o=a(r*e.height);void 0===p&&(p=g(s,o));let l=i?g(s,o):p;l.width=s,l.height=o;let u=l.getContext("2d");return u.drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function v(e){return iL(e.width)&&iL(e.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==ef&&e.minFilter!==ex}function y(t,i,r,a,s=1){e.generateMipmap(t);let o=n.get(i);o.__maxMipLevel=Math.log2(Math.max(r,a,s))}function b(i,n,r,a){if(!1===o)return n;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let s=n;return 6403===n&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),6407===n&&(5126===r&&(s=34837),5131===r&&(s=34843),5121===r&&(s=32849)),6408===n&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=a===tN?35907:32856)),(33325===s||33326===s||34842===s||34836===s)&&t.get("EXT_color_buffer_float"),s}function w(e){return e===ef||e===em||e===e$?9728:9729}function _(t){let i=t.target;i.removeEventListener("dispose",_),function(t){let i=n.get(t);void 0!==i.__webglInit&&(e.deleteTexture(i.__webglTexture),n.remove(t))}(i),i.isVideoTexture&&d.delete(i),s.memory.textures--}function S(t){let i=t.target;i.removeEventListener("dispose",S),function(t){let i=t.texture,r=n.get(t),a=n.get(i);if(t){if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let l=0,u=i.length;l<u;l++){let h=n.get(i[l]);h.__webglTexture&&(e.deleteTexture(h.__webglTexture),s.memory.textures--),n.remove(i[l])}n.remove(i),n.remove(t)}}(i)}let M=0;function T(e,t){let r=n.get(e);if(e.isVideoTexture&&function(e){let t=s.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){let a=e.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{P(r,e,t);return}}i.activeTexture(33984+t),i.bindTexture(3553,r.__webglTexture)}function E(t,r){let s=n.get(t);if(t.version>0&&s.__version!==t.version){!function(t,n,r){if(6!==n.image.length)return;C(t,n),i.activeTexture(33984+r),i.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let s=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),l=n.image[0]&&n.image[0].isDataTexture,h=[];for(let c=0;c<6;c++)s||l?h[c]=l?n.image[c].image:n.image[c]:h[c]=$(n.image[c],!1,!0,u);let d=h[0],p=v(d)||o,f=a.convert(n.format),m=a.convert(n.type),g=b(n.internalFormat,f,m,n.encoding);R(34067,n,p);let w;if(s){for(let _=0;_<6;_++){w=h[_].mipmaps;for(let S=0;S<w.length;S++){let M=w[S];n.format!==eF&&n.format!==eI?null!==f?i.compressedTexImage2D(34069+_,S,g,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+_,S,g,M.width,M.height,0,f,m,M.data)}}t.__maxMipLevel=w.length-1}else{w=n.mipmaps;for(let T=0;T<6;T++)if(l){i.texImage2D(34069+T,0,g,h[T].width,h[T].height,0,f,m,h[T].data);for(let E=0;E<w.length;E++){let A=w[E],L=A.image[T].image;i.texImage2D(34069+T,E+1,g,L.width,L.height,0,f,m,L.data)}}else{i.texImage2D(34069+T,0,g,f,m,h[T]);for(let P=0;P<w.length;P++){let D=w[P];i.texImage2D(34069+T,P+1,g,f,m,D.image[T])}}t.__maxMipLevel=w.length}x(n,p)&&y(34067,n,d.width,d.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(s,t,r);return}i.activeTexture(33984+r),i.bindTexture(34067,s.__webglTexture)}let A={[ec]:10497,[ed]:33071,[ep]:33648},L={[ef]:9728,[em]:9984,[e$]:9986,[ex]:9729,[ey]:9985,[eb]:9987};function R(i,a,s){if(s?(e.texParameteri(i,10242,A[a.wrapS]),e.texParameteri(i,10243,A[a.wrapT]),(32879===i||35866===i)&&e.texParameteri(i,32882,A[a.wrapR]),e.texParameteri(i,10240,L[a.magFilter]),e.texParameteri(i,10241,L[a.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),(32879===i||35866===i)&&e.texParameteri(i,32882,33071),(a.wrapS!==ed||a.wrapT!==ed)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,w(a.magFilter)),e.texParameteri(i,10241,w(a.minFilter)),a.minFilter!==ef&&a.minFilter!==ex&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let l=t.get("EXT_texture_filter_anisotropic");(a.type!==eL||!1!==t.has("OES_texture_float_linear"))&&(!1!==o||a.type!==e1||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function C(t,i){void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",_),t.__webglTexture=e.createTexture(),s.memory.textures++)}function P(t,n,r){var s;let l=3553;n.isDataTexture2DArray&&(l=35866),n.isDataTexture3D&&(l=32879),C(t,n),i.activeTexture(33984+r),i.bindTexture(l,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let u=(s=n,!o&&(s.wrapS!==ed||s.wrapT!==ed||s.minFilter!==ef&&s.minFilter!==ex)&&!1===v(n.image)),c=$(n.image,u,!1,h),d=v(c)||o,p=a.convert(n.format),f=a.convert(n.type),m=b(n.internalFormat,p,f,n.encoding);R(l,n,d);let g,w=n.mipmaps;if(n.isDepthTexture)m=6402,o?m=n.type===eL?36012:n.type===eA?33190:n.type===eP?35056:33189:n.type===eL&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===eU&&6402===m&&n.type!==eT&&n.type!==eA&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=eT,f=a.convert(n.type)),n.format===eO&&6402===m&&(m=34041,n.type!==eP&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=eP,f=a.convert(n.type))),i.texImage2D(3553,0,m,c.width,c.height,0,p,f,null);else if(n.isDataTexture){if(w.length>0&&d){for(let _=0,S=w.length;_<S;_++)g=w[_],i.texImage2D(3553,_,m,g.width,g.height,0,p,f,g.data);n.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,m,c.width,c.height,0,p,f,c.data),t.__maxMipLevel=0}else if(n.isCompressedTexture){for(let M=0,T=w.length;M<T;M++)g=w[M],n.format!==eF&&n.format!==eI?null!==p?i.compressedTexImage2D(3553,M,m,g.width,g.height,0,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,M,m,g.width,g.height,0,p,f,g.data);t.__maxMipLevel=w.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,m,c.width,c.height,c.depth,0,p,f,c.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,m,c.width,c.height,c.depth,0,p,f,c.data),t.__maxMipLevel=0;else if(w.length>0&&d){for(let E=0,A=w.length;E<A;E++)g=w[E],i.texImage2D(3553,E,m,p,f,g);n.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,m,p,f,c),t.__maxMipLevel=0;x(n,d)&&y(l,n,c.width,c.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function D(t,r,s,o,l){let u=a.convert(s.format),h=a.convert(s.type),c=b(s.internalFormat,u,h,s.encoding);32879===l||35866===l?i.texImage3D(l,0,c,r.width,r.height,r.depth,0,u,h,null):i.texImage2D(l,0,c,r.width,r.height,0,u,h,null),i.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,l,n.get(s).__webglTexture,0),i.bindFramebuffer(36160,null)}function I(t,i,n){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n){let s=i.depthTexture;s&&s.isDepthTexture&&(s.type===eL?r=36012:s.type===eA&&(r=33190));let o=F(i);e.renderbufferStorageMultisample(36161,o,r,i.width,i.height)}else e.renderbufferStorage(36161,r,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){if(n){let l=F(i);e.renderbufferStorageMultisample(36161,l,35056,i.width,i.height)}else e.renderbufferStorage(36161,34041,i.width,i.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{let u=!0===i.isWebGLMultipleRenderTargets?i.texture[0]:i.texture,h=a.convert(u.format),c=a.convert(u.type),d=b(u.internalFormat,h,c,u.encoding);if(n){let p=F(i);e.renderbufferStorageMultisample(36161,p,d,i.width,i.height)}else e.renderbufferStorage(36161,d,i.width,i.height)}e.bindRenderbuffer(36161,null)}function F(e){return o&&e.isWebGLMultisampleRenderTarget?Math.min(c,e.samples):0}let B=!1,z=!1;this.allocateTextureUnit=function(){let e=M;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),M+=1,e},this.resetTextureUnits=function(){M=0},this.setTexture2D=T,this.setTexture2DArray=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){P(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(35866,r.__webglTexture)},this.setTexture3D=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){P(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(32879,r.__webglTexture)},this.setTextureCube=E,this.setupRenderTarget=function(t){let l=t.texture,u=n.get(t),h=n.get(l);t.addEventListener("dispose",S),!0!==t.isWebGLMultipleRenderTargets&&(h.__webglTexture=e.createTexture(),h.__version=l.version,s.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=!0===t.isWebGLMultisampleRenderTarget,f=l.isDataTexture3D||l.isDataTexture2DArray,m=v(t)||o;if(o&&l.format===eI&&(l.type===eL||l.type===e1)&&(l.format=eF,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){u.__webglFramebuffer=[];for(let g=0;g<6;g++)u.__webglFramebuffer[g]=e.createFramebuffer()}else if(u.__webglFramebuffer=e.createFramebuffer(),d){if(r.drawBuffers){let $=t.texture;for(let w=0,_=$.length;w<_;w++){let M=n.get($[w]);void 0===M.__webglTexture&&(M.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(p){if(o){u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,u.__webglColorRenderbuffer);let E=a.convert(l.format),A=a.convert(l.type),L=b(l.internalFormat,E,A,l.encoding),C=F(t);e.renderbufferStorageMultisample(36161,C,L,t.width,t.height),i.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,u.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),I(u.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(c){i.bindTexture(34067,h.__webglTexture),R(34067,l,m);for(let P=0;P<6;P++)D(u.__webglFramebuffer[P],t,l,36064,34069+P);x(l,m)&&y(34067,l,t.width,t.height),i.unbindTexture()}else if(d){let B=t.texture;for(let z=0,N=B.length;z<N;z++){let U=B[z],O=n.get(U);i.bindTexture(3553,O.__webglTexture),R(3553,U,m),D(u.__webglFramebuffer,t,U,36064+z,3553),x(U,m)&&y(3553,U,t.width,t.height)}i.unbindTexture()}else{let H=3553;if(f){if(o){let G=l.isDataTexture3D;H=G?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")}i.bindTexture(H,h.__webglTexture),R(H,l,m),D(u.__webglFramebuffer,t,l,36064,H),x(l,m)&&y(H,l,t.width,t.height,t.depth),i.unbindTexture()}t.depthBuffer&&function(t){let r=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,r){let a=r&&r.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),T(r.depthTexture,0);let s=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===eU)e.framebufferTexture2D(36160,36096,3553,s,0);else if(r.depthTexture.format===eO)e.framebufferTexture2D(36160,33306,3553,s,0);else throw Error("Unknown depthTexture format")}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let s=0;s<6;s++)i.bindFramebuffer(36160,r.__webglFramebuffer[s]),r.__webglDepthbuffer[s]=e.createRenderbuffer(),I(r.__webglDepthbuffer[s],t,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),I(r.__webglDepthbuffer,t,!1);i.bindFramebuffer(36160,null)}(t)},this.updateRenderTargetMipmap=function(e){let t=v(e)||o,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,s=r.length;a<s;a++){let l=r[a];if(x(l,t)){let u=e.isWebGLCubeRenderTarget?34067:3553,h=n.get(l).__webglTexture;i.bindTexture(u,h),y(u,l,e.width,e.height),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget){if(o){let r=t.width,a=t.height,s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024);let l=n.get(t);i.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,l.__webglFramebuffer),e.blitFramebuffer(0,0,r,a,0,0,r,a,s,9728),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),T(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),z=!0),e=e.texture),E(e,t)}}function ot(e,t,i){let n=i.isWebGL2;return{convert:function(e){let i;if(e===e_)return 5121;if(e===eR)return 32819;if(e===e0)return 32820;if(e===eC)return 33635;if(e===eS)return 5120;if(e===eM)return 5122;if(e===eT)return 5123;if(e===eE)return 5124;if(e===eA)return 5125;if(e===eL)return 5126;if(e===e1)return n?5131:null!==(i=t.get("OES_texture_half_float"))?i.HALF_FLOAT_OES:null;if(e===eD)return 6406;if(e===eI)return 6407;if(e===eF)return 6408;if(e===eB)return 6409;if(e===ez)return 6410;if(e===eU)return 6402;if(e===eO)return 34041;if(e===e2)return 6403;if(e===eH)return 36244;if(e===eG)return 33319;if(e===e3)return 33320;if(e===ek)return 36248;if(e===eV)return 36249;if(e===eW||e===e4||e===e6||e===e5){if(null===(i=t.get("WEBGL_compressed_texture_s3tc")))return null;if(e===eW)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===e4)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===e6)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===e5)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===e7||e===ej||e===eq||e===eX){if(null===(i=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===e7)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===ej)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===eq)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===eX)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===eY)return null!==(i=t.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===eZ||e===eJ)&&null!==(i=t.get("WEBGL_compressed_texture_etc"))){if(e===eZ)return i.COMPRESSED_RGB8_ETC2;if(e===eJ)return i.COMPRESSED_RGBA8_ETC2_EAC}return e===eQ||e===eK||e===e9||e===te||e===tt||e===ti||e===tn||e===tr||e===ta||e===ts||e===to||e===tl||e===tu||e===th||e===td||e===tp||e===tf||e===tm||e===tg||e===t$||e===tv||e===tx||e===ty||e===t8||e===tb||e===tw||e===t_||e===tS?null!==(i=t.get("WEBGL_compressed_texture_astc"))?e:null:e===tc?null!==(i=t.get("EXT_texture_compression_bptc"))?e:null:e===eP?n?34042:null!==(i=t.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}sQ.prototype.isMeshDistanceMaterial=!0;class oi extends rG{constructor(e=[]){super(),this.cameras=e}}oi.prototype.isArrayCamera=!0;class on extends nU{constructor(){super(),this.type="Group"}}on.prototype.isGroup=!0;let or={type:"move"};class oa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new on,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new on,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new iW,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new iW),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new on,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new iW,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new iW),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(null!==s&&null!==(n=t.getPose(e.targetRaySpace,i))&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(or)),l&&e.hand){for(let u of(a=!0,e.hand.values())){let h=t.getJointPose(u,i);if(void 0===l.joints[u.jointName]){let c=new on;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[u.jointName]=c,l.add(c)}let d=l.joints[u.jointName];null!==h&&(d.matrix.fromArray(h.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=h.radius),d.visible=null!==h}let p=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],m=p.position.distanceTo(f.position);l.inputState.pinching&&m>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1)}return null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class os extends i${constructor(e,t){super();let i=this,n=e.state,r=null,a=1,s=null,o="local-floor",l=null,u=null,h=null,c=null,d=null,p=!1,f=null,m=null,g=null,$=null,v=null,x=null,y=[],b=new Map,w=new rG;w.layers.enable(1),w.viewport=new iH;let _=new rG;_.layers.enable(2),_.viewport=new iH;let S=[w,_],M=new oi;M.layers.enable(1),M.layers.enable(2);let T=null,E=null;function A(e){let t=b.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function L(){b.forEach(function(e,t){e.disconnect(t)}),b.clear(),T=null,E=null,n.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),h&&t.deleteFramebuffer(h),f&&t.deleteFramebuffer(f),m&&t.deleteRenderbuffer(m),g&&t.deleteRenderbuffer(g),h=null,f=null,m=null,g=null,d=null,c=null,u=null,r=null,F.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function R(e){let t=r.inputSources;for(let i=0;i<y.length;i++)b.set(t[i],y[i]);for(let n=0;n<e.removed.length;n++){let a=e.removed[n],s=b.get(a);s&&(s.dispatchEvent({type:"disconnected",data:a}),b.delete(a))}for(let o=0;o<e.added.length;o++){let l=e.added[o],u=b.get(l);u&&u.dispatchEvent({type:"connected",data:l})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new oa,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new oa,y[e]=t),t.getGripSpace()},this.getHand=function(e){let t=y[e];return void 0===t&&(t=new oa,y[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return u},this.getFrame=function(){return $},this.getSession=function(){return r},this.setSession=async function(e){if(null!==(r=e)){r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",L),r.addEventListener("inputsourceschange",R);let l=t.getContextAttributes();if(!0!==l.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers){let $={antialias:l.antialias,alpha:l.alpha,depth:l.depth,stencil:l.stencil,framebufferScaleFactor:a};d=new XRWebGLLayer(r,t,$),r.updateRenderState({baseLayer:d})}else if(t instanceof WebGLRenderingContext){let y={antialias:!0,alpha:l.alpha,depth:l.depth,stencil:l.stencil,framebufferScaleFactor:a};d=new XRWebGLLayer(r,t,y),r.updateRenderState({layers:[d]})}else{p=l.antialias;let b=null;l.depth&&(x=256,l.stencil&&(x|=1024),v=l.stencil?33306:36096,b=l.stencil?35056:33190);let w={colorFormat:l.alpha?32856:32849,depthFormat:b,scaleFactor:a};c=(u=new XRWebGLBinding(r,t)).createProjectionLayer(w),h=t.createFramebuffer(),r.updateRenderState({layers:[c]}),p&&(f=t.createFramebuffer(),m=t.createRenderbuffer(),t.bindRenderbuffer(36161,m),t.renderbufferStorageMultisample(36161,4,32856,c.textureWidth,c.textureHeight),n.bindFramebuffer(36160,f),t.framebufferRenderbuffer(36160,36064,36161,m),t.bindRenderbuffer(36161,null),null!==b&&(g=t.createRenderbuffer(),t.bindRenderbuffer(36161,g),t.renderbufferStorageMultisample(36161,4,b,c.textureWidth,c.textureHeight),t.framebufferRenderbuffer(36160,v,36161,g),t.bindRenderbuffer(36161,null)),n.bindFramebuffer(36160,null))}s=await r.requestReferenceSpace(o),F.setContext(r),F.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};let C=new iW,P=new iW;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;M.near=_.near=w.near=e.near,M.far=_.far=w.far=e.far,(T!==M.near||E!==M.far)&&(r.updateRenderState({depthNear:M.near,depthFar:M.far}),T=M.near,E=M.far);let t=e.parent,i=M.cameras;D(M,t);for(let n=0;n<i.length;n++)D(i[n],t);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),e.position.copy(M.position),e.quaternion.copy(M.quaternion),e.scale.copy(M.scale),e.matrix.copy(M.matrix),e.matrixWorld.copy(M.matrixWorld);let a=e.children;for(let s=0,o=a.length;s<o;s++)a[s].updateMatrixWorld(!0);2===i.length?function(e,t,i){C.setFromMatrixPosition(t.matrixWorld),P.setFromMatrixPosition(i.matrixWorld);let n=C.distanceTo(P),r=t.projectionMatrix.elements,a=i.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(a[8]+1)/a[0],d=n/(-h+c),p=-(d*h);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*h-p,s*c+(n-p),l*o/m*f,u*o/m*f,f,m)}(M,w,_):M.projectionMatrix.copy(w.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(e){null!==c&&(c.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let I=null,F=new rX;F.setAnimationLoop(function(e,i){if(l=i.getViewerPose(s),$=i,null!==l){let a=l.views;null!==d&&n.bindXRFramebuffer(d.framebuffer);let o=!1;a.length!==M.cameras.length&&(M.cameras.length=0,o=!0);for(let m=0;m<a.length;m++){let g=a[m],b=null;if(null!==d)b=d.getViewport(g);else{let w=u.getViewSubImage(c,g);n.bindXRFramebuffer(h),void 0!==w.depthStencilTexture&&t.framebufferTexture2D(36160,v,3553,w.depthStencilTexture,0),t.framebufferTexture2D(36160,36064,3553,w.colorTexture,0),b=w.viewport}let _=S[m];_.matrix.fromArray(g.transform.matrix),_.projectionMatrix.fromArray(g.projectionMatrix),_.viewport.set(b.x,b.y,b.width,b.height),0===m&&M.matrix.copy(_.matrix),!0===o&&M.cameras.push(_)}p&&(n.bindXRFramebuffer(f),null!==x&&t.clear(x))}let T=r.inputSources;for(let E=0;E<y.length;E++){let A=y[E],L=T[E];A.update(L,i,s)}if(I&&I(e,i),p){let R=c.textureWidth,C=c.textureHeight;n.bindFramebuffer(36008,f),n.bindFramebuffer(36009,h),t.invalidateFramebuffer(36008,[v]),t.invalidateFramebuffer(36009,[v]),t.blitFramebuffer(0,0,R,C,0,0,R,C,16384,9728),t.invalidateFramebuffer(36008,[36064]),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),n.bindFramebuffer(36160,f)}$=null}),this.setAnimationLoop=function(e){I=e},this.dispose=function(){}}}function oo(e){function t(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map),i.alphaMap&&(t.alphaMap.value=i.alphaMap),i.specularMap&&(t.specularMap.value=i.specularMap),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);let n=e.get(i).envMap;if(n){t.envMap.value=n,t.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio;let r=e.get(n).__maxMipLevel;void 0!==r&&(t.maxMipLevel.value=r)}i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity);let a;i.map?a=i.map:i.specularMap?a=i.specularMap:i.displacementMap?a=i.displacementMap:i.normalMap?a=i.normalMap:i.bumpMap?a=i.bumpMap:i.roughnessMap?a=i.roughnessMap:i.metalnessMap?a=i.metalnessMap:i.alphaMap?a=i.alphaMap:i.emissiveMap?a=i.emissiveMap:i.clearcoatMap?a=i.clearcoatMap:i.clearcoatNormalMap?a=i.clearcoatNormalMap:i.clearcoatRoughnessMap?a=i.clearcoatRoughnessMap:i.specularIntensityMap?a=i.specularIntensityMap:i.specularTintMap?a=i.specularTintMap:i.transmissionMap?a=i.transmissionMap:i.thicknessMap&&(a=i.thicknessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uvTransform.value.copy(a.matrix));let s;i.aoMap?s=i.aoMap:i.lightMap&&(s=i.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uv2Transform.value.copy(s.matrix))}function i(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap),i.bumpMap&&(t.bumpMap.value=i.bumpMap,t.bumpScale.value=i.bumpScale,i.side===m&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,t.normalScale.value.copy(i.normalScale),i.side===m&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias);let n=e.get(i).envMap;n&&(t.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,r,a,s){var o,l,u,h,c,d,p,f,g,$,v,x,y,b,w,_,S,M,T,E,A,L,R,C,P,D,I;let F,B;n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),o=e,(l=n).emissiveMap&&(o.emissiveMap.value=l.emissiveMap)):n.isMeshToonMaterial?(t(e,n),u=e,(h=n).gradientMap&&(u.gradientMap.value=h.gradientMap),h.emissiveMap&&(u.emissiveMap.value=h.emissiveMap),h.bumpMap&&(u.bumpMap.value=h.bumpMap,u.bumpScale.value=h.bumpScale,h.side===m&&(u.bumpScale.value*=-1)),h.normalMap&&(u.normalMap.value=h.normalMap,u.normalScale.value.copy(h.normalScale),h.side===m&&u.normalScale.value.negate()),h.displacementMap&&(u.displacementMap.value=h.displacementMap,u.displacementScale.value=h.displacementScale,u.displacementBias.value=h.displacementBias)):n.isMeshPhongMaterial?(t(e,n),c=e,d=n,c.specular.value.copy(d.specular),c.shininess.value=Math.max(d.shininess,1e-4),d.emissiveMap&&(c.emissiveMap.value=d.emissiveMap),d.bumpMap&&(c.bumpMap.value=d.bumpMap,c.bumpScale.value=d.bumpScale,d.side===m&&(c.bumpScale.value*=-1)),d.normalMap&&(c.normalMap.value=d.normalMap,c.normalScale.value.copy(d.normalScale),d.side===m&&c.normalScale.value.negate()),d.displacementMap&&(c.displacementMap.value=d.displacementMap,c.displacementScale.value=d.displacementScale,c.displacementBias.value=d.displacementBias)):n.isMeshStandardMaterial?(t(e,n),n.isMeshPhysicalMaterial?(p=e,f=n,g=s,i(p,f),p.ior.value=f.ior,f.sheen>0&&(p.sheenTint.value.copy(f.sheenTint).multiplyScalar(f.sheen),p.sheenRoughness.value=f.sheenRoughness),f.clearcoat>0&&(p.clearcoat.value=f.clearcoat,p.clearcoatRoughness.value=f.clearcoatRoughness,f.clearcoatMap&&(p.clearcoatMap.value=f.clearcoatMap),f.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=f.clearcoatRoughnessMap),f.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(f.clearcoatNormalScale),p.clearcoatNormalMap.value=f.clearcoatNormalMap,f.side===m&&p.clearcoatNormalScale.value.negate())),f.transmission>0&&(p.transmission.value=f.transmission,p.transmissionSamplerMap.value=g.texture,p.transmissionSamplerSize.value.set(g.width,g.height),f.transmissionMap&&(p.transmissionMap.value=f.transmissionMap),p.thickness.value=f.thickness,f.thicknessMap&&(p.thicknessMap.value=f.thicknessMap),p.attenuationDistance.value=f.attenuationDistance,p.attenuationTint.value.copy(f.attenuationTint)),p.specularIntensity.value=f.specularIntensity,p.specularTint.value.copy(f.specularTint),f.specularIntensityMap&&(p.specularIntensityMap.value=f.specularIntensityMap),f.specularTintMap&&(p.specularTintMap.value=f.specularTintMap)):i(e,n)):n.isMeshMatcapMaterial?(t(e,n),$=e,(v=n).matcap&&($.matcap.value=v.matcap),v.bumpMap&&($.bumpMap.value=v.bumpMap,$.bumpScale.value=v.bumpScale,v.side===m&&($.bumpScale.value*=-1)),v.normalMap&&($.normalMap.value=v.normalMap,$.normalScale.value.copy(v.normalScale),v.side===m&&$.normalScale.value.negate()),v.displacementMap&&($.displacementMap.value=v.displacementMap,$.displacementScale.value=v.displacementScale,$.displacementBias.value=v.displacementBias)):n.isMeshDepthMaterial?(t(e,n),x=e,(y=n).displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)):n.isMeshDistanceMaterial?(t(e,n),b=e,(w=n).displacementMap&&(b.displacementMap.value=w.displacementMap,b.displacementScale.value=w.displacementScale,b.displacementBias.value=w.displacementBias),b.referencePosition.value.copy(w.referencePosition),b.nearDistance.value=w.nearDistance,b.farDistance.value=w.farDistance):n.isMeshNormalMaterial?(t(e,n),_=e,(S=n).bumpMap&&(_.bumpMap.value=S.bumpMap,_.bumpScale.value=S.bumpScale,S.side===m&&(_.bumpScale.value*=-1)),S.normalMap&&(_.normalMap.value=S.normalMap,_.normalScale.value.copy(S.normalScale),S.side===m&&_.normalScale.value.negate()),S.displacementMap&&(_.displacementMap.value=S.displacementMap,_.displacementScale.value=S.displacementScale,_.displacementBias.value=S.displacementBias)):n.isLineBasicMaterial?(M=e,T=n,M.diffuse.value.copy(T.color),M.opacity.value=T.opacity,n.isLineDashedMaterial&&(E=e,A=n,E.dashSize.value=A.dashSize,E.totalSize.value=A.dashSize+A.gapSize,E.scale.value=A.scale)):n.isPointsMaterial?(L=e,R=n,C=r,P=a,L.diffuse.value.copy(R.color),L.opacity.value=R.opacity,L.size.value=R.size*C,L.scale.value=.5*P,R.map&&(L.map.value=R.map),R.alphaMap&&(L.alphaMap.value=R.alphaMap),R.alphaTest>0&&(L.alphaTest.value=R.alphaTest),R.map?F=R.map:R.alphaMap&&(F=R.alphaMap),void 0!==F&&(!0===F.matrixAutoUpdate&&F.updateMatrix(),L.uvTransform.value.copy(F.matrix))):n.isSpriteMaterial?(D=e,I=n,D.diffuse.value.copy(I.color),D.opacity.value=I.opacity,D.rotation.value=I.rotation,I.map&&(D.map.value=I.map),I.alphaMap&&(D.alphaMap.value=I.alphaMap),I.alphaTest>0&&(D.alphaTest.value=I.alphaTest),I.map?B=I.map:I.alphaMap&&(B=I.alphaMap),void 0!==B&&(!0===B.matrixAutoUpdate&&B.updateMatrix(),D.uvTransform.value.copy(B.matrix))):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function ol(e={}){let t=void 0!==e.canvas?e.canvas:function(){let e=iB("canvas");return e.style.display="block",e}(),i=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c=null,d=null,p=[],$=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=tz,this.physicallyCorrectLights=!1,this.toneMapping=Q,this.toneMappingExposure=1;let v=this,x=!1,y=0,b=0,w=null,_=-1,S=null,M=new iH,T=new iH,E=null,A=t.width,L=t.height,R=1,C=null,P=null,D=new iH(0,0,A,L),I=new iH(0,0,A,L),F=!1,B=[],z=new rq,N=!1,U=!1,O=null,H=new n$,G=new iW,k={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function V(){return null===w?R:1}let W=i;function j(e,i){for(let n=0;n<e.length;n++){let r=e[n],a=t.getContext(r,i);if(null!==a)return a}return null}try{if(t.addEventListener("webglcontextlost",eS,!1),t.addEventListener("webglcontextrestored",eM,!1),null===W){let q=["webgl2","webgl","experimental-webgl"];if(!0===v.isWebGL1Renderer&&q.shift(),W=j(q,{alpha:n,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h}),null===W){if(j(q))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===W.getShaderPrecisionFormat&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(X){throw console.error("THREE.WebGLRenderer: "+X.message),X}let Y,Z,J,K,ee,et,ei,en,er,ea,es,eo,el,eu,eh,ec,ep,em,eg,e$,ev,ex,ey;function e8(){Y=new aT(W),Z=new ai(W,Y,e),Y.init(Z),ex=new ot(W,Y,Z),J=new s9(W,Y,Z),B[0]=1029,K=new aL(W),ee=new sV,et=new oe(W,Y,J,ee,Z,ex,K),ei=new ar(v),en=new aM(v),er=new rY(W,Z),ey=new ae(W,Y,er,Z),ea=new aE(W,er,K,ey),es=new aD(W,ea,er,K),eg=new aP(W,Z,et),ec=new an(ee),eo=new sk(v,ei,en,Y,Z,ey,ec),el=new oo(ee),eu=new s5(ee),eh=new sZ(Y,Z),em=new r9(v,ei,J,es,o),ep=new sK(v,es,Z),e$=new at(W,Y,K,Z),ev=new aA(W,Y,K,Z),K.programs=eo.programs,v.capabilities=Z,v.extensions=Y,v.properties=ee,v.renderLists=eu,v.shadowMap=ep,v.state=J,v.info=K}e8();let ew=new os(v,W);function eS(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function eM(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;let e=K.autoReset,t=ep.enabled,i=ep.autoUpdate,n=ep.needsUpdate,r=ep.type;e8(),K.autoReset=e,ep.enabled=t,ep.autoUpdate=i,ep.needsUpdate=n,ep.type=r}function eT(e){var t;let i=e.target;i.removeEventListener("dispose",eT),function(e){let t=ee.get(e).programs;void 0!==t&&t.forEach(function(e){eo.releaseProgram(e)})}(t=i),ee.remove(t)}this.xr=ew,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){let e=Y.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=Y.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(e){void 0!==e&&(R=e,this.setSize(A,L,!1))},this.getSize=function(e){return e.set(A,L)},this.setSize=function(e,i,n){if(ew.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=e,L=i,t.width=Math.floor(e*R),t.height=Math.floor(i*R),!1!==n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i)},this.getDrawingBufferSize=function(e){return e.set(A*R,L*R).floor()},this.setDrawingBufferSize=function(e,i,n){A=e,L=i,R=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(M)},this.getViewport=function(e){return e.copy(D)},this.setViewport=function(e,t,i,n){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,i,n),J.viewport(M.copy(D).multiplyScalar(R).floor())},this.getScissor=function(e){return e.copy(I)},this.setScissor=function(e,t,i,n){e.isVector4?I.set(e.x,e.y,e.z,e.w):I.set(e,t,i,n),J.scissor(T.copy(I).multiplyScalar(R).floor())},this.getScissorTest=function(){return F},this.setScissorTest=function(e){J.setScissorTest(F=e)},this.setOpaqueSort=function(e){C=e},this.setTransparentSort=function(e){P=e},this.getClearColor=function(e){return e.copy(em.getClearColor())},this.setClearColor=function(){em.setClearColor.apply(em,arguments)},this.getClearAlpha=function(){return em.getClearAlpha()},this.setClearAlpha=function(){em.setClearAlpha.apply(em,arguments)},this.clear=function(e,t,i){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===i||i)&&(n|=1024),W.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",eS,!1),t.removeEventListener("webglcontextrestored",eM,!1),eu.dispose(),eh.dispose(),ee.dispose(),ei.dispose(),en.dispose(),es.dispose(),ey.dispose(),ew.dispose(),ew.removeEventListener("sessionstart",eA),ew.removeEventListener("sessionend",eR),O&&(O.dispose(),O=null),e0.stop()},this.renderBufferImmediate=function(e,t){ey.initAttributes();let i=ee.get(e);e.hasPositions&&!i.position&&(i.position=W.createBuffer()),e.hasNormals&&!i.normal&&(i.normal=W.createBuffer()),e.hasUvs&&!i.uv&&(i.uv=W.createBuffer()),e.hasColors&&!i.color&&(i.color=W.createBuffer());let n=t.getAttributes();e.hasPositions&&(W.bindBuffer(34962,i.position),W.bufferData(34962,e.positionArray,35048),ey.enableAttribute(n.position.location),W.vertexAttribPointer(n.position.location,3,5126,!1,0,0)),e.hasNormals&&(W.bindBuffer(34962,i.normal),W.bufferData(34962,e.normalArray,35048),ey.enableAttribute(n.normal.location),W.vertexAttribPointer(n.normal.location,3,5126,!1,0,0)),e.hasUvs&&(W.bindBuffer(34962,i.uv),W.bufferData(34962,e.uvArray,35048),ey.enableAttribute(n.uv.location),W.vertexAttribPointer(n.uv.location,2,5126,!1,0,0)),e.hasColors&&(W.bindBuffer(34962,i.color),W.bufferData(34962,e.colorArray,35048),ey.enableAttribute(n.color.location),W.vertexAttribPointer(n.color.location,3,5126,!1,0,0)),ey.disableUnusedAttributes(),W.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,n,r,a){null===t&&(t=k);let s=r.isMesh&&0>r.matrixWorld.determinant(),o=ez(e,t,i,n,r);J.setMaterial(n,s);let l=i.index,u=i.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let h=1;!0===n.wireframe&&(l=ea.getWireframeAttribute(i),h=2),ey.setup(r,n,o,i,l);let c,d=e$;null!==l&&(c=er.get(l),(d=ev).setIndex(c));let p=null!==l?l.count:u.count,f=i.drawRange.start*h,m=i.drawRange.count*h,g=null!==a?a.start*h:0,$=null!==a?a.count*h:1/0,v=Math.max(f,g),x=Math.max(0,Math.min(p,f+m,g+$)-1-v+1);if(0!==x){if(r.isMesh)!0===n.wireframe?(J.setLineWidth(n.wireframeLinewidth*V()),d.setMode(1)):d.setMode(4);else if(r.isLine){let y=n.linewidth;void 0===y&&(y=1),J.setLineWidth(y*V()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(v,x,r.count);else if(i.isInstancedBufferGeometry){let b=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(v,x,b)}else d.render(v,x)}},this.compile=function(e,t){(d=eh.get(e)).init(),$.push(d),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))}),d.setupLights(v.physicallyCorrectLights),e.traverse(function(t){let i=t.material;if(i){if(Array.isArray(i))for(let n=0;n<i.length;n++){let r=i[n];eI(r,e,t)}else eI(i,e,t)}}),$.pop(),d=null};let eE=null;function eA(){e0.stop()}function eR(){e0.start()}let e0=new rX;function eC(e,t,i,n){let r=e.opaque,a=e.transmissive,o=e.transparent;d.setupLightsView(i),a.length>0&&function(e,t,i){if(null===O){let n=!0===s&&!0===Z.isWebGL2,r=n?ik:iG;O=new r(1024,1024,{generateMipmaps:!0,type:null!==ex.convert(e1)?e1:e_,minFilter:eb,magFilter:ef,wrapS:ed,wrapT:ed})}let a=v.getRenderTarget();v.setRenderTarget(O),v.clear();let o=v.toneMapping;v.toneMapping=Q,eP(e,t,i),v.toneMapping=o,et.updateMultisampleRenderTarget(O),et.updateRenderTargetMipmap(O),v.setRenderTarget(a)}(r,t,i),n&&J.viewport(M.copy(n)),r.length>0&&eP(r,t,i),a.length>0&&eP(a,t,i),o.length>0&&eP(o,t,i)}function eP(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){let s=e[r],o=s.object,l=s.geometry,u=null===n?s.material:n,h=s.group;o.layers.test(i.layers)&&eD(o,t,i,l,u,h)}}function eD(e,t,i,n,r,a){if(e.onBeforeRender(v,t,i,n,r,a),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(v,t,i,n,e,a),e.isImmediateRenderObject){let s=ez(i,t,n,r,e);J.setMaterial(r),ey.reset(),function(e,t){e.render(function(e){v.renderBufferImmediate(e,t)})}(e,s)}else!0===r.transparent&&r.side===g?(r.side=m,r.needsUpdate=!0,v.renderBufferDirect(i,t,n,r,e,a),r.side=f,r.needsUpdate=!0,v.renderBufferDirect(i,t,n,r,e,a),r.side=g):v.renderBufferDirect(i,t,n,r,e,a);e.onAfterRender(v,t,i,n,r,a)}function eI(e,t,i){var n;!0!==t.isScene&&(t=k);let r=ee.get(e),a=d.state.lights,s=d.state.shadowsArray,o=a.state.version,l=eo.getParameters(e,a.state,s,t,i),u=eo.getProgramCacheKey(l),h=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?en:ei).get(e.envMap||r.environment),void 0===h&&(e.addEventListener("dispose",eT),h=new Map,r.programs=h);let c=h.get(u);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return eB(e,l),c}else l.uniforms=eo.getUniforms(e),e.onBuild(l,v),e.onBeforeCompile(l,v),c=eo.acquireProgram(l,u),h.set(u,c),r.uniforms=l.uniforms;let p=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(p.clippingPlanes=ec.uniform),eB(e,l),r.needsLights=(n=e,n.isMeshLambertMaterial||n.isMeshToonMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isShadowMaterial||n.isShaderMaterial&&!0===n.lights),r.lightsStateVersion=o,r.needsLights&&(p.ambientLightColor.value=a.state.ambient,p.lightProbe.value=a.state.probe,p.directionalLights.value=a.state.directional,p.directionalLightShadows.value=a.state.directionalShadow,p.spotLights.value=a.state.spot,p.spotLightShadows.value=a.state.spotShadow,p.rectAreaLights.value=a.state.rectArea,p.ltc_1.value=a.state.rectAreaLTC1,p.ltc_2.value=a.state.rectAreaLTC2,p.pointLights.value=a.state.point,p.pointLightShadows.value=a.state.pointShadow,p.hemisphereLights.value=a.state.hemi,p.directionalShadowMap.value=a.state.directionalShadowMap,p.directionalShadowMatrix.value=a.state.directionalShadowMatrix,p.spotShadowMap.value=a.state.spotShadowMap,p.spotShadowMatrix.value=a.state.spotShadowMatrix,p.pointShadowMap.value=a.state.pointShadowMap,p.pointShadowMatrix.value=a.state.pointShadowMatrix);let f=c.getUniforms(),m=sA.seqWithValue(f.seq,p);return r.currentProgram=c,r.uniformsList=m,c}function eB(e,t){let i=ee.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents}function ez(e,t,i,n,r){var a,s;!0!==t.isScene&&(t=k),et.resetTextureUnits();let o=t.fog,l=n.isMeshStandardMaterial?t.environment:null,u=null===w?v.outputEncoding:w.texture.encoding,h=(n.isMeshStandardMaterial?en:ei).get(n.envMap||l),c=!0===n.vertexColors&&!!i&&!!i.attributes.color&&4===i.attributes.color.itemSize,p=!!n.normalMap&&!!i&&!!i.attributes.tangent,f=!!i&&!!i.morphAttributes.position,m=!!i&&!!i.morphAttributes.normal,g=i&&i.morphAttributes.position?i.morphAttributes.position.length:0,$=ee.get(n),x=d.state.lights;if(!0===N&&(!0===U||e!==S)){let y=e===S&&n.id===_;ec.setState(n,e,y)}let b=!1;n.version===$.__version?$.needsLights&&$.lightsStateVersion!==x.state.version?b=!0:$.outputEncoding!==u?b=!0:r.isInstancedMesh&&!1===$.instancing?b=!0:r.isInstancedMesh||!0!==$.instancing?r.isSkinnedMesh&&!1===$.skinning?b=!0:r.isSkinnedMesh||!0!==$.skinning?$.envMap!==h?b=!0:n.fog&&$.fog!==o?b=!0:void 0!==$.numClippingPlanes&&($.numClippingPlanes!==ec.numPlanes||$.numIntersection!==ec.numIntersection)?b=!0:$.vertexAlphas!==c?b=!0:$.vertexTangents!==p?b=!0:$.morphTargets!==f?b=!0:$.morphNormals!==m?b=!0:!0===Z.isWebGL2&&$.morphTargetsCount!==g&&(b=!0):b=!0:b=!0:(b=!0,$.__version=n.version);let M=$.currentProgram;!0===b&&(M=eI(n,t,r));let T=!1,E=!1,A=!1,C=M.getUniforms(),P=$.uniforms;if(J.useProgram(M.program)&&(T=!0,E=!0,A=!0),n.id!==_&&(_=n.id,E=!0),T||S!==e){if(C.setValue(W,"projectionMatrix",e.projectionMatrix),Z.logarithmicDepthBuffer&&C.setValue(W,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),S!==e&&(S=e,E=!0,A=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){let D=C.map.cameraPosition;void 0!==D&&D.setValue(W,G.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&C.setValue(W,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&C.setValue(W,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){C.setOptional(W,r,"bindMatrix"),C.setOptional(W,r,"bindMatrixInverse");let I=r.skeleton;I&&(Z.floatVertexTextures?(null===I.boneTexture&&I.computeBoneTexture(),C.setValue(W,"boneTexture",I.boneTexture,et),C.setValue(W,"boneTextureSize",I.boneTextureSize)):C.setOptional(W,I,"boneMatrices"))}return i&&(void 0!==i.morphAttributes.position||void 0!==i.morphAttributes.normal)&&eg.update(r,i,n,M),(E||$.receiveShadow!==r.receiveShadow)&&($.receiveShadow=r.receiveShadow,C.setValue(W,"receiveShadow",r.receiveShadow)),E&&(C.setValue(W,"toneMappingExposure",v.toneMappingExposure),$.needsLights&&(a=P,s=A,a.ambientLightColor.needsUpdate=s,a.lightProbe.needsUpdate=s,a.directionalLights.needsUpdate=s,a.directionalLightShadows.needsUpdate=s,a.pointLights.needsUpdate=s,a.pointLightShadows.needsUpdate=s,a.spotLights.needsUpdate=s,a.spotLightShadows.needsUpdate=s,a.rectAreaLights.needsUpdate=s,a.hemisphereLights.needsUpdate=s),o&&n.fog&&el.refreshFogUniforms(P,o),el.refreshMaterialUniforms(P,n,R,L,O),sA.upload(W,$.uniformsList,P,et)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(sA.upload(W,$.uniformsList,P,et),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&C.setValue(W,"center",r.center),C.setValue(W,"modelViewMatrix",r.modelViewMatrix),C.setValue(W,"normalMatrix",r.normalMatrix),C.setValue(W,"modelMatrix",r.matrixWorld),M}e0.setAnimationLoop(function(e){eE&&eE(e)}),"undefined"!=typeof window&&e0.setContext(window),this.setAnimationLoop=function(e){eE=e,ew.setAnimationLoop(e),null===e?e0.stop():e0.start()},ew.addEventListener("sessionstart",eA),ew.addEventListener("sessionend",eR),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===x)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ew.enabled&&!0===ew.isPresenting&&(!0===ew.cameraAutoUpdate&&ew.updateCamera(t),t=ew.getCamera()),!0===e.isScene&&e.onBeforeRender(v,e,t,w),(d=eh.get(e,$.length)).init(),$.push(d),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),z.setFromProjectionMatrix(H),U=this.localClippingEnabled,N=ec.init(this.clippingPlanes,U,t),(c=eu.get(e,p.length)).init(),p.push(c),function e(t,i,n,r){if(!1===t.visible)return;let a=t.layers.test(i.layers);if(a){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||z.intersectsSprite(t)){r&&G.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);let s=es.update(t),o=t.material;o.visible&&c.push(t,s,o,n,G.z,null)}}else if(t.isImmediateRenderObject)r&&G.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H),c.push(t,null,t.material,n,G.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==K.render.frame&&(t.skeleton.update(),t.skeleton.frame=K.render.frame),!t.frustumCulled||z.intersectsObject(t))){r&&G.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);let l=es.update(t),u=t.material;if(Array.isArray(u)){let h=l.groups;for(let p=0,f=h.length;p<f;p++){let m=h[p],g=u[m.materialIndex];g&&g.visible&&c.push(t,l,g,n,G.z,m)}}else u.visible&&c.push(t,l,u,n,G.z,null)}}let $=t.children;for(let v=0,x=$.length;v<x;v++)e($[v],i,n,r)}(e,t,0,v.sortObjects),c.finish(),!0===v.sortObjects&&c.sort(C,P),!0===N&&ec.beginShadows();let i=d.state.shadowsArray;if(ep.render(i,e,t),!0===N&&ec.endShadows(),!0===this.info.autoReset&&this.info.reset(),em.render(c,e),d.setupLights(v.physicallyCorrectLights),t.isArrayCamera){let n=t.cameras;for(let r=0,a=n.length;r<a;r++){let s=n[r];eC(c,e,s,s.viewport)}}else eC(c,e,t);null!==w&&(et.updateMultisampleRenderTarget(w),et.updateRenderTargetMipmap(w)),!0===e.isScene&&e.onAfterRender(v,e,t),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1),ey.resetDefaultState(),_=-1,S=null,$.pop(),d=$.length>0?$[$.length-1]:null,p.pop(),c=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return w},this.setRenderTarget=function(e,t=0,i=0){w=e,y=t,b=i,e&&void 0===ee.get(e).__webglFramebuffer&&et.setupRenderTarget(e);let n=null,r=!1,a=!1;if(e){let s=e.texture;(s.isDataTexture3D||s.isDataTexture2DArray)&&(a=!0);let o=ee.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=o[t],r=!0):n=e.isWebGLMultisampleRenderTarget?ee.get(e).__webglMultisampledFramebuffer:o,M.copy(e.viewport),T.copy(e.scissor),E=e.scissorTest}else M.copy(D).multiplyScalar(R).floor(),T.copy(I).multiplyScalar(R).floor(),E=F;let l=J.bindFramebuffer(36160,n);if(l&&Z.drawBuffers){let u=!1;if(e){if(e.isWebGLMultipleRenderTargets){let h=e.texture;if(B.length!==h.length||36064!==B[0]){for(let c=0,d=h.length;c<d;c++)B[c]=36064+c;B.length=h.length,u=!0}}else(1!==B.length||36064!==B[0])&&(B[0]=36064,B.length=1,u=!0)}else(1!==B.length||1029!==B[0])&&(B[0]=1029,B.length=1,u=!0);u&&(Z.isWebGL2?W.drawBuffers(B):Y.get("WEBGL_draw_buffers").drawBuffersWEBGL(B))}if(J.viewport(M),J.scissor(T),J.setScissorTest(E),r){let p=ee.get(e.texture);W.framebufferTexture2D(36160,36064,34069+t,p.__webglTexture,i)}else if(a){let f=ee.get(e.texture);W.framebufferTextureLayer(36160,36064,f.__webglTexture,i||0,t||0)}_=-1},this.readRenderTargetPixels=function(e,t,i,n,r,a,s){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=ee.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(36160,o);try{let l=e.texture,u=l.format,h=l.type;if(u!==eF&&ex.convert(u)!==W.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=h===e1&&(Y.has("EXT_color_buffer_half_float")||Z.isWebGL2&&Y.has("EXT_color_buffer_float"));if(h!==e_&&ex.convert(h)!==W.getParameter(35738)&&!(h===eL&&(Z.isWebGL2||Y.has("OES_texture_float")||Y.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}36053===W.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&W.readPixels(t,i,n,r,ex.convert(u),ex.convert(h),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let d=null!==w?ee.get(w).__webglFramebuffer:null;J.bindFramebuffer(36160,d)}}},this.copyFramebufferToTexture=function(e,t,i=0){let n=Math.pow(2,-i),r=Math.floor(t.image.width*n),a=Math.floor(t.image.height*n),s=ex.convert(t.format);Z.isWebGL2&&(6407===s&&(s=32849),6408===s&&(s=32856)),et.setTexture2D(t,0),W.copyTexImage2D(3553,i,s,e.x,e.y,r,a,0),J.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n=0){let r=t.image.width,a=t.image.height,s=ex.convert(i.format),o=ex.convert(i.type);et.setTexture2D(i,0),W.pixelStorei(37440,i.flipY),W.pixelStorei(37441,i.premultiplyAlpha),W.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?W.texSubImage2D(3553,n,e.x,e.y,r,a,s,o,t.image.data):t.isCompressedTexture?W.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):W.texSubImage2D(3553,n,e.x,e.y,s,o,t.image),0===n&&i.generateMipmaps&&W.generateMipmap(3553),J.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,n,r=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=ex.convert(n.format),u=ex.convert(n.type),h;if(n.isDataTexture3D)et.setTexture3D(n,0),h=32879;else if(n.isDataTexture2DArray)et.setTexture2DArray(n,0),h=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}W.pixelStorei(37440,n.flipY),W.pixelStorei(37441,n.premultiplyAlpha),W.pixelStorei(3317,n.unpackAlignment);let c=W.getParameter(3314),d=W.getParameter(32878),p=W.getParameter(3316),f=W.getParameter(3315),m=W.getParameter(32877),g=i.isCompressedTexture?i.mipmaps[0]:i.image;W.pixelStorei(3314,g.width),W.pixelStorei(32878,g.height),W.pixelStorei(3316,e.min.x),W.pixelStorei(3315,e.min.y),W.pixelStorei(32877,e.min.z),i.isDataTexture||i.isDataTexture3D?W.texSubImage3D(h,r,t.x,t.y,t.z,a,s,o,l,u,g.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),W.compressedTexSubImage3D(h,r,t.x,t.y,t.z,a,s,o,l,g.data)):W.texSubImage3D(h,r,t.x,t.y,t.z,a,s,o,l,u,g),W.pixelStorei(3314,c),W.pixelStorei(32878,d),W.pixelStorei(3316,p),W.pixelStorei(3315,f),W.pixelStorei(32877,m),0===r&&n.generateMipmaps&&W.generateMipmap(h),J.unbindTexture()},this.initTexture=function(e){et.setTexture2D(e,0),J.unbindTexture()},this.resetState=function(){y=0,b=0,w=null,J.reset(),ey.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class ou extends ol{}ou.prototype.isWebGL1Renderer=!0;class oh{constructor(e,t=25e-5){this.name="",this.color=new nK(e),this.density=t}clone(){return new oh(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}oh.prototype.isFogExp2=!0;class oc{constructor(e,t=1,i=1e3){this.name="",this.color=new nK(e),this.near=t,this.far=i}clone(){return new oc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}oc.prototype.isFog=!0;class od extends nU{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}od.prototype.isScene=!0;class op{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=ia,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=i_()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=i_()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=i_()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}op.prototype.isInterleavedBuffer=!0;let of=new iW;class om{constructor(e,t,i,n=!1){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)of.x=this.getX(t),of.y=this.getY(t),of.z=this.getZ(t),of.applyMatrix4(e),this.setXYZ(t,of.x,of.y,of.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)of.x=this.getX(t),of.y=this.getY(t),of.z=this.getZ(t),of.applyNormalMatrix(e),this.setXYZ(t,of.x,of.y,of.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)of.x=this.getX(t),of.y=this.getY(t),of.z=this.getZ(t),of.transformDirection(e),this.setXYZ(t,of.x,of.y,of.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new om(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new ri(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}om.prototype.isInterleavedBufferAttribute=!0;class og extends nj{constructor(e){super(),this.type="SpriteMaterial",this.color=new nK(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}og.prototype.isSpriteMaterial=!0;let o$,ov=new iW,ox=new iW,oy=new iW,o8=new iC,ob=new iC,ow=new n$,o_=new iW,oS=new iW,oM=new iW,oT=new iC,oE=new iC,oA=new iC;class oL extends nU{constructor(e){if(super(),this.type="Sprite",void 0===o$){o$=new ry;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new op(t,5);o$.setIndex([0,1,2,0,2,3]),o$.setAttribute("position",new om(i,3,0,!1)),o$.setAttribute("uv",new om(i,2,3,!1))}this.geometry=o$,this.material=void 0!==e?e:new og,this.center=new iC(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ox.setFromMatrixScale(this.matrixWorld),ow.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),oy.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ox.multiplyScalar(-oy.z);let i=this.material.rotation,n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));let a=this.center;o1(o_.set(-.5,-.5,0),oy,a,ox,n,r),o1(oS.set(.5,-.5,0),oy,a,ox,n,r),o1(oM.set(.5,.5,0),oy,a,ox,n,r),oT.set(0,0),oE.set(1,0),oA.set(1,1);let s=e.ray.intersectTriangle(o_,oS,oM,!1,ov);if(null===s&&(o1(oS.set(-.5,.5,0),oy,a,ox,n,r),oE.set(0,1),null===(s=e.ray.intersectTriangle(o_,oM,oS,!1,ov))))return;let o=e.ray.origin.distanceTo(ov);o<e.near||o>e.far||t.push({distance:o,point:ov.clone(),uv:n5.getUV(ov,o_,oS,oM,oT,oE,oA,new iC),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function o1(e,t,i,n,r,a){o8.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(ob.x=a*o8.x-r*o8.y,ob.y=r*o8.x+a*o8.y):ob.copy(o8),e.copy(t),e.x+=ob.x,e.y+=ob.y,e.applyMatrix4(ow)}oL.prototype.isSprite=!0;let oR=new iW,o0=new iW;class oC extends nU{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let i=0,n=t.length;i<n;i++){let r=t[i];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);let i=this.levels,n;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n&&!(e<t[i].distance);i++);return t[i-1].object}return null}raycast(e,t){let i=this.levels;if(i.length>0){oR.setFromMatrixPosition(this.matrixWorld);let n=e.ray.origin.distanceTo(oR);this.getObjectForDistance(n).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){oR.setFromMatrixPosition(e.matrixWorld),o0.setFromMatrixPosition(this.matrixWorld);let i=oR.distanceTo(o0)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++)if(i>=t[n].distance)t[n-1].object.visible=!1,t[n].object.visible=!0;else break;for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let n=0,r=i.length;n<r;n++){let a=i[n];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}let oP=new iW,oD=new iH,oI=new iH,oF=new iW,oB=new n$;class oz extends rF{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new n$,this.bindMatrixInverse=new n$}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new iH,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let i=this.skeleton,n=this.geometry;oD.fromBufferAttribute(n.attributes.skinIndex,e),oI.fromBufferAttribute(n.attributes.skinWeight,e),oP.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let a=oI.getComponent(r);if(0!==a){let s=oD.getComponent(r);oB.multiplyMatrices(i.bones[s].matrixWorld,i.boneInverses[s]),t.addScaledVector(oF.copy(oP).applyMatrix4(oB),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}oz.prototype.isSkinnedMesh=!0;class oN extends nU{constructor(){super(),this.type="Bone"}}oN.prototype.isBone=!0;class oU extends iO{constructor(e=null,t=1,i=1,n,r,a,s,o,l=ef,u=ef,h,c){super(null,a,s,o,l,u,n,r,h,c),this.image={data:e,width:t,height:i},this.magFilter=l,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}oU.prototype.isDataTexture=!0;let oO=new n$,o2=new n$;class oH{constructor(e=[],t=[]){this.uuid=i_(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new n$)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new n$;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let n=0,r=this.bones.length;n<r;n++){let a=this.bones[n];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,a=e.length;r<a;r++){let s=e[r]?e[r].matrixWorld:o2;oO.multiplyMatrices(s,t[r]),oO.toArray(i,16*r)}null!==n&&(n.needsUpdate=!0)}clone(){return new oH(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=i1(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new oU(t,e,e,eF,eL);return this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let r=e.bones[i],a=t[r];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new oN),this.bones.push(a),this.boneInverses.push(new n$().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){let a=t[n];e.bones.push(a.uuid);let s=i[n];e.boneInverses.push(s.toArray())}return e}}class oG extends ri{constructor(e,t,i,n=1){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,i),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}oG.prototype.isInstancedBufferAttribute=!0;let o3=new n$,ok=new n$,oV=[],oW=new rF;class o4 extends rF{constructor(e,t,i){super(e,t),this.instanceMatrix=new oG(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,n=this.count;if(oW.geometry=this.geometry,oW.material=this.material,void 0!==oW.material)for(let r=0;r<n;r++){this.getMatrixAt(r,o3),ok.multiplyMatrices(i,o3),oW.matrixWorld=ok,oW.raycast(e,oV);for(let a=0,s=oV.length;a<s;a++){let o=oV[a];o.instanceId=r,o.object=this,t.push(o)}oV.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new oG(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}o4.prototype.isInstancedMesh=!0;class o6 extends nj{constructor(e){super(),this.type="LineBasicMaterial",this.color=new nK(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}o6.prototype.isLineBasicMaterial=!0;let o5=new iW,o7=new iW,oj=new n$,oq=new ng,oX=new nl;class oY extends nU{constructor(e=new ry,t=new o6){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)o5.fromBufferAttribute(t,n-1),o7.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=o5.distanceTo(o7);e.setAttribute("lineDistance",new rc(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oX.copy(i.boundingSphere),oX.applyMatrix4(n),oX.radius+=r,!1===e.ray.intersectsSphere(oX))return;oj.copy(n).invert(),oq.copy(e.ray).applyMatrix4(oj);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new iW,u=new iW,h=new iW,c=new iW,d=this.isLineSegments?2:1;if(i.isBufferGeometry){let p=i.index,f=i.attributes,m=f.position;if(null!==p){let g=Math.max(0,a.start),$=Math.min(p.count,a.start+a.count);for(let v=g,x=$-1;v<x;v+=d){let y=p.getX(v),b=p.getX(v+1);l.fromBufferAttribute(m,y),u.fromBufferAttribute(m,b);let w=oq.distanceSqToSegment(l,u,c,h);if(w>o)continue;c.applyMatrix4(this.matrixWorld);let _=e.ray.origin.distanceTo(c);_<e.near||_>e.far||t.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{let S=Math.max(0,a.start),M=Math.min(m.count,a.start+a.count);for(let T=S,E=M-1;T<E;T+=d){l.fromBufferAttribute(m,T),u.fromBufferAttribute(m,T+1);let A=oq.distanceSqToSegment(l,u,c,h);if(A>o)continue;c.applyMatrix4(this.matrixWorld);let L=e.ray.origin.distanceTo(c);L<e.near||L>e.far||t.push({distance:L,point:h.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}oY.prototype.isLine=!0;let oZ=new iW,oJ=new iW;class oQ extends oY{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)oZ.fromBufferAttribute(t,n),oJ.fromBufferAttribute(t,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+oZ.distanceTo(oJ);e.setAttribute("lineDistance",new rc(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}oQ.prototype.isLineSegments=!0;class oK extends oY{constructor(e,t){super(e,t),this.type="LineLoop"}}oK.prototype.isLineLoop=!0;class o9 extends nj{constructor(e){super(),this.type="PointsMaterial",this.color=new nK(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}o9.prototype.isPointsMaterial=!0;let le=new n$,lt=new ng,li=new nl,ln=new iW;class lr extends nU{constructor(e=new ry,t=new o9){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),li.copy(i.boundingSphere),li.applyMatrix4(n),li.radius+=r,!1===e.ray.intersectsSphere(li))return;le.copy(n).invert(),lt.copy(e.ray).applyMatrix4(le);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(i.isBufferGeometry){let l=i.index,u=i.attributes,h=u.position;if(null!==l){let c=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let p=c,f=d;p<f;p++){let m=l.getX(p);ln.fromBufferAttribute(h,m),la(ln,m,o,n,e,t,this)}}else{let g=Math.max(0,a.start),$=Math.min(h.count,a.start+a.count);for(let v=g,x=$;v<x;v++)ln.fromBufferAttribute(h,v),la(ln,v,o,n,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function la(e,t,i,n,r,a,s){let o=lt.distanceSqToPoint(e);if(o<i){let l=new iW;lt.closestPointToPoint(e,l),l.applyMatrix4(n);let u=r.ray.origin.distanceTo(l);if(u<r.near||u>r.far)return;a.push({distance:u,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}lr.prototype.isPoints=!0;class ls extends iO{constructor(e,t,i,n,r,a,s,o,l){super(e,t,i,n,r,a,s,o,l),this.format=void 0!==s?s:eI,this.minFilter=void 0!==a?a:ex,this.magFilter=void 0!==r?r:ex,this.generateMipmaps=!1;let u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}ls.prototype.isVideoTexture=!0;class lo extends iO{constructor(e,t,i,n,r,a,s,o,l,u,h,c){super(null,a,s,o,l,u,n,r,h,c),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}lo.prototype.isCompressedTexture=!0;class ll extends iO{constructor(e,t,i,n,r,a,s,o,l){super(e,t,i,n,r,a,s,o,l),this.needsUpdate=!0}}ll.prototype.isCanvasTexture=!0;class lu extends iO{constructor(e,t,i,n,r,a,s,o,l,u){if((u=void 0!==u?u:eU)!==eU&&u!==eO)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&u===eU&&(i=eT),void 0===i&&u===eO&&(i=eP),super(null,n,r,a,s,o,u,i,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:ef,this.minFilter=void 0!==o?o:ef,this.flipY=!1,this.generateMipmaps=!1}}lu.prototype.isDepthTexture=!0;class lh extends ry{constructor(e=1,t=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],a=[],s=[],o=[],l=new iW,u=new iC;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let h=0,c=3;h<=t;h++,c+=3){let d=i+h/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),a.push(l.x,l.y,l.z),s.push(0,0,1),u.x=(a[c]/e+1)/2,u.y=(a[c+1]/e+1)/2,o.push(u.x,u.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new rc(a,3)),this.setAttribute("normal",new rc(s,3)),this.setAttribute("uv",new rc(o,2))}static fromJSON(e){return new lh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class lc extends ry{constructor(e=1,t=1,i=1,n=8,r=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let u=[],h=[],c=[],d=[],p=0,f=[],m=i/2,g=0;function $(i){let r=p,a=new iC,f=new iW,$=0,v=!0===i?e:t,x=!0===i?1:-1;for(let y=1;y<=n;y++)h.push(0,m*x,0),c.push(0,x,0),d.push(.5,.5),p++;let b=p;for(let w=0;w<=n;w++){let _=w/n,S=_*o+s,M=Math.cos(S),T=Math.sin(S);f.x=v*T,f.y=m*x,f.z=v*M,h.push(f.x,f.y,f.z),c.push(0,x,0),a.x=.5*M+.5,a.y=.5*T*x+.5,d.push(a.x,a.y),p++}for(let E=0;E<n;E++){let A=r+E,L=b+E;!0===i?u.push(L,L+1,A):u.push(L+1,L,A),$+=3}l.addGroup(g,$,!0===i?1:2),g+=$}(function(){let a=new iW,$=new iW,v=0,x=(t-e)/i;for(let y=0;y<=r;y++){let b=[],w=y/r,_=w*(t-e)+e;for(let S=0;S<=n;S++){let M=S/n,T=M*o+s,E=Math.sin(T),A=Math.cos(T);$.x=_*E,$.y=-w*i+m,$.z=_*A,h.push($.x,$.y,$.z),a.set(E,x,A).normalize(),c.push(a.x,a.y,a.z),d.push(M,1-w),b.push(p++)}f.push(b)}for(let L=0;L<n;L++)for(let R=0;R<r;R++){let C=f[R][L],P=f[R+1][L],D=f[R+1][L+1],I=f[R][L+1];u.push(C,P,I),u.push(P,D,I),v+=6}l.addGroup(g,v,0),g+=v})(),!1===a&&(e>0&&$(!0),t>0&&$(!1)),this.setIndex(u),this.setAttribute("position",new rc(h,3)),this.setAttribute("normal",new rc(c,3)),this.setAttribute("uv",new rc(d,2))}static fromJSON(e){return new lc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ld extends lc{constructor(e=1,t=1,i=8,n=1,r=!1,a=0,s=2*Math.PI){super(0,e,t,i,n,r,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:s}}static fromJSON(e){return new ld(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lp extends ry{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],a=[];function s(e,t,i,n){let r=n+1,a=[];for(let s=0;s<=r;s++){a[s]=[];let l=e.clone().lerp(i,s/r),u=t.clone().lerp(i,s/r),h=r-s;for(let c=0;c<=h;c++)0===c&&s===r?a[s][c]=l:a[s][c]=l.clone().lerp(u,c/h)}for(let d=0;d<r;d++)for(let p=0;p<2*(r-d)-1;p++){let f=Math.floor(p/2);p%2==0?(o(a[d][f+1]),o(a[d+1][f]),o(a[d][f])):(o(a[d][f+1]),o(a[d+1][f+1]),o(a[d+1][f]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function u(e,t,i,n){n<0&&1===e.x&&(a[t]=e.x-1),0===i.x&&0===i.z&&(a[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function(e){let i=new iW,n=new iW,r=new iW;for(let a=0;a<t.length;a+=3)l(t[a+0],i),l(t[a+1],n),l(t[a+2],r),s(i,n,r,e)})(n),function(e){let t=new iW;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){let e=new iW;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let i=h(e)/2/Math.PI+.5,n=c(e)/Math.PI+.5;a.push(i,1-n)}(function(){let e=new iW,t=new iW,i=new iW,n=new iW,s=new iC,o=new iC,l=new iC;for(let c=0,d=0;c<r.length;c+=9,d+=6){e.set(r[c+0],r[c+1],r[c+2]),t.set(r[c+3],r[c+4],r[c+5]),i.set(r[c+6],r[c+7],r[c+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),l.set(a[d+4],a[d+5]),n.copy(e).add(t).add(i).divideScalar(3);let p=h(n);u(s,d+0,e,p),u(o,d+2,t,p),u(l,d+4,i,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],i=a[e+2],n=a[e+4],r=Math.max(t,i,n),s=Math.min(t,i,n);r>.9&&s<.1&&(t<.2&&(a[e+0]+=1),i<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new rc(r,3)),this.setAttribute("normal",new rc(r.slice(),3)),this.setAttribute("uv",new rc(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new lp(e.vertices,e.indices,e.radius,e.details)}}class lf extends lp{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lf(e.radius,e.detail)}}let lm=new iW,lg=new iW,l$=new iW,lv=new n5;class lx extends ry{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let i=Math.cos(ix*t),n=e.getIndex(),r=e.getAttribute("position"),a=n?n.count:r.count,s=[0,0,0],o=["a","b","c"],l=[,,,],u={},h=[];for(let c=0;c<a;c+=3){n?(s[0]=n.getX(c),s[1]=n.getX(c+1),s[2]=n.getX(c+2)):(s[0]=c,s[1]=c+1,s[2]=c+2);let{a:d,b:p,c:f}=lv;if(d.fromBufferAttribute(r,s[0]),p.fromBufferAttribute(r,s[1]),f.fromBufferAttribute(r,s[2]),lv.getNormal(l$),l[0]=`${Math.round(1e4*d.x)},${Math.round(1e4*d.y)},${Math.round(1e4*d.z)}`,l[1]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,l[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let m=0;m<3;m++){let g=(m+1)%3,$=l[m],v=l[g],x=lv[o[m]],y=lv[o[g]],b=`${$}_${v}`,w=`${v}_${$}`;w in u&&u[w]?(l$.dot(u[w].normal)<=i&&(h.push(x.x,x.y,x.z),h.push(y.x,y.y,y.z)),u[w]=null):b in u||(u[b]={index0:s[m],index1:s[g],normal:l$.clone()})}}for(let _ in u)if(u[_]){let{index0:S,index1:M}=u[_];lm.fromBufferAttribute(r,S),lg.fromBufferAttribute(r,M),h.push(lm.x,lm.y,lm.z),h.push(lg.x,lg.y,lg.z)}this.setAttribute("position",new rc(h,3))}}}class ly{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)t.push(r+=(i=this.getPoint(a/e)).distanceTo(n)),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),n=0,r=i.length,a;a=t||e*i[r-1];let s=0,o=r-1,l;for(;s<=o;)if((l=i[n=Math.floor(s+(o-s)/2)]-a)<0)s=n+1;else if(l>0)o=n-1;else{o=n;break}if(i[n=o]===a)return n/(r-1);let u=i[n],h=i[n+1],c=(a-u)/(h-u),d=(n+c)/(r-1);return d}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),a=this.getPoint(n),s=t||(r.isVector2?new iC:new iW);return s.copy(a).sub(r).normalize(),s}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new iW,n=[],r=[],a=[],s=new iW,o=new n$;for(let l=0;l<=e;l++){let u=l/e;n[l]=this.getTangentAt(u,new iW)}r[0]=new iW,a[0]=new iW;let h=Number.MAX_VALUE,c=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);c<=h&&(h=c,i.set(1,0,0)),d<=h&&(h=d,i.set(0,1,0)),p<=h&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],s),a[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),a[f]=a[f-1].clone(),s.crossVectors(n[f-1],n[f]),s.length()>Number.EPSILON){s.normalize();let m=Math.acos(iS(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(o.makeRotationAxis(s,m))}a[f].crossVectors(n[f],r[f])}if(!0===t){let g=Math.acos(iS(r[0].dot(r[e]),-1,1));g/=e,n[0].dot(s.crossVectors(r[0],r[e]))>0&&(g=-g);for(let $=1;$<=e;$++)r[$].applyMatrix4(o.makeRotationAxis(n[$],g*$)),a[$].crossVectors(n[$],r[$])}return{tangents:n,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class l8 extends ly{constructor(e=0,t=0,i=1,n=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let i=t||new iC,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=a?0:n),!0!==this.aClockwise||a||(r===n?r=-n:r-=n);let s=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*u-d*h+this.aX,l=c*h+d*u+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}l8.prototype.isEllipseCurve=!0;class lb extends l8{constructor(e,t,i,n,r,a){super(e,t,i,i,n,r,a),this.type="ArcCurve"}}function lw(){let e=0,t=0,i=0,n=0;function r(r,a,s,o){e=r,t=s,i=-3*r+3*a-2*s-o,n=2*r-2*a+s+o}return{initCatmullRom:function(e,t,i,n,a){r(t,i,a*(i-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,a,s,o){let l=(t-e)/a-(i-e)/(a+s)+(i-t)/s,u=(i-t)/s-(n-t)/(s+o)+(n-i)/o;r(t,i,l*=s,u*=s)},calc:function(r){let a=r*r;return e+t*r+i*a+n*(a*r)}}}lb.prototype.isArcCurve=!0;let l_=new iW,lS=new lw,lM=new lw,lT=new lw;class lE extends ly{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new iW){let i=t,n=this.points,r=n.length,a=(r-(this.closed?0:1))*e,s=Math.floor(a),o=a-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r)+1)*r:0===o&&s===r-1&&(s=r-2,o=1);let l,u;this.closed||s>0?l=n[(s-1)%r]:(l_.subVectors(n[0],n[1]).add(n[0]),l=l_);let h=n[s%r],c=n[(s+1)%r];if(this.closed||s+2<r?u=n[(s+2)%r]:(l_.subVectors(n[r-1],n[r-2]).add(n[r-1]),u=l_),"centripetal"===this.curveType||"chordal"===this.curveType){let d="chordal"===this.curveType?.5:.25,p=Math.pow(l.distanceToSquared(h),d),f=Math.pow(h.distanceToSquared(c),d),m=Math.pow(c.distanceToSquared(u),d);f<1e-4&&(f=1),p<1e-4&&(p=f),m<1e-4&&(m=f),lS.initNonuniformCatmullRom(l.x,h.x,c.x,u.x,p,f,m),lM.initNonuniformCatmullRom(l.y,h.y,c.y,u.y,p,f,m),lT.initNonuniformCatmullRom(l.z,h.z,c.z,u.z,p,f,m)}else"catmullrom"===this.curveType&&(lS.initCatmullRom(l.x,h.x,c.x,u.x,this.tension),lM.initCatmullRom(l.y,h.y,c.y,u.y,this.tension),lT.initCatmullRom(l.z,h.z,c.z,u.z,this.tension));return i.set(lS.calc(o),lM.calc(o),lT.calc(o)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new iW().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function lA(e,t,i,n,r){let a=(n-t)*.5,s=(r-i)*.5,o=e*e;return(2*i-2*n+a+s)*(e*o)+(-3*i+3*n-2*a-s)*o+a*e+i}function lL(e,t,i,n){var r,a,s,o;return function(e,t){let i=1-e;return i*i*t}(e,t)+(r=e,2*(1-r)*r*(a=i))+(s=e,s*s*(o=n))}function l1(e,t,i,n,r){var a,s,o,l;return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+(a=e,3*(1-a)*a*a*(s=n))+(o=e,o*o*o*(l=r))}lE.prototype.isCatmullRomCurve3=!0;class lR extends ly{constructor(e=new iC,t=new iC,i=new iC,n=new iC){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new iC){let i=t,n=this.v0,r=this.v1,a=this.v2,s=this.v3;return i.set(l1(e,n.x,r.x,a.x,s.x),l1(e,n.y,r.y,a.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}lR.prototype.isCubicBezierCurve=!0;class l0 extends ly{constructor(e=new iW,t=new iW,i=new iW,n=new iW){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new iW){let i=t,n=this.v0,r=this.v1,a=this.v2,s=this.v3;return i.set(l1(e,n.x,r.x,a.x,s.x),l1(e,n.y,r.y,a.y,s.y),l1(e,n.z,r.z,a.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}l0.prototype.isCubicBezierCurve3=!0;class lC extends ly{constructor(e=new iC,t=new iC){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new iC){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let i=t||new iC;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lC.prototype.isLineCurve=!0;class lP extends ly{constructor(e=new iW,t=new iW){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new iW){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lD extends ly{constructor(e=new iC,t=new iC,i=new iC){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iC){let i=t,n=this.v0,r=this.v1,a=this.v2;return i.set(lL(e,n.x,r.x,a.x),lL(e,n.y,r.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lD.prototype.isQuadraticBezierCurve=!0;class lI extends ly{constructor(e=new iW,t=new iW,i=new iW){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iW){let i=t,n=this.v0,r=this.v1,a=this.v2;return i.set(lL(e,n.x,r.x,a.x),lL(e,n.y,r.y,a.y),lL(e,n.z,r.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lI.prototype.isQuadraticBezierCurve3=!0;class lF extends ly{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new iC){let i=t,n=this.points,r=(n.length-1)*e,a=Math.floor(r),s=r-a,o=n[0===a?a:a-1],l=n[a],u=n[a>n.length-2?n.length-1:a+1],h=n[a>n.length-3?n.length-1:a+2];return i.set(lA(s,o.x,l.x,u.x,h.x),lA(s,o.y,l.y,u.y,h.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new iC().fromArray(n))}return this}}lF.prototype.isSplineCurve=!0;var lB=Object.freeze({__proto__:null,ArcCurve:lb,CatmullRomCurve3:lE,CubicBezierCurve:lR,CubicBezierCurve3:l0,EllipseCurve:l8,LineCurve:lC,LineCurve3:lP,QuadraticBezierCurve:lD,QuadraticBezierCurve3:lI,SplineCurve:lF});class lz extends ly{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new lC(t,e))}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let a=n[r]-i,s=this.curves[r],o=s.getLength(),l=0===o?0:1-a/o;return s.getPointAt(l,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let n=0,r=this.curves;n<r.length;n++){let a=r[n],s=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let l=0;l<o.length;l++){let u=o[l];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(new lB[n.type]().fromJSON(n))}return this}}class lN extends lz{constructor(e){super(),this.type="Path",this.currentPoint=new iC,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new lC(this.currentPoint.clone(),new iC(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new lD(this.currentPoint.clone(),new iC(e,t),new iC(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,a){let s=new lR(this.currentPoint.clone(),new iC(e,t),new iC(i,n),new iC(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new lF(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,i,n,r,a),this}absarc(e,t,i,n,r,a){return this.absellipse(e,t,i,i,n,r,a),this}ellipse(e,t,i,n,r,a,s,o){let l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,i,n,r,a,s,o),this}absellipse(e,t,i,n,r,a,s,o){let l=new l8(e,t,i,n,r,a,s,o);if(this.curves.length>0){let u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class lU extends lN{constructor(e){super(e),this.uuid=i_(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(new lN().fromJSON(n))}return this}}let lO={triangulate:function(e,t,i=2){let n=t&&t.length,r=n?t[0]*i:e.length,a=l2(e,0,r,i,!0),s=[];if(!a||a.next===a.prev)return s;let o,l,u,h,c,d,p;if(n&&(a=function(e,t,i,n){let r=[],a,s,o,l,u;for(a=0,s=t.length;a<s;a++)o=t[a]*n,l=a<s-1?t[a+1]*n:e.length,(u=l2(e,o,l,n,!1))===u.next&&(u.steiner=!0),r.push(lj(u));for(r.sort(l4),a=0;a<r.length;a++)l6(r[a],i),i=lH(i,i.next);return i}(e,t,a,i)),e.length>80*i){o=u=e[0],l=h=e[1];for(let f=i;f<r;f+=i)c=e[f],d=e[f+1],c<o&&(o=c),d<l&&(l=d),c>u&&(u=c),d>h&&(h=d);p=0!==(p=Math.max(u-o,h-l))?1/p:0}return lG(a,s,i,o,l,p),s}};function l2(e,t,i,n,r){let a,s;if(r===function(e,t,i,n){let r=0;for(let a=t,s=i-n;a<i;a+=n)r+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return r}(e,t,i,n)>0)for(a=t;a<i;a+=n)s=ut(a,e[a],e[a+1],s);else for(a=i-n;a>=t;a-=n)s=ut(a,e[a],e[a+1],s);return s&&lZ(s,s.next)&&(ui(s),s=s.next),s}function lH(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(lZ(i,i.next)||0===lY(i.prev,i,i.next))){if(ui(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t);return t}function lG(e,t,i,n,r,a,s){if(!e)return;!s&&a&&function(e,t,i,n){let r=e;do null===r.z&&(r.z=l7(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,a,s,o,l,u=1;do{for(i=e,e=null,a=null,s=0;i;){for(s++,n=i,o=0,t=0;t<u&&(o++,n=n.nextZ);t++);for(l=u;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;i=n}a.nextZ=null,u*=2}while(s>1)}(r)}(e,n,r,a);let o=e,l,u;for(;e.prev!==e.next;){if(l=e.prev,u=e.next,a?lk(e,n,r,a):l3(e)){t.push(l.i/i),t.push(e.i/i),t.push(u.i/i),ui(e),e=u.next,o=u.next;continue}if((e=u)===o){s?1===s?lG(e=lV(lH(e),t,i),t,i,n,r,a,2):2===s&&lW(e,t,i,n,r,a):lG(lH(e),t,i,n,r,a,1);break}}}function l3(e){let t=e.prev,i=e,n=e.next;if(lY(t,i,n)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(lq(t.x,t.y,i.x,i.y,n.x,n.y,r.x,r.y)&&lY(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function lk(e,t,i,n){let r=e.prev,a=e,s=e.next;if(lY(r,a,s)>=0)return!1;let o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,u=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,c=l7(o,l,t,i,n),d=l7(u,h,t,i,n),p=e.prevZ,f=e.nextZ;for(;p&&p.z>=c&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&lq(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&lY(p.prev,p,p.next)>=0||(p=p.prevZ,f!==e.prev&&f!==e.next&&lq(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&lY(f.prev,f,f.next)>=0))return!1;f=f.nextZ}for(;p&&p.z>=c;){if(p!==e.prev&&p!==e.next&&lq(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&lY(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&lq(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&lY(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function lV(e,t,i){let n=e;do{let r=n.prev,a=n.next.next;!lZ(r,a)&&lJ(r,n,n.next,a)&&l9(r,a)&&l9(a,r)&&(t.push(r.i/i),t.push(n.i/i),t.push(a.i/i),ui(n),ui(n.next),n=e=a),n=n.next}while(n!==e);return lH(n)}function lW(e,t,i,n,r,a){let s=e;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&lX(s,o)){let l=ue(s,o);s=lH(s,s.next),l=lH(l,l.next),lG(s,t,i,n,r,a),lG(l,t,i,n,r,a);return}o=o.next}s=s.next}while(s!==e)}function l4(e,t){return e.x-t.x}function l6(e,t){if(t=function(e,t){let i=t,n=e.x,r=e.y,a=-1/0,s;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){let o=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(o<=n&&o>a){if(a=o,o===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!s)return null;if(n===a)return s;let l=s,u=s.x,h=s.y,c=1/0,d;i=s;do n>=i.x&&i.x>=u&&n!==i.x&&lq(r<h?n:a,r,u,h,r<h?a:n,r,i.x,i.y)&&(d=Math.abs(r-i.y)/(n-i.x),l9(i,e)&&(d<c||d===c&&(i.x>s.x||i.x===s.x&&l5(s,i)))&&(s=i,c=d)),i=i.next;while(i!==l);return s}(e,t)){let i=ue(t,e);lH(t,t.next),lH(i,i.next)}}function l5(e,t){return 0>lY(e.prev,e,t.prev)&&0>lY(t.next,e,e.next)}function l7(e,t,i,n,r){return(e=((e=((e=((e=((e=32767*(e-i)*r)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-n)*r)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function lj(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}function lq(e,t,i,n,r,a,s,o){return(r-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(n-o)-(i-s)*(t-o)>=0&&(i-s)*(a-o)-(r-s)*(n-o)>=0}function lX(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&lJ(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(l9(e,t)&&l9(t,e)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do i.y>a!=i.next.y>a&&i.next.y!==i.y&&r<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next;while(i!==e);return n}(e,t)&&(lY(e.prev,e,t.prev)||lY(e,t.prev,t))||lZ(e,t)&&lY(e.prev,e,e.next)>0&&lY(t.prev,t,t.next)>0)}function lY(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function lZ(e,t){return e.x===t.x&&e.y===t.y}function lJ(e,t,i,n){let r=lK(lY(e,t,i)),a=lK(lY(e,t,n)),s=lK(lY(i,n,e)),o=lK(lY(i,n,t));return!!(r!==a&&s!==o||0===r&&lQ(e,i,t)||0===a&&lQ(e,n,t)||0===s&&lQ(i,e,n)||0===o&&lQ(i,t,n))}function lQ(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function lK(e){return e>0?1:e<0?-1:0}function l9(e,t){return 0>lY(e.prev,e,e.next)?lY(e,t,e.next)>=0&&lY(e,e.prev,t)>=0:0>lY(e,t,e.prev)||0>lY(e,e.next,t)}function ue(e,t){let i=new un(e.i,e.x,e.y),n=new un(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,a.next=n,n.prev=a,n}function ut(e,t,i,n){let r=new un(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function ui(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function un(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ur{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>ur.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];ua(e),us(i,e);let a=e.length;t.forEach(ua);for(let s=0;s<t.length;s++)n.push(a),a+=t[s].length,us(i,t[s]);let o=lO.triangulate(i,n);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function ua(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function us(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class uo extends ry{constructor(e=new lU([new iC(.5,.5),new iC(-.5,.5),new iC(-.5,-.5),new iC(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let a=0,s=e.length;a<s;a++){let o=e[a];l(o)}function l(e){let a=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,u=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:h-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:ul;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,$=!1,v,x,y,b;f&&(g=f.getSpacedPoints(o),$=!0,u=!1,v=f.computeFrenetFrames(o,!1),x=new iW,y=new iW,b=new iW),u||(p=0,h=0,c=0,d=0);let w=e.extractPoints(s),_=w.shape,S=w.holes,M=!ur.isClockWise(_);if(M){_=_.reverse();for(let T=0,E=S.length;T<E;T++){let A=S[T];ur.isClockWise(A)&&(S[T]=A.reverse())}}let L=ur.triangulateShape(_,S),R=_;for(let C=0,P=S.length;C<P;C++){let D=S[C];_=_.concat(D)}function I(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}let F=_.length,B=L.length;function z(e,t,i){let n,r,a,s=e.x-t.x,o=e.y-t.y,l=i.x-e.x,u=i.y-e.y,h=s*s+o*o;if(Math.abs(s*u-o*l)>Number.EPSILON){let c=Math.sqrt(h),d=Math.sqrt(l*l+u*u),p=t.x-o/c,f=t.y+s/c,m=i.x-u/d,g=i.y+l/d,$=((m-p)*u-(g-f)*l)/(s*u-o*l);n=p+s*$-e.x,r=f+o*$-e.y;let v=n*n+r*r;if(v<=2)return new iC(n,r);a=Math.sqrt(v/2)}else{let x=!1;s>Number.EPSILON?l>Number.EPSILON&&(x=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(x=!0):Math.sign(o)===Math.sign(u)&&(x=!0),x?(n=-o,r=s,a=Math.sqrt(h)):(n=s,r=o,a=Math.sqrt(h/2))}return new iC(n/a,r/a)}let N=[];for(let U=0,O=R.length,H=O-1,G=U+1;U<O;U++,H++,G++)H===O&&(H=0),G===O&&(G=0),N[U]=z(R[U],R[H],R[G]);let k=[],V,W=N.concat();for(let j=0,q=S.length;j<q;j++){let X=S[j];V=[];for(let Y=0,Z=X.length,J=Z-1,Q=Y+1;Y<Z;Y++,J++,Q++)J===Z&&(J=0),Q===Z&&(Q=0),V[Y]=z(X[Y],X[J],X[Q]);k.push(V),W=W.concat(V)}for(let K=0;K<p;K++){let ee=K/p,et=h*Math.cos(ee*Math.PI/2),ei=c*Math.sin(ee*Math.PI/2)+d;for(let en=0,er=R.length;en<er;en++){let ea=I(R[en],N[en],ei);eR(ea.x,ea.y,-et)}for(let es=0,eo=S.length;es<eo;es++){let el=S[es];V=k[es];for(let eu=0,eh=el.length;eu<eh;eu++){let ec=I(el[eu],V[eu],ei);eR(ec.x,ec.y,-et)}}}let ed=c+d;for(let ep=0;ep<F;ep++){let ef=u?I(_[ep],W[ep],ed):_[ep];$?(y.copy(v.normals[0]).multiplyScalar(ef.x),x.copy(v.binormals[0]).multiplyScalar(ef.y),b.copy(g[0]).add(y).add(x),eR(b.x,b.y,b.z)):eR(ef.x,ef.y,0)}for(let em=1;em<=o;em++)for(let eg=0;eg<F;eg++){let e$=u?I(_[eg],W[eg],ed):_[eg];$?(y.copy(v.normals[em]).multiplyScalar(e$.x),x.copy(v.binormals[em]).multiplyScalar(e$.y),b.copy(g[em]).add(y).add(x),eR(b.x,b.y,b.z)):eR(e$.x,e$.y,l/o*em)}for(let ev=p-1;ev>=0;ev--){let ex=ev/p,ey=h*Math.cos(ex*Math.PI/2),e8=c*Math.sin(ex*Math.PI/2)+d;for(let eb=0,ew=R.length;eb<ew;eb++){let e_=I(R[eb],N[eb],e8);eR(e_.x,e_.y,l+ey)}for(let eS=0,eM=S.length;eS<eM;eS++){let eT=S[eS];V=k[eS];for(let eE=0,eA=eT.length;eE<eA;eE++){let eL=I(eT[eE],V[eE],e8);$?eR(eL.x,eL.y+g[o-1].y,g[o-1].x+ey):eR(eL.x,eL.y,l+ey)}}}function e1(e,t){let i=e.length;for(;--i>=0;){let n=i,r=i-1;r<0&&(r=e.length-1);for(let a=0,s=o+2*p;a<s;a++){let l=F*a,u=F*(a+1),h=t+n+l,c=t+r+l,d=t+r+u,f=t+n+u;eC(h,c,d,f)}}}function eR(e,t,i){a.push(e),a.push(t),a.push(i)}function e0(e,t,r){eP(e),eP(t),eP(r);let a=n.length/3,s=m.generateTopUV(i,n,a-3,a-2,a-1);eD(s[0]),eD(s[1]),eD(s[2])}function eC(e,t,r,a){eP(e),eP(t),eP(a),eP(t),eP(r),eP(a);let s=n.length/3,o=m.generateSideWallUV(i,n,s-6,s-3,s-2,s-1);eD(o[0]),eD(o[1]),eD(o[3]),eD(o[1]),eD(o[2]),eD(o[3])}function eP(e){n.push(a[3*e+0]),n.push(a[3*e+1]),n.push(a[3*e+2])}function eD(e){r.push(e.x),r.push(e.y)}(function(){let e=n.length/3;if(u){let t=0,r=F*t;for(let a=0;a<B;a++){let s=L[a];e0(s[2]+r,s[1]+r,s[0]+r)}r=F*(t=o+2*p);for(let l=0;l<B;l++){let h=L[l];e0(h[0]+r,h[1]+r,h[2]+r)}}else{for(let c=0;c<B;c++){let d=L[c];e0(d[2],d[1],d[0])}for(let f=0;f<B;f++){let m=L[f];e0(m[0]+F*o,m[1]+F*o,m[2]+F*o)}}i.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;e1(R,t),t+=R.length;for(let r=0,a=S.length;r<a;r++){let s=S[r];e1(s,t),t+=s.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new rc(n,3)),this.setAttribute("uv",new rc(r,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){let a=e[n];i.shapes.push(a.uuid)}else i.shapes.push(e.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(t,i,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let a=t[e.shapes[n]];i.push(a)}let s=e.options.extrudePath;return void 0!==s&&(e.options.extrudePath=new lB[s.type]().fromJSON(s)),new uo(i,e.options)}}let ul={generateTopUV:function(e,t,i,n,r){let a=t[3*i],s=t[3*i+1],o=t[3*n],l=t[3*n+1],u=t[3*r],h=t[3*r+1];return[new iC(a,s),new iC(o,l),new iC(u,h)]},generateSideWallUV:function(e,t,i,n,r,a){let s=t[3*i],o=t[3*i+1],l=t[3*i+2],u=t[3*n],h=t[3*n+1],c=t[3*n+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*a],g=t[3*a+1],$=t[3*a+2];return Math.abs(o-h)<Math.abs(s-u)?[new iC(s,1-l),new iC(u,1-c),new iC(d,1-f),new iC(m,1-$)]:[new iC(o,1-l),new iC(h,1-c),new iC(p,1-f),new iC(g,1-$)]}};class uu extends lp{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new uu(e.radius,e.detail)}}class uh extends ry{constructor(e=[new iC(0,.5),new iC(.5,0),new iC(0,-.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=iS(n,0,2*Math.PI);let r=[],a=[],s=[],o=1/t,l=new iW,u=new iC;for(let h=0;h<=t;h++){let c=i+h*o*n,d=Math.sin(c),p=Math.cos(c);for(let f=0;f<=e.length-1;f++)l.x=e[f].x*d,l.y=e[f].y,l.z=e[f].x*p,a.push(l.x,l.y,l.z),u.x=h/t,u.y=f/(e.length-1),s.push(u.x,u.y)}for(let m=0;m<t;m++)for(let g=0;g<e.length-1;g++){let $=g+m*e.length,v=$,x=$+e.length,y=$+e.length+1,b=$+1;r.push(v,x,b),r.push(x,y,b)}if(this.setIndex(r),this.setAttribute("position",new rc(a,3)),this.setAttribute("uv",new rc(s,2)),this.computeVertexNormals(),n===2*Math.PI){let w=this.attributes.normal.array,_=new iW,S=new iW,M=new iW,T=t*e.length*3;for(let E=0,A=0;E<e.length;E++,A+=3)_.x=w[A+0],_.y=w[A+1],_.z=w[A+2],S.x=w[T+A+0],S.y=w[T+A+1],S.z=w[T+A+2],M.addVectors(_,S).normalize(),w[A+0]=w[T+A+0]=M.x,w[A+1]=w[T+A+1]=M.y,w[A+2]=w[T+A+2]=M.z}}static fromJSON(e){return new uh(e.points,e.segments,e.phiStart,e.phiLength)}}class uc extends lp{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new uc(e.radius,e.detail)}}class ud extends ry{constructor(e=.5,t=1,i=8,n=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},i=Math.max(3,i),n=Math.max(1,n);let s=[],o=[],l=[],u=[],h=e,c=(t-e)/n,d=new iW,p=new iC;for(let f=0;f<=n;f++){for(let m=0;m<=i;m++){let g=r+m/i*a;d.x=h*Math.cos(g),d.y=h*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=c}for(let $=0;$<n;$++){let v=$*(i+1);for(let x=0;x<i;x++){let y=x+v,b=y,w=y+i+1,_=y+i+2,S=y+1;s.push(b,w,S),s.push(w,_,S)}}this.setIndex(s),this.setAttribute("position",new rc(o,3)),this.setAttribute("normal",new rc(l,3)),this.setAttribute("uv",new rc(u,2))}static fromJSON(e){return new ud(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class up extends ry{constructor(e=new lU([new iC(0,.5),new iC(-.5,-.5),new iC(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],a=[],s=0,o=0;if(!1===Array.isArray(e))u(e);else for(let l=0;l<e.length;l++)u(e[l]),this.addGroup(s,o,l),s+=o,o=0;function u(e){let s=n.length/3,l=e.extractPoints(t),u=l.shape,h=l.holes;!1===ur.isClockWise(u)&&(u=u.reverse());for(let c=0,d=h.length;c<d;c++){let p=h[c];!0===ur.isClockWise(p)&&(h[c]=p.reverse())}let f=ur.triangulateShape(u,h);for(let m=0,g=h.length;m<g;m++){let $=h[m];u=u.concat($)}for(let v=0,x=u.length;v<x;v++){let y=u[v];n.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let b=0,w=f.length;b<w;b++){let _=f[b],S=_[0]+s,M=_[1]+s,T=_[2]+s;i.push(S,M,T),o+=3}}this.setIndex(i),this.setAttribute("position",new rc(n,3)),this.setAttribute("normal",new rc(r,3)),this.setAttribute("uv",new rc(a,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){let r=e[i];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let a=t[e.shapes[n]];i.push(a)}return new up(i,e.curveSegments)}}class uf extends ry{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(a+s,Math.PI),l=0,u=[],h=new iW,c=new iW,d=[],p=[],f=[],m=[];for(let g=0;g<=i;g++){let $=[],v=g/i,x=0;0==g&&0==a?x=.5/t:g==i&&o==Math.PI&&(x=-.5/t);for(let y=0;y<=t;y++){let b=y/t;h.x=-e*Math.cos(n+b*r)*Math.sin(a+v*s),h.y=e*Math.cos(a+v*s),h.z=e*Math.sin(n+b*r)*Math.sin(a+v*s),p.push(h.x,h.y,h.z),c.copy(h).normalize(),f.push(c.x,c.y,c.z),m.push(b+x,1-v),$.push(l++)}u.push($)}for(let w=0;w<i;w++)for(let _=0;_<t;_++){let S=u[w][_+1],M=u[w][_],T=u[w+1][_],E=u[w+1][_+1];(0!==w||a>0)&&d.push(S,M,E),(w!==i-1||o<Math.PI)&&d.push(M,T,E)}this.setIndex(d),this.setAttribute("position",new rc(p,3)),this.setAttribute("normal",new rc(f,3)),this.setAttribute("uv",new rc(m,2))}static fromJSON(e){return new uf(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class um extends lp{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new um(e.radius,e.detail)}}class ug extends ry{constructor(e=1,t=.4,i=8,n=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let a=[],s=[],o=[],l=[],u=new iW,h=new iW,c=new iW;for(let d=0;d<=i;d++)for(let p=0;p<=n;p++){let f=p/n*r,m=d/i*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(f),h.y=(e+t*Math.cos(m))*Math.sin(f),h.z=t*Math.sin(m),s.push(h.x,h.y,h.z),u.x=e*Math.cos(f),u.y=e*Math.sin(f),c.subVectors(h,u).normalize(),o.push(c.x,c.y,c.z),l.push(p/n),l.push(d/i)}for(let g=1;g<=i;g++)for(let $=1;$<=n;$++){let v=(n+1)*g+$-1,x=(n+1)*(g-1)+$-1,y=(n+1)*(g-1)+$,b=(n+1)*g+$;a.push(v,x,b),a.push(x,y,b)}this.setIndex(a),this.setAttribute("position",new rc(s,3)),this.setAttribute("normal",new rc(o,3)),this.setAttribute("uv",new rc(l,2))}static fromJSON(e){return new ug(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class u$ extends ry{constructor(e=1,t=.4,i=64,n=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:a},i=Math.floor(i),n=Math.floor(n);let s=[],o=[],l=[],u=[],h=new iW,c=new iW,d=new iW,p=new iW,f=new iW,m=new iW,g=new iW;for(let $=0;$<=i;++$){let v=$/i*r*Math.PI*2;L(v,r,a,e,d),L(v+.01,r,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let x=0;x<=n;++x){let y=x/n*Math.PI*2,b=-t*Math.cos(y),w=t*Math.sin(y);h.x=d.x+(b*g.x+w*f.x),h.y=d.y+(b*g.y+w*f.y),h.z=d.z+(b*g.z+w*f.z),o.push(h.x,h.y,h.z),c.subVectors(h,d).normalize(),l.push(c.x,c.y,c.z),u.push($/i),u.push(x/n)}}for(let _=1;_<=i;_++)for(let S=1;S<=n;S++){let M=(n+1)*(_-1)+(S-1),T=(n+1)*_+(S-1),E=(n+1)*_+S,A=(n+1)*(_-1)+S;s.push(M,T,A),s.push(T,E,A)}function L(e,t,i,n,r){let a=i/t*e,s=Math.cos(a);r.x=n*(2+s)*.5*Math.cos(e),r.y=n*(2+s)*Math.sin(e)*.5,r.z=n*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new rc(o,3)),this.setAttribute("normal",new rc(l,3)),this.setAttribute("uv",new rc(u,2))}static fromJSON(e){return new u$(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class uv extends ry{constructor(e=new lI(new iW(-1,-1,0),new iW(-1,1,0),new iW(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new iW,o=new iW,l=new iC,u=new iW,h=[],c=[],d=[],p=[];function f(r){u=e.getPointAt(r/t,u);let l=a.normals[r],d=a.binormals[r];for(let p=0;p<=n;p++){let f=p/n*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);o.x=g*l.x+m*d.x,o.y=g*l.y+m*d.y,o.z=g*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=u.x+i*o.x,s.y=u.y+i*o.y,s.z=u.z+i*o.z,h.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let i=1;i<=n;i++){let r=(n+1)*(e-1)+(i-1),a=(n+1)*e+(i-1),s=(n+1)*e+i,o=(n+1)*(e-1)+i;p.push(r,a,o),p.push(a,s,o)}}()})(),this.setIndex(p),this.setAttribute("position",new rc(h,3)),this.setAttribute("normal",new rc(c,3)),this.setAttribute("uv",new rc(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new uv(new lB[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ux extends ry{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],i=new Set,n=new iW,r=new iW;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let l=0,u=o.length;l<u;++l){let h=o[l],c=h.start,d=h.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let g=s.getX(p+m),$=s.getX(p+(m+1)%3);n.fromBufferAttribute(a,g),r.fromBufferAttribute(a,$),!0===uy(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{let v=e.attributes.position;for(let x=0,y=v.count/3;x<y;x++)for(let b=0;b<3;b++){let w=3*x+b,_=3*x+(b+1)%3;n.fromBufferAttribute(v,w),r.fromBufferAttribute(v,_),!0===uy(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new rc(t,3))}}}function uy(e,t,i){let n=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==i.has(n)&&!0!==i.has(r)&&(i.add(n,r),!0)}var u8=Object.freeze({__proto__:null,BoxGeometry:rz,BoxBufferGeometry:rz,CircleGeometry:lh,CircleBufferGeometry:lh,ConeGeometry:ld,ConeBufferGeometry:ld,CylinderGeometry:lc,CylinderBufferGeometry:lc,DodecahedronGeometry:lf,DodecahedronBufferGeometry:lf,EdgesGeometry:lx,ExtrudeGeometry:uo,ExtrudeBufferGeometry:uo,IcosahedronGeometry:uu,IcosahedronBufferGeometry:uu,LatheGeometry:uh,LatheBufferGeometry:uh,OctahedronGeometry:uc,OctahedronBufferGeometry:uc,PlaneGeometry:rZ,PlaneBufferGeometry:rZ,PolyhedronGeometry:lp,PolyhedronBufferGeometry:lp,RingGeometry:ud,RingBufferGeometry:ud,ShapeGeometry:up,ShapeBufferGeometry:up,SphereGeometry:uf,SphereBufferGeometry:uf,TetrahedronGeometry:um,TetrahedronBufferGeometry:um,TorusGeometry:ug,TorusBufferGeometry:ug,TorusKnotGeometry:u$,TorusKnotBufferGeometry:u$,TubeGeometry:uv,TubeBufferGeometry:uv,WireframeGeometry:ux});class ub extends nj{constructor(e){super(),this.type="ShadowMaterial",this.color=new nK(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}ub.prototype.isShadowMaterial=!0;class uw extends nj{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new nK(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nK(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tW,this.normalScale=new iC(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}uw.prototype.isMeshStandardMaterial=!0;class u_ extends uw{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new iC(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return iS(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenTint=new nK(0),this.sheenRoughness=1,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new nK(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new nK(1,1,1),this.specularTintMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenTint.copy(e.sheenTint),this.sheenRoughness=e.sheenRoughness,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationTint.copy(e.attenuationTint),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularTint.copy(e.specularTint),this.specularTintMap=e.specularTintMap,this}}u_.prototype.isMeshPhysicalMaterial=!0;class uS extends nj{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new nK(16777215),this.specular=new nK(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nK(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tW,this.normalScale=new iC(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}uS.prototype.isMeshPhongMaterial=!0;class uM extends nj{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new nK(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nK(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tW,this.normalScale=new iC(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}uM.prototype.isMeshToonMaterial=!0;class uT extends nj{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tW,this.normalScale=new iC(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}uT.prototype.isMeshNormalMaterial=!0;class uE extends nj{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new nK(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nK(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}uE.prototype.isMeshLambertMaterial=!0;class uA extends nj{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new nK(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tW,this.normalScale=new iC(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}uA.prototype.isMeshMatcapMaterial=!0;class uL extends o6{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}uL.prototype.isLineDashedMaterial=!0;var u1=Object.freeze({__proto__:null,ShadowMaterial:ub,SpriteMaterial:og,RawShaderMaterial:as,ShaderMaterial:r2,PointsMaterial:o9,MeshPhysicalMaterial:u_,MeshStandardMaterial:uw,MeshPhongMaterial:uS,MeshToonMaterial:uM,MeshNormalMaterial:uT,MeshLambertMaterial:uE,MeshDepthMaterial:sJ,MeshDistanceMaterial:sQ,MeshBasicMaterial:n9,MeshMatcapMaterial:uA,LineDashedMaterial:uL,LineBasicMaterial:o6,Material:nj});let uR={arraySlice:function(e,t,i){return uR.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){let t=e.length,i=Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(function(t,i){return e[t]-e[i]}),i},sortedArray:function(e,t,i){let n=e.length,r=new e.constructor(n);for(let a=0,s=0;s!==n;++a){let o=i[a]*t;for(let l=0;l!==t;++l)r[s++]=e[o+l]}return r},flattenJSON:function(e,t,i,n){let r=1,a=e[0];for(;void 0!==a&&void 0===a[n];)a=e[r++];if(void 0===a)return;let s=a[n];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[n])&&(t.push(a.time),i.push.apply(i,s)),a=e[r++];while(void 0!==a);else if(void 0!==s.toArray)do void 0!==(s=a[n])&&(t.push(a.time),s.toArray(i,i.length)),a=e[r++];while(void 0!==a);else do void 0!==(s=a[n])&&(t.push(a.time),i.push(s)),a=e[r++];while(void 0!==a)}},subclip:function(e,t,i,n,r=30){let a=e.clone();a.name=t;let s=[];for(let o=0;o<a.tracks.length;++o){let l=a.tracks[o],u=l.getValueSize(),h=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*r;if(!(p<i)&&!(p>=n)){h.push(l.times[d]);for(let f=0;f<u;++f)c.push(l.values[d*u+f])}}0!==h.length&&(l.times=uR.convertArray(h,l.times.constructor),l.values=uR.convertArray(c,l.values.constructor),s.push(l))}a.tracks=s;let m=1/0;for(let g=0;g<a.tracks.length;++g)m>a.tracks[g].times[0]&&(m=a.tracks[g].times[0]);for(let $=0;$<a.tracks.length;++$)a.tracks[$].shift(-1*m);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,i=e,n=30){n<=0&&(n=30);let r=i.tracks.length,a=t/n;for(let s=0;s<r;++s){let o=i.tracks[s],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;let u=e.tracks.find(function(e){return e.name===o.name&&e.ValueTypeName===l});if(void 0===u)continue;let h=0,c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=c/3);let d=0,p=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let f=o.times.length-1,m;if(a<=o.times[0]){let g=h,$=c-h;m=uR.arraySlice(o.values,g,$)}else if(a>=o.times[f]){let v=f*c+h,x=v+c-h;m=uR.arraySlice(o.values,v,x)}else{let y=o.createInterpolant(),b=h,w=c-h;y.evaluate(a),m=uR.arraySlice(y.resultBuffer,b,w)}if("quaternion"===l){let _=new iV().fromArray(m).normalize().conjugate();_.toArray(m)}let S=u.times.length;for(let M=0;M<S;++M){let T=M*p+d;if("quaternion"===l)iV.multiplyQuaternionsFlat(u.values,T,m,0,u.values,T);else{let E=p-2*d;for(let A=0;A<E;++A)u.values[T+A]-=m[A]}}}return e.blendMode=tD,e}};class u0{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];validate_interval:{seek:{let a;linear_scan:{forward_scan:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break forward_scan;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,r)}if(i===s)break;if(r=n,e<(n=t[++i]))break seek}a=t.length;break linear_scan}if(!(e>=r)){let o=t[1];e<o&&(i=2,r=o);for(let l=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(i===l)break;if(n=r,e>=(r=t[--i-1]))break seek}a=i,i=0;break linear_scan}break validate_interval}for(;i<a;){let u=i+a>>>1;e<t[u]?a=u:i=u+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,r,e)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let a=0;a!==n;++a)t[a]=i[r+a];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}u0.prototype.beforeStart_=u0.prototype.copySampleValue_,u0.prototype.afterEnd_=u0.prototype.copySampleValue_;class uC extends u0{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tR,endingEnd:tR}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,a=e+1,s=n[r],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case t0:r=e,s=2*t-i;break;case tC:s=t+n[r=n.length-2]-n[r+1];break;default:r=e,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case t0:a=e,o=2*i-t;break;case tC:a=1,o=i+n[1]-n[0];break;default:a=e-1,o=t}let l=(i-t)*.5,u=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-i),this._offsetPrev=r*u,this._offsetNext=a*u}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,$=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,v=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let y=0;y!==s;++y)r[y]=g*a[u+y]+$*a[l+y]+v*a[o+y]+x*a[h+y];return r}}class uP extends u0{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=(i-t)/(n-t),h=1-u;for(let c=0;c!==s;++c)r[c]=a[l+c]*h+a[o+c]*u;return r}}class uD extends u0{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class uI{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=uR.convertArray(t,this.TimeBufferType),this.values=uR.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:uR.convertArray(e.times,Array),values:uR.convertArray(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new uD(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new uP(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new uC(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case tA:t=this.InterpolantFactoryMethodDiscrete;break;case tL:t=this.InterpolantFactoryMethodLinear;break;case t1:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(i)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return tA;case this.InterpolantFactoryMethodLinear:return tL;case this.InterpolantFactoryMethodSmooth:return t1}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,a=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==r||a!==n){r>=a&&(r=(a=Math.max(a,1))-1);let s=this.getValueSize();this.times=uR.arraySlice(i,r,a),this.values=uR.arraySlice(this.values,r*s,a*s)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let s=0;s!==r;s++){let o=i[s];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),e=!1;break}a=o}if(void 0!==n&&uR.isTypedArray(n))for(let l=0,u=n.length;l!==u;++l){let h=n[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){let e=uR.arraySlice(this.times),t=uR.arraySlice(this.values),i=this.getValueSize(),n=this.getInterpolation()===t1,r=e.length-1,a=1;for(let s=1;s<r;++s){let o=!1,l=e[s],u=e[s+1];if(l!==u&&(1!==s||l!==e[0])){if(n)o=!0;else{let h=s*i,c=h-i,d=h+i;for(let p=0;p!==i;++p){let f=t[h+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(s!==a){e[a]=e[s];let m=s*i,g=a*i;for(let $=0;$!==i;++$)t[g+$]=t[m+$]}++a}}if(r>0){e[a]=e[r];for(let v=r*i,x=a*i,y=0;y!==i;++y)t[x+y]=t[v+y];++a}return a!==e.length?(this.times=uR.arraySlice(e,0,a),this.values=uR.arraySlice(t,0,a*i)):(this.times=e,this.values=t),this}clone(){let e=uR.arraySlice(this.times,0),t=uR.arraySlice(this.values,0),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}uI.prototype.TimeBufferType=Float32Array,uI.prototype.ValueBufferType=Float32Array,uI.prototype.DefaultInterpolation=tL;class uF extends uI{}uF.prototype.ValueTypeName="bool",uF.prototype.ValueBufferType=Array,uF.prototype.DefaultInterpolation=tA,uF.prototype.InterpolantFactoryMethodLinear=void 0,uF.prototype.InterpolantFactoryMethodSmooth=void 0;class uB extends uI{}uB.prototype.ValueTypeName="color";class uz extends uI{}uz.prototype.ValueTypeName="number";class uN extends u0{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-t)/(n-t),l=e*s;for(let u=l+s;l!==u;l+=4)iV.slerpFlat(r,0,a,l-s,a,l,o);return r}}class uU extends uI{InterpolantFactoryMethodLinear(e){return new uN(this.times,this.values,this.getValueSize(),e)}}uU.prototype.ValueTypeName="quaternion",uU.prototype.DefaultInterpolation=tL,uU.prototype.InterpolantFactoryMethodSmooth=void 0;class uO extends uI{}uO.prototype.ValueTypeName="string",uO.prototype.ValueBufferType=Array,uO.prototype.DefaultInterpolation=tA,uO.prototype.InterpolantFactoryMethodLinear=void 0,uO.prototype.InterpolantFactoryMethodSmooth=void 0;class u2 extends uI{}u2.prototype.ValueTypeName="vector";class uH{constructor(e,t=-1,i,n=tP){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=i_(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,a=i.length;r!==a;++r)t.push(uG(i[r]).scale(n));let s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){let t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=i.length;r!==a;++r)t.push(uI.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){let r=t.length,a=[];for(let s=0;s<r;s++){let o=[],l=[];o.push((s+r-1)%r,s,(s+1)%r),l.push(0,1,0);let u=uR.getKeyframeOrder(o);o=uR.sortedArray(o,1,u),l=uR.sortedArray(l,1,u),n||0!==o[0]||(o.push(r),l.push(l[0])),a.push(new uz(".morphTargetInfluences["+t[s].name+"]",o,l).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){let n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.name.match(r);if(l&&l.length>1){let u=l[1],h=n[u];h||(n[u]=h=[]),h.push(o)}}let c=[];for(let d in n)c.push(this.CreateFromMorphTargetSequence(d,n[d],t,i));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,n,r){if(0!==i.length){let a=[],s=[];uR.flattenJSON(i,a,s,n),0!==a.length&&r.push(new e(t,a,s))}},n=[],r=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let u=0;u<l.length;u++){let h=l[u].keys;if(h&&0!==h.length){if(h[0].morphTargets){let c={},d;for(d=0;d<h.length;d++)if(h[d].morphTargets)for(let p=0;p<h[d].morphTargets.length;p++)c[h[d].morphTargets[p]]=-1;for(let f in c){let m=[],g=[];for(let $=0;$!==h[d].morphTargets.length;++$){let v=h[d];m.push(v.time),g.push(v.morphTarget===f?1:0)}n.push(new uz(".morphTargetInfluence["+f+"]",m,g))}o=c.length*(a||1)}else{let x=".bones["+t[u].name+"]";i(u2,x+".position",h,"pos",n),i(uU,x+".quaternion",h,"rot",n),i(u2,x+".scale",h,"scl",n)}}}if(0===n.length)return null;let y=new this(r,o,n,s);return y}resetDuration(){let e=this.tracks,t=0;for(let i=0,n=e.length;i!==n;++i){let r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function uG(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return uz;case"vector":case"vector2":case"vector3":case"vector4":return u2;case"color":return uB;case"quaternion":return uU;case"bool":case"boolean":return uF;case"string":return uO}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let i=[],n=[];uR.flattenJSON(e.keys,i,n,"value"),e.times=i,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let u3={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class uk{constructor(e,t,i){let n=this,r=!1,a=0,s=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){s++,!1===r&&void 0!==n.onStart&&n.onStart(e,a,s),r=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}let uV=new uk;class uW{constructor(e){this.manager=void 0!==e?e:uV,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let u4={};class u6 extends uW{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=u3.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;if(void 0!==u4[e]){u4[e].push({onLoad:t,onProgress:i,onError:n});return}let s=e.match(/^data:(.*?)(;base64)?,(.*)$/),o;if(s){let l=s[1],u=!!s[2],h=s[3];h=decodeURIComponent(h),u&&(h=atob(h));try{let c,d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":let p=new Uint8Array(h.length);for(let f=0;f<h.length;f++)p[f]=h.charCodeAt(f);c="blob"===d?new Blob([p.buffer],{type:l}):p.buffer;break;case"document":let m=new DOMParser;c=m.parseFromString(h,l);break;case"json":c=JSON.parse(h);break;default:c=h}setTimeout(function(){t&&t(c),r.manager.itemEnd(e)},0)}catch(g){setTimeout(function(){n&&n(g),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{for(let $ in u4[e]=[],u4[e].push({onLoad:t,onProgress:i,onError:n}),(o=new XMLHttpRequest).open("GET",e,!0),o.addEventListener("load",function(t){let i=this.response,n=u4[e];if(delete u4[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),u3.add(e,i);for(let a=0,s=n.length;a<s;a++){let o=n[a];o.onLoad&&o.onLoad(i)}r.manager.itemEnd(e)}else{for(let l=0,u=n.length;l<u;l++){let h=n[l];h.onError&&h.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),o.addEventListener("progress",function(t){let i=u4[e];for(let n=0,r=i.length;n<r;n++){let a=i[n];a.onProgress&&a.onProgress(t)}},!1),o.addEventListener("error",function(t){let i=u4[e];delete u4[e];for(let n=0,a=i.length;n<a;n++){let s=i[n];s.onError&&s.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),o.addEventListener("abort",function(t){let i=u4[e];delete u4[e];for(let n=0,a=i.length;n<a;n++){let s=i[n];s.onError&&s.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)o.setRequestHeader($,this.requestHeader[$]);o.send(null)}return r.manager.itemStart(e),o}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class u5 extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new u6(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t=[];for(let i=0;i<e.length;i++){let n=uH.parse(e[i]);t.push(n)}return t}}class u7 extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=[],s=new lo,o=new u6(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function u(u){o.load(e[u],function(e){let i=r.parse(e,!0);a[u]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(s.minFilter=ex),s.image=a,s.format=i.format,s.needsUpdate=!0,t&&t(s))},i,n)}if(Array.isArray(e))for(let h=0,c=e.length;h<c;++h)u(h);else o.load(e,function(e){let i=r.parse(e,!0);if(i.isCubemap){let n=i.mipmaps.length/i.mipmapCount;for(let o=0;o<n;o++){a[o]={mipmaps:[]};for(let l=0;l<i.mipmapCount;l++)a[o].mipmaps.push(i.mipmaps[o*i.mipmapCount+l]),a[o].format=i.format,a[o].width=i.width,a[o].height=i.height}s.image=a}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=ex),s.format=i.format,s.needsUpdate=!0,t&&t(s)},i,n);return s}}class uj extends uW{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=u3.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s=iB("img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),u3.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}}class uq extends uW{constructor(e){super(e)}load(e,t,i,n){let r=new rk,a=new uj(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(i){a.load(e[i],function(e){r.images[i]=e,6==++s&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let l=0;l<e.length;++l)o(l);return r}}class uX extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new oU,s=new u6(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(e,function(e){let i=r.parse(e);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:ed,a.wrapT=void 0!==i.wrapT?i.wrapT:ed,a.magFilter=void 0!==i.magFilter?i.magFilter:ex,a.minFilter=void 0!==i.minFilter?i.minFilter:ex,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=eb),1===i.mipmapCount&&(a.minFilter=ex),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,t&&t(a,i))},i,n),a}}class uY extends uW{constructor(e){super(e)}load(e,t,i,n){let r=new iO,a=new uj(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},i,n),r}}class uZ extends nU{constructor(e,t=1){super(),this.type="Light",this.color=new nK(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}uZ.prototype.isLight=!0;class uJ extends uZ{constructor(e,t,i){super(e,i),this.type="HemisphereLight",this.position.copy(nU.DefaultUp),this.updateMatrix(),this.groundColor=new nK(t)}copy(e){return uZ.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}uJ.prototype.isHemisphereLight=!0;let uQ=new n$,uK=new iW,u9=new iW;class he{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new iC(512,512),this.map=null,this.mapPass=null,this.matrix=new n$,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new rq,this._frameExtents=new iC(1,1),this._viewportCount=1,this._viewports=[new iH(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;uK.setFromMatrixPosition(e.matrixWorld),t.position.copy(uK),u9.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(u9),t.updateMatrixWorld(),uQ.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(uQ),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ht extends he{constructor(){super(new rG(50,1,.5,500)),this.focus=1}updateMatrices(e){let t=this.camera,i=2*iy*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}ht.prototype.isSpotLightShadow=!0;class hi extends uZ{constructor(e,t,i=0,n=Math.PI/3,r=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(nU.DefaultUp),this.updateMatrix(),this.target=new nU,this.distance=i,this.angle=n,this.penumbra=r,this.decay=a,this.shadow=new ht}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hi.prototype.isSpotLight=!0;let hn=new n$,hr=new iW,ha=new iW;class hs extends he{constructor(){super(new rG(90,1,.5,500)),this._frameExtents=new iC(4,2),this._viewportCount=6,this._viewports=[new iH(2,1,1,1),new iH(0,1,1,1),new iH(3,1,1,1),new iH(1,1,1,1),new iH(3,0,1,1),new iH(1,0,1,1)],this._cubeDirections=[new iW(1,0,0),new iW(-1,0,0),new iW(0,0,1),new iW(0,0,-1),new iW(0,1,0),new iW(0,-1,0)],this._cubeUps=[new iW(0,1,0),new iW(0,1,0),new iW(0,1,0),new iW(0,1,0),new iW(0,0,1),new iW(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),hr.setFromMatrixPosition(e.matrixWorld),i.position.copy(hr),ha.copy(i.position),ha.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(ha),i.updateMatrixWorld(),n.makeTranslation(-hr.x,-hr.y,-hr.z),hn.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hn)}}hs.prototype.isPointLightShadow=!0;class ho extends uZ{constructor(e,t,i=0,n=1){super(e,t),this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new hs}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}ho.prototype.isPointLight=!0;class hl extends he{constructor(){super(new aa(-5,5,5,-5,.5,500))}}hl.prototype.isDirectionalLightShadow=!0;class hu extends uZ{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(nU.DefaultUp),this.updateMatrix(),this.target=new nU,this.shadow=new hl}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hu.prototype.isDirectionalLight=!0;class hh extends uZ{constructor(e,t){super(e,t),this.type="AmbientLight"}}hh.prototype.isAmbientLight=!0;class hc extends uZ{constructor(e,t,i=10,n=10){super(e,t),this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}hc.prototype.isRectAreaLight=!0;class hd{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new iW)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,n=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*n),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],1.092548*(i*n)),t.addScaledVector(a[5],1.092548*(n*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(i*r)),t.addScaledVector(a[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){let i=e.x,n=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*n),t.addScaledVector(a[2],1.023328*r),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*n),t.addScaledVector(a[5],.858086*n*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],.858086*i*r),t.addScaledVector(a[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){let i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}hd.prototype.isSphericalHarmonics3=!0;class hp extends uZ{constructor(e=new hd,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}hp.prototype.isLightProbe=!0;class hf extends uW{constructor(e){super(e),this.textures={}}load(e,t,i,n){let r=this,a=new u6(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let n=new u1[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=e.sheen),void 0!==e.sheenTint&&(n.sheenTint=new nK().setHex(e.sheenTint)),void 0!==e.sheenRoughness&&(n.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.specularIntensity&&(n.specularIntensity=e.specularIntensity),void 0!==e.specularTint&&void 0!==n.specularTint&&n.specularTint.setHex(e.specularTint),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.thickness&&(n.thickness=e.thickness),void 0!==e.attenuationDistance&&(n.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationTint&&void 0!==n.attenuationTint&&n.attenuationTint.setHex(e.attenuationTint),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.shadowSide&&(n.shadowSide=e.shadowSide),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.format&&(n.format=e.format),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.alphaToCoverage&&(n.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(n.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let r in e.uniforms){let a=e.uniforms[r];switch(n.uniforms[r]={},a.type){case"t":n.uniforms[r].value=i(a.value);break;case"c":n.uniforms[r].value=new nK().setHex(a.value);break;case"v2":n.uniforms[r].value=new iC().fromArray(a.value);break;case"v3":n.uniforms[r].value=new iW().fromArray(a.value);break;case"v4":n.uniforms[r].value=new iH().fromArray(a.value);break;case"m3":n.uniforms[r].value=new iP().fromArray(a.value);break;case"m4":n.uniforms[r].value=new n$().fromArray(a.value);break;default:n.uniforms[r].value=a.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(let s in e.extensions)n.extensions[s]=e.extensions[s];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),n.normalScale=new iC().fromArray(o)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(n.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularTintMap&&(n.specularTintMap=i(e.specularTintMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=new iC().fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(n.thicknessMap=i(e.thicknessMap)),n}setTextures(e){return this.textures=e,this}}class hm{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.substr(0,t+1)}}class hg extends ry{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}hg.prototype.isInstancedBufferGeometry=!0;class h$ extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new u6(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t={},i={};function n(e,n){if(void 0!==t[n])return t[n];let r=e.interleavedBuffers,a=r[n],s=function(e,t){if(void 0!==i[t])return i[t];let n=e.arrayBuffers,r=n[t],a=new Uint32Array(r).buffer;return i[t]=a,a}(e,a.buffer),o=iF(a.type,s),l=new op(o,a.stride);return l.uuid=a.uuid,t[n]=l,l}let r=e.isInstancedBufferGeometry?new hg:new ry,a=e.data.index;if(void 0!==a){let s=iF(a.type,a.array);r.setIndex(new ri(s,1))}let o=e.data.attributes;for(let l in o){let u=o[l],h;if(u.isInterleavedBufferAttribute){let c=n(e.data,u.data);h=new om(c,u.itemSize,u.offset,u.normalized)}else{let d=iF(u.type,u.array),p=u.isInstancedBufferAttribute?oG:ri;h=new p(d,u.itemSize,u.normalized)}void 0!==u.name&&(h.name=u.name),void 0!==u.usage&&h.setUsage(u.usage),void 0!==u.updateRange&&(h.updateRange.offset=u.updateRange.offset,h.updateRange.count=u.updateRange.count),r.setAttribute(l,h)}let f=e.data.morphAttributes;if(f)for(let m in f){let g=f[m],$=[];for(let v=0,x=g.length;v<x;v++){let y=g[v],b;if(y.isInterleavedBufferAttribute){let w=n(e.data,y.data);b=new om(w,y.itemSize,y.offset,y.normalized)}else{let _=iF(y.type,y.array);b=new ri(_,y.itemSize,y.normalized)}void 0!==y.name&&(b.name=y.name),$.push(b)}r.morphAttributes[m]=$}let S=e.data.morphTargetsRelative;S&&(r.morphTargetsRelative=!0);let M=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==M)for(let T=0,E=M.length;T!==E;++T){let A=M[T];r.addGroup(A.start,A.count,A.materialIndex)}let L=e.data.boundingSphere;if(void 0!==L){let R=new iW;void 0!==L.center&&R.fromArray(L.center),r.boundingSphere=new nl(R,L.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class hv extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=""===this.path?hm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new u6(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){let a=null;try{a=JSON.parse(i)}catch(s){void 0!==n&&n(s),console.error("THREE:ObjectLoader: Can't parse "+e+".",s.message);return}let o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(a,t)},i,n)}async loadAsync(e,t){let i=""===this.path?hm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;let n=new u6(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);let r=await n.loadAsync(e,t),a=JSON.parse(r),s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){let i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,r,o,s,i),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),void 0!==t){let h=!1;for(let c in a)if(a[c]instanceof HTMLImageElement){h=!0;break}!1===h&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),s=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,n,s,a,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){let r=new lU().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){let i={},n={};if(t.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==e)for(let r=0,a=e.length;r<a;r++){let s=new oH().fromJSON(e[r],n);i[s.uuid]=s}return i}parseGeometries(e,t){let i={};if(void 0!==e){let n=new h$;for(let r=0,a=e.length;r<a;r++){let s,o=e[r];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":s=n.parse(o);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:o.type in u8?s=u8[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),i[o.uuid]=s}}return i}parseMaterials(e,t){let i={},n={};if(void 0!==e){let r=new hf;r.setTextures(t);for(let a=0,s=e.length;a<s;a++){let o=e[a];if("MultiMaterial"===o.type){let l=[];for(let u=0;u<o.materials.length;u++){let h=o.materials[u];void 0===i[h.uuid]&&(i[h.uuid]=r.parse(h)),l.push(i[h.uuid])}n[o.uuid]=l}else void 0===i[o.uuid]&&(i[o.uuid]=r.parse(o)),n[o.uuid]=i[o.uuid]}}return n}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let n=e[i],r=uH.parse(n);t[r.uuid]=r}return t}parseImages(e,t){let i=this,n={},r;function a(e){if("string"==typeof e){var t;let n=e,a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:i.resourcePath+n;return t=a,i.manager.itemStart(t),r.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}return e.data?{data:iF(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let s=new uk(t);(r=new uj(s)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let u=e[o],h=u.url;if(Array.isArray(h)){n[u.uuid]=[];for(let c=0,d=h.length;c<d;c++){let p=h[c],f=a(p);null!==f&&(f instanceof HTMLImageElement?n[u.uuid].push(f):n[u.uuid].push(new oU(f.data,f.width,f.height)))}}else{let m=a(u.url);null!==m&&(n[u.uuid]=m)}}}return n}async parseImagesAsync(e){let t=this,i={},n;async function r(e){if("string"==typeof e){let i=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:t.resourcePath+i;return await n.loadAsync(r)}return e.data?{data:iF(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(n=new uj(this.manager)).setCrossOrigin(this.crossOrigin);for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let u=0,h=l.length;u<h;u++){let c=l[u],d=await r(c);null!==d&&(d instanceof HTMLImageElement?i[o.uuid].push(d):i[o.uuid].push(new oU(d.data,d.width,d.height)))}}else{let p=await r(o.url);null!==p&&(i[o.uuid]=p)}}}return i}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let n={};if(void 0!==e)for(let r=0,a=e.length;r<a;r++){let s=e[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let o,l=t[s.image];Array.isArray(l)?(o=new rk(l),6===l.length&&(o.needsUpdate=!0)):(o=l&&l.data?new oU(l.data,l.width,l.height):new iO(l),l&&(o.needsUpdate=!0)),o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=i(s.mapping,hx)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=i(s.wrap[0],hy),o.wrapT=i(s.wrap[1],hy)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=i(s.minFilter,h8)),void 0!==s.magFilter&&(o.magFilter=i(s.magFilter,h8)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),n[s.uuid]=o}return n}parseObject(e,t,i,n,r){let a;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===i[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(i[a])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}function l(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),n[e]}let u,h;switch(e.type){case"Scene":a=new od,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new nK(e.background):a.background=l(e.background)),void 0!==e.environment&&(a.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new oc(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new oh(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new rG(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new aa(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new hh(e.color,e.intensity);break;case"DirectionalLight":a=new hu(e.color,e.intensity);break;case"PointLight":a=new ho(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new hc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new hi(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new uJ(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new hp().fromJSON(e);break;case"SkinnedMesh":u=s(e.geometry),h=o(e.material),a=new oz(u,h),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":u=s(e.geometry),h=o(e.material),a=new rF(u,h);break;case"InstancedMesh":u=s(e.geometry),h=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(a=new o4(u,h,c)).instanceMatrix=new oG(new Float32Array(d.array),16),void 0!==p&&(a.instanceColor=new oG(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new oC;break;case"Line":a=new oY(s(e.geometry),o(e.material));break;case"LineLoop":a=new oK(s(e.geometry),o(e.material));break;case"LineSegments":a=new oQ(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":a=new lr(s(e.geometry),o(e.material));break;case"Sprite":a=new oL(o(e.material));break;case"Group":a=new on;break;case"Bone":a=new oN;break;default:a=new nU}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)a.add(this.parseObject(f[m],t,i,n,r))}if(void 0!==e.animations){let g=e.animations;for(let $=0;$<g.length;$++){let v=g[$];a.animations.push(r[v])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);let x=e.levels;for(let y=0;y<x.length;y++){let b=x[y],w=a.getObjectByProperty("uuid",b.object);void 0!==w&&a.addLevel(w,b.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}let hx={UVMapping:er,CubeReflectionMapping:ea,CubeRefractionMapping:es,EquirectangularReflectionMapping:eo,EquirectangularRefractionMapping:el,CubeUVReflectionMapping:eu,CubeUVRefractionMapping:eh},hy={RepeatWrapping:ec,ClampToEdgeWrapping:ed,MirroredRepeatWrapping:ep},h8={NearestFilter:ef,NearestMipmapNearestFilter:em,NearestMipmapLinearFilter:e$,LinearFilter:ex,LinearMipmapNearestFilter:ey,LinearMipmapLinearFilter:eb};class hb extends uW{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=u3.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(i){u3.add(e,i),t&&t(i),r.manager.itemEnd(e)}).catch(function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}hb.prototype.isImageBitmapLoader=!0;let hw,h_={getContext:function(){return void 0===hw&&(hw=new(window.AudioContext||window.webkitAudioContext)),hw},setContext:function(e){hw=e}};class hS extends uW{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new u6(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{let a=i.slice(0),s=h_.getContext();s.decodeAudioData(a,function(e){t(e)})}catch(o){n?n(o):console.error(o),r.manager.itemError(e)}},i,n)}}class hM extends hp{constructor(e,t,i=1){super(void 0,i);let n=new nK().set(e),r=new nK().set(t),a=new iW(n.r,n.g,n.b),s=new iW(r.r,r.g,r.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(o*Math.sqrt(.75))}}hM.prototype.isHemisphereLightProbe=!0;class hT extends hp{constructor(e,t=1){super(void 0,t);let i=new nK().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}hT.prototype.isAmbientLightProbe=!0;let hE=new n$,hA=new n$;class hL{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rG,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rG,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,i=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;let n=e.projectionMatrix.clone(),r=t.eyeSep/2,a=r*t.near/t.focus,s=t.near*Math.tan(ix*t.fov*.5)/t.zoom,o,l;hA.elements[12]=-r,hE.elements[12]=r,o=-s*t.aspect+a,l=s*t.aspect+a,n.elements[0]=2*t.near/(l-o),n.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(n),o=-s*t.aspect-a,l=s*t.aspect-a,n.elements[0]=2*t.near/(l-o),n.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(hA),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(hE)}}class h1{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=hR(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=hR();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function hR(){return("undefined"==typeof performance?Date:performance).now()}let h0=new iW,hC=new iV,hP=new iW,hD=new iW;class hI extends nU{constructor(){super(),this.type="AudioListener",this.context=h_.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new h1}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(h0,hC,hP),hD.set(0,0,-1).applyQuaternion(hC),t.positionX){let n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(h0.x,n),t.positionY.linearRampToValueAtTime(h0.y,n),t.positionZ.linearRampToValueAtTime(h0.z,n),t.forwardX.linearRampToValueAtTime(hD.x,n),t.forwardY.linearRampToValueAtTime(hD.y,n),t.forwardZ.linearRampToValueAtTime(hD.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(h0.x,h0.y,h0.z),t.setOrientation(hD.x,hD.y,hD.z,i.x,i.y,i.z)}}class hF extends nU{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let hB=new iW,hz=new iV,hN=new iW,hU=new iW;class hO extends hF{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(hB,hz,hN),hU.set(0,0,1).applyQuaternion(hz);let t=this.panner;if(t.positionX){let i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(hB.x,i),t.positionY.linearRampToValueAtTime(hB.y,i),t.positionZ.linearRampToValueAtTime(hB.z,i),t.orientationX.linearRampToValueAtTime(hU.x,i),t.orientationY.linearRampToValueAtTime(hU.y,i),t.orientationZ.linearRampToValueAtTime(hU.z,i)}else t.setPosition(hB.x,hB.y,hB.z),t.setOrientation(hU.x,hU.y,hU.z)}}class h2{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class hH{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,a;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,n=this.valueSize,r=e*n+n,a=this.cumulativeWeight;if(0===a){for(let s=0;s!==n;++s)i[r+s]=i[s];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(i,r,0,o,n)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let o=t*this._origIndex;this._mixBufferRegion(i,n,o,1-r,t)}a>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,u=t+t;l!==u;++l)if(i[l]!==i[l+t]){s.setValue(i,n);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,a=n;r!==a;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let a=0;a!==r;++a)e[t+a]=e[i+a]}_slerp(e,t,i,n){iV.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){let a=this._workIndex*r;iV.multiplyQuaternionsFlat(e,a,e,t,e,i),iV.slerpFlat(e,t,e,t,e,a,n)}_lerp(e,t,i,n,r){let a=1-n;for(let s=0;s!==r;++s){let o=t+s;e[o]=e[o]*a+e[i+s]*n}}_lerpAdditive(e,t,i,n,r){for(let a=0;a!==r;++a){let s=t+a;e[s]=e[s]+e[i+a]*n}}}let hG="\\[\\]\\.:\\/",h3=RegExp("["+hG+"]","g"),hk="[^"+hG+"]",hV="[^"+hG.replace("\\.","")+"]",hW=/((?:WC+[\/:])*)/.source.replace("WC",hk),h4=/(WCOD+)?/.source.replace("WCOD",hV),h6=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hk),h5=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hk),h7=RegExp("^"+hW+h4+h6+h5+"$"),hj=["material","materials","bones"];class hq{constructor(e,t,i){this.path=t,this.parsedPath=i||hq.parseTrackName(t),this.node=hq.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new hq.Composite(e,t,i):new hq(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(h3,"")}static parseTrackName(e){let t=h7.exec(e);if(!t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let r=i.nodeName.substring(n+1);-1!==hj.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let n=function(e){for(let i=0;i<e.length;i++){let r=e[i];if(r.name===t||r.uuid===t)return r;let a=n(r.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=hq.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let a=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let s=0;s<e.length;s++)if(e[s].name===a){a=s;break}break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==a){if(void 0===e[a]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}let o=e[n];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",e);return}let u=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][u]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}hq.Composite=class{constructor(e,t,i){let n=i||hq.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},hq.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},hq.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},hq.prototype.GetterByBindingType=[hq.prototype._getValue_direct,hq.prototype._getValue_array,hq.prototype._getValue_arrayElement,hq.prototype._getValue_toArray,],hq.prototype.SetterByBindingTypeAndVersioning=[[hq.prototype._setValue_direct,hq.prototype._setValue_direct_setNeedsUpdate,hq.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[hq.prototype._setValue_array,hq.prototype._setValue_array_setNeedsUpdate,hq.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[hq.prototype._setValue_arrayElement,hq.prototype._setValue_arrayElement_setNeedsUpdate,hq.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[hq.prototype._setValue_fromArray,hq.prototype._setValue_fromArray_setNeedsUpdate,hq.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class hX{constructor(){this.uuid=i_(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,a=r.length,s,o=e.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){let c=arguments[u],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0,m=a;f!==m;++f)r[f].push(new hq(c,i[f],n[f]))}else if(p<l){s=e[p];let g=--l,$=e[g];t[$.uuid]=p,e[p]=$,t[d]=g,e[g]=c;for(let v=0,x=a;v!==x;++v){let y=r[v],b=y[g],w=y[p];y[p]=b,void 0===w&&(w=new hq(c,i[v],n[v])),y[g]=w}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let o=arguments[a],l=o.uuid,u=t[l];if(void 0!==u&&u>=r){let h=r++,c=e[h];t[c.uuid]=u,e[u]=c,t[l]=h,e[h]=o;for(let d=0,p=n;d!==p;++d){let f=i[d],m=f[h],g=f[u];f[u]=m,f[h]=g}}}this.nCachedObjects_=r}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let l=arguments[s],u=l.uuid,h=t[u];if(void 0!==h){if(delete t[u],h<r){let c=--r,d=e[c],p=--a,f=e[p];t[d.uuid]=h,e[h]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0,g=n;m!==g;++m){let $=i[m],v=$[c],x=$[p];$[h]=v,$[c]=x,$.pop()}}else{let y=--a,b=e[y];y>0&&(t[b.uuid]=h),e[h]=b,e.pop();for(let w=0,_=n;w!==_;++w){let S=i[w];S[h]=S[y],S.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){let i=this._bindingsIndicesByPath,n=i[e],r=this._bindings;if(void 0!==n)return r[n];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,h=Array(l);n=r.length,i[e]=n,a.push(e),s.push(t),r.push(h);for(let c=u,d=o.length;c!==d;++c){let p=o[c];h[c]=new hq(p,e,t)}return h}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let n=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=i,a[i]=o,a.pop(),r[i]=r[s],r.pop(),n[i]=n[s],n.pop()}}}hX.prototype.isAnimationObjectGroup=!0;class hY{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;let r=t.tracks,a=r.length,s=Array(a),o={endingStart:tR,endingEnd:tR};for(let l=0;l!==a;++l){let u=r[l].createInterpolant(null);s[l]=u,u.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=tT,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let n=this._clip.duration,r=e._clip.duration;e.warp(1,r/n,t),this.warp(n/r,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let n=this._mixer,r=n.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+i,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}let r=this._startTime;if(null!==r){let a=(e-r)*i;if(a<0||0===i)return;this._startTime=null,t=i*a}t*=this._updateTimeScale(e);let s=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,u=this._propertyBindings;if(this.blendMode===tD)for(let h=0,c=l.length;h!==c;++h)l[h].evaluate(s),u[h].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(s),u[d].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,n=this.time+e,r=this._loopCount,a=i===tE;if(0===e)return -1===r?n:a&&(1&r)==1?t-n:n;if(i===tM){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),n>=t||n<0){let s=Math.floor(n/t);n-=t*s,r+=Math.abs(s);let o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=n;if(a&&(1&r)==1)return t-n}return n}_setEndings(e,t,i){let n=this._interpolantSettings;i?(n.endingStart=t0,n.endingEnd=t0):(e?n.endingStart=this.zeroSlopeAtStart?t0:tR:n.endingStart=tC,t?n.endingEnd=this.zeroSlopeAtEnd?t0:tR:n.endingEnd=tC)}_scheduleFading(e,t,i){let n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=t,s[1]=r+e,o[1]=i,this}}class hZ extends i${constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,a=e._propertyBindings,s=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,u=l[o];void 0===u&&(u={},l[o]=u);for(let h=0;h!==r;++h){let c=n[h],d=c.name,p=u[d];if(void 0!==p)a[h]=p;else{if(void 0!==(p=a[h])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[h].binding.parsedPath;p=new hH(hq.create(i,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),a[h]=p}s[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}let r=e._propertyBindings;for(let a=0,s=r.length;a!==s;++a){let o=r[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let n=this._actions,r=this._actionsByClip,a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{let s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=n.length,n.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null;let h=s.actionByRoot,c=(e._localRoot||this._root).uuid;delete h[c],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){let n=this._bindingsByRootAndName,r=this._bindings,a=n[t];void 0===a&&(a={},n[t]=a),a[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,s=a[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[r],0===Object.keys(s).length&&delete a[n]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new uP(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){let n=t||this._root,r=n.uuid,a="string"==typeof e?uH.findByName(n,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===i&&(i=null!==a?a.blendMode:tP),void 0!==o){let u=o.actionByRoot[r];if(void 0!==u&&u.blendMode===i)return u;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let h=new hY(this,a,t,i);return this._bindAction(h,l),this._addInactiveAction(h,s,r),h}existingAction(e,t){let i=t||this._root,n=i.uuid,r="string"==typeof e?uH.findByName(i,e):e,a=r?r.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[n]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==i;++s){let o=t[s];o._update(n,e,r,a)}let l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){let a=r.knownActions;for(let s=0,o=a.length;s!==o;++s){let l=a[s];this._deactivateAction(l);let u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let n in i){let r=i[n].actionByRoot,a=r[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName,o=s[t];if(void 0!==o)for(let l in o){let u=o[l];u.restoreOriginalState(),this._removeInactiveBinding(u)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}hZ.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class hJ{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new hJ(void 0===this.value.clone?this.value:this.value.clone())}}class hQ extends op{constructor(e,t,i=1){super(e,t),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}hQ.prototype.isInstancedInterleavedBuffer=!0;class hK{constructor(e,t,i,n,r){this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}hK.prototype.isGLBufferAttribute=!0;class h9{constructor(e,t,i=0,n=1/0){this.ray=new ng(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new nE,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return ct(e,this,i,t),i.sort(ce),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)ct(e[n],this,i,t);return i.sort(ce),i}}function ce(e,t){return e.distance-t.distance}function ct(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){let r=e.children;for(let a=0,s=r.length;a<s;a++)ct(r[a],t,i,!0)}}class ci{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(iS(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class cn{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}let cr=new iC;class ca{constructor(e=new iC(Infinity,Infinity),t=new iC(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=cr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=cr.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}ca.prototype.isBox2=!0;let cs=new iW,co=new iW;class cl{constructor(e=new iW,t=new iW){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){cs.subVectors(e,this.start),co.subVectors(this.end,this.start);let i=co.dot(co),n=co.dot(cs),r=n/i;return t&&(r=iS(r,0,1)),r}closestPointToPoint(e,t,i){let n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class cu extends nU{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}cu.prototype.isImmediateRenderObject=!0;let ch=new iW;class cc extends nU{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let i=new ry,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1;r<32;r++,a++){let s=r/32*Math.PI*2,o=a/32*Math.PI*2;n.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}i.setAttribute("position",new rc(n,3));let l=new o6({fog:!1,toneMapped:!1});this.cone=new oQ(i,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),ch.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ch),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let cd=new iW,cp=new n$,cf=new n$;class cm extends oQ{constructor(e){let t=function e(t){let i=[];t&&t.isBone&&i.push(t);for(let n=0;n<t.children.length;n++)i.push.apply(i,e(t.children[n]));return i}(e),i=new ry,n=[],r=[],a=new nK(0,0,1),s=new nK(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}i.setAttribute("position",new rc(n,3)),i.setAttribute("color",new rc(r,3));let u=new o6({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,u),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,n=i.getAttribute("position");cf.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){let s=t[r];s.parent&&s.parent.isBone&&(cp.multiplyMatrices(cf,s.matrixWorld),cd.setFromMatrixPosition(cp),n.setXYZ(a,cd.x,cd.y,cd.z),cp.multiplyMatrices(cf,s.parent.matrixWorld),cd.setFromMatrixPosition(cp),n.setXYZ(a+1,cd.x,cd.y,cd.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class cg extends rF{constructor(e,t,i){let n=new uf(t,4,2),r=new n9({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let c$=new iW,cv=new nK,cx=new nK;class cy extends nU{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let n=new uc(t);n.rotateY(.5*Math.PI),this.material=new n9({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.setAttribute("color",new ri(a,3)),this.add(new rF(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");cv.copy(this.light.color),cx.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){let r=i<n/2?cv:cx;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(c$.setFromMatrixPosition(this.light.matrixWorld).negate())}}class c8 extends oQ{constructor(e=10,t=10,i=4473924,n=8947848){i=new nK(i),n=new nK(n);let r=t/2,a=e/t,s=e/2,o=[],l=[];for(let u=0,h=0,c=-s;u<=t;u++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let d=u===r?i:n;d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3}let p=new ry;p.setAttribute("position",new rc(o,3)),p.setAttribute("color",new rc(l,3));let f=new o6({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}}class cb extends oQ{constructor(e=10,t=16,i=8,n=64,r=4473924,a=8947848){r=new nK(r),a=new nK(a);let s=[],o=[];for(let l=0;l<=t;l++){let u=l/t*(2*Math.PI),h=Math.sin(u)*e,c=Math.cos(u)*e;s.push(0,0,0),s.push(h,0,c);let d=1&l?r:a;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<=i;p++){let f=1&p?r:a,m=e-e/i*p;for(let g=0;g<n;g++){let $=g/n*(2*Math.PI),v=Math.sin($)*m,x=Math.cos($)*m;s.push(v,0,x),o.push(f.r,f.g,f.b),v=Math.sin($=(g+1)/n*(2*Math.PI))*m,x=Math.cos($)*m,s.push(v,0,x),o.push(f.r,f.g,f.b)}}let y=new ry;y.setAttribute("position",new rc(s,3)),y.setAttribute("color",new rc(o,3));let b=new o6({vertexColors:!0,toneMapped:!1});super(y,b),this.type="PolarGridHelper"}}let cw=new iW,c_=new iW,cS=new iW;class cM extends nU{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let n=new ry;n.setAttribute("position",new rc([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let r=new o6({fog:!1,toneMapped:!1});this.lightPlane=new oY(n,r),this.add(this.lightPlane),(n=new ry).setAttribute("position",new rc([0,0,0,0,0,1],3)),this.targetLine=new oY(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cw.setFromMatrixPosition(this.light.matrixWorld),c_.setFromMatrixPosition(this.light.target.matrixWorld),cS.subVectors(c_,cw),this.lightPlane.lookAt(c_),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(c_),this.targetLine.scale.z=cS.length()}}let cT=new iW,cE=new rH;class cA extends oQ{constructor(e){let t=new ry,i=new o6({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],a={},s=new nK(16755200),o=new nK(16711680),l=new nK(43775),u=new nK(16777215),h=new nK(3355443);function c(e,t,i){d(e,i),d(t,i)}function d(e,t){n.push(0,0,0),r.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(n.length/3-1)}c("n1","n2",s),c("n2","n4",s),c("n4","n3",s),c("n3","n1",s),c("f1","f2",s),c("f2","f4",s),c("f4","f3",s),c("f3","f1",s),c("n1","f1",s),c("n2","f2",s),c("n3","f3",s),c("n4","f4",s),c("p","n1",o),c("p","n2",o),c("p","n3",o),c("p","n4",o),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l),c("c","t",u),c("p","c",h),c("cn1","cn2",h),c("cn3","cn4",h),c("cf1","cf2",h),c("cf3","cf4",h),t.setAttribute("position",new rc(n,3)),t.setAttribute("color",new rc(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){let e=this.geometry,t=this.pointMap;cE.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),cL("c",t,e,cE,0,0,-1),cL("t",t,e,cE,0,0,1),cL("n1",t,e,cE,-1,-1,-1),cL("n2",t,e,cE,1,-1,-1),cL("n3",t,e,cE,-1,1,-1),cL("n4",t,e,cE,1,1,-1),cL("f1",t,e,cE,-1,-1,1),cL("f2",t,e,cE,1,-1,1),cL("f3",t,e,cE,-1,1,1),cL("f4",t,e,cE,1,1,1),cL("u1",t,e,cE,.7,1.1,-1),cL("u2",t,e,cE,-.7,1.1,-1),cL("u3",t,e,cE,0,2,-1),cL("cf1",t,e,cE,-1,0,1),cL("cf2",t,e,cE,1,0,1),cL("cf3",t,e,cE,0,-1,1),cL("cf4",t,e,cE,0,1,1),cL("cn1",t,e,cE,-1,0,-1),cL("cn2",t,e,cE,1,0,-1),cL("cn3",t,e,cE,0,-1,-1),cL("cn4",t,e,cE,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cL(e,t,i,n,r,a,s){cT.set(r,a,s).unproject(n);let o=t[e];if(void 0!==o){let l=i.getAttribute("position");for(let u=0,h=o.length;u<h;u++)l.setXYZ(o[u],cT.x,cT.y,cT.z)}}let c1=new i5;class cR extends oQ{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new ry;r.setIndex(new ri(i,1)),r.setAttribute("position",new ri(n,3)),super(r,new o6({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&c1.setFromObject(this.object),c1.isEmpty())return;let t=c1.min,i=c1.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return oQ.prototype.copy.call(this,e),this.object=e.object,this}}class c0 extends oQ{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new ry;n.setIndex(new ri(i,1)),n.setAttribute("position",new rc([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new o6({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cC extends oY{constructor(e,t=1,i=16776960){let n=i,r=new ry;r.setAttribute("position",new rc([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new o6({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let a=new ry;a.setAttribute("position",new rc([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new rF(a,new n9({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}let cP=new iW,cD,cI;class cF extends nU{constructor(e=new iW(0,0,1),t=new iW(0,0,0),i=1,n=16776960,r=.2*i,a=.2*r){super(),this.type="ArrowHelper",void 0===cD&&((cD=new ry).setAttribute("position",new rc([0,0,0,0,1,0],3)),(cI=new lc(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oY(cD,new o6({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rF(cI,new n9({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cP.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(cP,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class cB extends oQ{constructor(e=1){let t=new ry;t.setAttribute("position",new rc([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new rc([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let i=new o6({vertexColors:!0,toneMapped:!1});super(t,i),this.type="AxesHelper"}setColors(e,t,i){let n=new nK,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cz{constructor(){this.type="ShapePath",this.color=new nK,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new lN,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,a){return this.currentPath.bezierCurveTo(e,t,i,n,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function i(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i],a=new lU;a.curves=r.curves,t.push(a)}return t}function n(e,t){let i=t.length,n=!1;for(let r=i-1,a=0;a<i;r=a++){let s=t[r],o=t[a],l=o.x-s.x,u=o.y-s.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(s=t[a],l=-l,o=t[r],u=-u),e.y<s.y||e.y>o.y)continue;if(e.y===s.y){if(e.x===s.x)return!0}else{let h=u*(e.x-s.x)-l*(e.y-s.y);if(0===h)return!0;if(h<0)continue;n=!n}}else{if(e.y!==s.y)continue;if(o.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=o.x)return!0}}return n}let r=ur.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return i(a);let s,o,l,u=[];if(1===a.length)return o=a[0],(l=new lU).curves=o.curves,u.push(l),u;let h=!r(a[0].getPoints());h=e?!h:h;let c=[],d=[],p=[],f=0,m;d[f]=void 0,p[f]=[];for(let g=0,$=a.length;g<$;g++)s=r(m=(o=a[g]).getPoints()),(s=e?!s:s)?(!h&&d[f]&&f++,d[f]={s:new lU,p:m},d[f].s.curves=o.curves,h&&f++,p[f]=[]):p[f].push({h:o,p:m[0]});if(!d[0])return i(a);if(d.length>1){let v=!1,x=[];for(let y=0,b=d.length;y<b;y++)c[y]=[];for(let w=0,_=d.length;w<_;w++){let S=p[w];for(let M=0;M<S.length;M++){let T=S[M],E=!0;for(let A=0;A<d.length;A++)n(T.p,d[A].p)&&(w!==A&&x.push({froms:w,tos:A,hole:M}),E?(E=!1,c[A].push(T)):v=!0);E&&c[w].push(T)}}x.length>0&&!v&&(p=c)}let L;for(let R=0,C=d.length;R<C;R++){l=d[R].s,u.push(l),L=p[R];for(let P=0,D=L.length;P<D;P++)l.holes.push(L[P].h)}return u}}let cN=new Float32Array(1),cU=new Int32Array(cN.buffer);class cO{static toHalfFloat(e){e>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),e=65504),cN[0]=e;let t=cU[0],i=t>>16&32768,n=t>>12&2047,r=t>>23&255;return r<103?i:r>142?(i|=31744,i|=(255==r?0:1)&&8388607&t):r<113?(n|=2048,i|=(n>>114-r)+(n>>113-r&1)):(i|=r-112<<10|n>>1,i+=1&n)}}let c2=0,cH=1,cG=0,c3=1,ck=2;function cV(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function cW(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function c4(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new lr(e,t)}function c6(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new oL(e)}function c5(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new lr(e,t)}function c7(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new o9(e)}function cj(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new o9(e)}function cq(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new o9(e)}function cX(e,t,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new iW(e,t,i)}function cY(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new ri(e,t).setUsage(is)}function cZ(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new rn(e,t)}function cJ(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new rr(e,t)}function cQ(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ra(e,t)}function cK(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new rs(e,t)}function c9(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ro(e,t)}function de(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new rl(e,t)}function dt(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ru(e,t)}function di(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new rc(e,t)}function dn(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new rd(e,t)}function dr(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new cB(e)}function da(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new cR(e,t)}function ds(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new oQ(new lx(e.geometry),new o6({color:void 0!==t?t:16777215}))}function dl(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new oQ(new ux(e.geometry),new o6({color:void 0!==t?t:16777215}))}function du(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new u6(e)}function dh(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new uX(e)}function dc(e,t,i){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new rV(e,i)}function dd(){console.error("THREE.CanvasRenderer has been removed")}function dp(){console.error("THREE.JSONLoader has been removed.")}ly.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ly.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},lN.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},c8.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},cm.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},uW.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),hm.extractUrlBase(e)},uW.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},ca.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},ca.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ca.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ca.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},i5.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},i5.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},i5.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},i5.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},i5.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},nl.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},rq.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},cl.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},iP.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},iP.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},iP.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},iP.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},iP.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},iP.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},n$.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},n$.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},n$.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new iW().setFromMatrixColumn(this,3)},n$.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},n$.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},n$.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},n$.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},n$.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},n$.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},n$.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},n$.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},n$.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},n$.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},n$.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},n$.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},n$.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},n$.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},n$.prototype.makeFrustum=function(e,t,i,n,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,i,r,a)},n$.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},r5.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},iV.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},iV.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},ng.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ng.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},ng.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},n5.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},n5.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},n5.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},n5.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},n5.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},n5.barycoordFromPoint=function(e,t,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),n5.getBarycoord(e,t,i,n,r)},n5.normal=function(e,t,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),n5.getNormal(e,t,i,n)},lU.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},lU.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new uo(this,e)},lU.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new up(this,e)},iC.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iC.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},iC.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},iW.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},iW.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},iW.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},iW.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},iW.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},iW.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},iW.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iW.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},iW.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},iH.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},iH.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nU.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},nU.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},nU.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},nU.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},nU.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(nU.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),rF.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(rF.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),tI},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),oz.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},rG.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(uZ.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(ri.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===is},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(is)}}}),ri.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?is:ia),this},ri.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ri.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ry.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},ry.prototype.addAttribute=function(e,t){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute)?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new ri(arguments[1],arguments[2])))},ry.prototype.addDrawCall=function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},ry.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ry.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ry.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},ry.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),op.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?is:ia),this},op.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},uo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},uo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},uo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},od.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},hJ.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(nj.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new nK}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===$}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(r2.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),ol.prototype.clearTarget=function(e,t,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,n)},ol.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},ol.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ol.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ol.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ol.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ol.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ol.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ol.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ol.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ol.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ol.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ol.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ol.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ol.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},ol.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ol.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ol.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ol.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ol.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ol.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ol.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ol.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ol.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ol.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ol.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?tN:tz}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(sK.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(iG.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),hF.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let t=this,i=new hS;return i.load(e,function(e){t.setBuffer(e)}),this},h2.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},r3.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},r3.prototype.clear=function(e,t,i,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,i,n)},iN.crossOrigin=void 0,iN.loadTexture=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let r=new uY;r.setCrossOrigin(this.crossOrigin);let a=r.load(e,i,void 0,n);return t&&(a.mapping=t),a},iN.loadTextureCube=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let r=new uq;r.setCrossOrigin(this.crossOrigin);let a=r.load(e,i,void 0,n);return t&&(a.mapping=t),a},iN.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},iN.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};let df={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function dm(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function dg(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new ry}function d$(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new ry}function dv(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function dx(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)}}]);