"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3737],{2212:function(a,b,c){c.r(b),c.d(b,{ACESFilmicToneMapping:function(){return ac},AddEquation:function(){return z},AddOperation:function(){return Z},AdditiveAnimationBlendMode:function(){return bK},AdditiveBlending:function(){return v},AlphaFormat:function(){return aK},AlwaysDepth:function(){return Q},AlwaysStencilFunc:function(){return cd},AmbientLight:function(){return kv},AmbientLightProbe:function(){return kM},AnimationClip:function(){return j2},AnimationLoader:function(){return ka},AnimationMixer:function(){return lg},AnimationObjectGroup:function(){return le},AnimationUtils:function(){return jR},ArcCurve:function(){return iy},ArrayCamera:function(){return hc},ArrowHelper:function(){return lY},Audio:function(){return kX},AudioAnalyser:function(){return k1},AudioContext:function(){return kJ},AudioListener:function(){return kW},AudioLoader:function(){return kK},AxesHelper:function(){return lZ},AxisHelper:function(){return mq},BackSide:function(){return p},BasicDepthPacking:function(){return bW},BasicShadowMap:function(){return k},BinaryTextureLoader:function(){return mv},Bone:function(){return hP},BooleanKeyframeTrack:function(){return jX},BoundingBoxHelper:function(){return mr},Box2:function(){return lq},Box3:function(){return cZ},Box3Helper:function(){return lT},BoxBufferGeometry:function(){return eN},BoxGeometry:function(){return eN},BoxHelper:function(){return lS},BufferAttribute:function(){return eb},BufferGeometry:function(){return et},BufferGeometryLoader:function(){return kC},ByteType:function(){return az},Cache:function(){return j4},Camera:function(){return eS},CameraHelper:function(){return lP},CanvasRenderer:function(){return mx},CanvasTexture:function(){return ij},CatmullRomCurve3:function(){return iE},CineonToneMapping:function(){return ab},CircleBufferGeometry:function(){return il},CircleGeometry:function(){return il},ClampToEdgeWrapping:function(){return am},Clock:function(){return kQ},Color:function(){return d7},ColorKeyframeTrack:function(){return jY},CompressedTexture:function(){return ii},CompressedTextureLoader:function(){return kb},ConeBufferGeometry:function(){return io},ConeGeometry:function(){return io},CubeCamera:function(){return eU},CubeReflectionMapping:function(){return af},CubeRefractionMapping:function(){return ag},CubeTexture:function(){return eV},CubeTextureLoader:function(){return kd},CubeUVReflectionMapping:function(){return aj},CubeUVRefractionMapping:function(){return ak},CubicBezierCurve:function(){return iI},CubicBezierCurve3:function(){return iJ},CubicInterpolant:function(){return jT},CullFaceBack:function(){return h},CullFaceFront:function(){return i},CullFaceFrontBack:function(){return j},CullFaceNone:function(){return g},Curve:function(){return iw},CurvePath:function(){return iQ},CustomBlending:function(){return y},CustomToneMapping:function(){return ad},CylinderBufferGeometry:function(){return im},CylinderGeometry:function(){return im},Cylindrical:function(){return lo},DataTexture:function(){return hQ},DataTexture2DArray:function(){return fF},DataTexture3D:function(){return fL},DataTextureLoader:function(){return ke},DataUtils:function(){return l1},DecrementStencilOp:function(){return b2},DecrementWrapStencilOp:function(){return b4},DefaultLoadingManager:function(){return j6},DepthFormat:function(){return aQ},DepthStencilFormat:function(){return aR},DepthTexture:function(){return ik},DirectionalLight:function(){return ku},DirectionalLightHelper:function(){return lM},DiscreteInterpolant:function(){return jV},DodecahedronBufferGeometry:function(){return iq},DodecahedronGeometry:function(){return iq},DoubleSide:function(){return q},DstAlphaFactor:function(){return K},DstColorFactor:function(){return M},DynamicBufferAttribute:function(){return mg},DynamicCopyUsage:function(){return cl},DynamicDrawUsage:function(){return cf},DynamicReadUsage:function(){return ci},EdgesGeometry:function(){return iv},EdgesHelper:function(){return ms},EllipseCurve:function(){return ix},EqualDepth:function(){return T},EqualStencilFunc:function(){return b8},EquirectangularReflectionMapping:function(){return ah},EquirectangularRefractionMapping:function(){return ai},Euler:function(){return dA},EventDispatcher:function(){return cp},ExtrudeBufferGeometry:function(){return jq},ExtrudeGeometry:function(){return jq},FaceColors:function(){return l5},FileLoader:function(){return j9},FlatShading:function(){return r},Float16BufferAttribute:function(){return ej},Float32Attribute:function(){return mo},Float32BufferAttribute:function(){return ek},Float64Attribute:function(){return mp},Float64BufferAttribute:function(){return el},FloatType:function(){return aE},Fog:function(){return hl},FogExp2:function(){return hk},Font:function(){return mE},FontLoader:function(){return mD},FrontSide:function(){return o},Frustum:function(){return e1},GLBufferAttribute:function(){return lj},GLSL1:function(){return cn},GLSL3:function(){return co},GammaEncoding:function(){return bQ},GreaterDepth:function(){return V},GreaterEqualDepth:function(){return U},GreaterEqualStencilFunc:function(){return cc},GreaterStencilFunc:function(){return ca},GridHelper:function(){return lH},Group:function(){return hd},HalfFloatType:function(){return aF},HemisphereLight:function(){return kh},HemisphereLightHelper:function(){return lG},HemisphereLightProbe:function(){return kL},IcosahedronBufferGeometry:function(){return jt},IcosahedronGeometry:function(){return jt},ImageBitmapLoader:function(){return kH},ImageLoader:function(){return kc},ImageUtils:function(){return cN},ImmediateRenderObject:function(){return lu},IncrementStencilOp:function(){return b1},IncrementWrapStencilOp:function(){return b3},InstancedBufferAttribute:function(){return hU},InstancedBufferGeometry:function(){return kB},InstancedInterleavedBuffer:function(){return li},InstancedMesh:function(){return hZ},Int16Attribute:function(){return mk},Int16BufferAttribute:function(){return ef},Int32Attribute:function(){return mm},Int32BufferAttribute:function(){return eh},Int8Attribute:function(){return mh},Int8BufferAttribute:function(){return ec},IntType:function(){return aC},InterleavedBuffer:function(){return hn},InterleavedBufferAttribute:function(){return hp},Interpolant:function(){return jS},InterpolateDiscrete:function(){return bD},InterpolateLinear:function(){return bE},InterpolateSmooth:function(){return bF},InvertStencilOp:function(){return b5},JSONLoader:function(){return my},KeepStencilOp:function(){return b_},KeyframeTrack:function(){return jW},LOD:function(){return hI},LatheBufferGeometry:function(){return ju},LatheGeometry:function(){return ju},Layers:function(){return dB},LensFlare:function(){return mA},LessDepth:function(){return R},LessEqualDepth:function(){return S},LessEqualStencilFunc:function(){return b9},LessStencilFunc:function(){return b7},Light:function(){return kg},LightProbe:function(){return ky},Line:function(){return h4},Line3:function(){return lt},LineBasicMaterial:function(){return h$},LineCurve:function(){return iK},LineCurve3:function(){return iL},LineDashedMaterial:function(){return jP},LineLoop:function(){return h8},LinePieces:function(){return l3},LineSegments:function(){return h7},LineStrip:function(){return l2},LinearEncoding:function(){return bO},LinearFilter:function(){return at},LinearInterpolant:function(){return jU},LinearMipMapLinearFilter:function(){return ax},LinearMipMapNearestFilter:function(){return av},LinearMipmapLinearFilter:function(){return aw},LinearMipmapNearestFilter:function(){return au},LinearToneMapping:function(){return _},Loader:function(){return j7},LoaderUtils:function(){return kA},LoadingManager:function(){return j5},LogLuvEncoding:function(){return bS},LoopOnce:function(){return bA},LoopPingPong:function(){return bC},LoopRepeat:function(){return bB},LuminanceAlphaFormat:function(){return aO},LuminanceFormat:function(){return aN},MOUSE:function(){return e},Material:function(){return d0},MaterialLoader:function(){return kz},Math:function(){return cF},MathUtils:function(){return cF},Matrix3:function(){return cH},Matrix4:function(){return dq},MaxEquation:function(){return D},Mesh:function(){return eL},MeshBasicMaterial:function(){return d8},MeshDepthMaterial:function(){return g6},MeshDistanceMaterial:function(){return g7},MeshFaceMaterial:function(){return l7},MeshLambertMaterial:function(){return jN},MeshMatcapMaterial:function(){return jO},MeshNormalMaterial:function(){return jM},MeshPhongMaterial:function(){return jK},MeshPhysicalMaterial:function(){return jJ},MeshStandardMaterial:function(){return jI},MeshToonMaterial:function(){return jL},MinEquation:function(){return C},MirroredRepeatWrapping:function(){return an},MixOperation:function(){return Y},MultiMaterial:function(){return l8},MultiplyBlending:function(){return x},MultiplyOperation:function(){return X},NearestFilter:function(){return ao},NearestMipMapLinearFilter:function(){return as},NearestMipMapNearestFilter:function(){return aq},NearestMipmapLinearFilter:function(){return ar},NearestMipmapNearestFilter:function(){return ap},NeverDepth:function(){return P},NeverStencilFunc:function(){return b6},NoBlending:function(){return t},NoColors:function(){return l4},NoToneMapping:function(){return $},NormalAnimationBlendMode:function(){return bJ},NormalBlending:function(){return u},NotEqualDepth:function(){return W},NotEqualStencilFunc:function(){return cb},NumberKeyframeTrack:function(){return jZ},Object3D:function(){return dP},ObjectLoader:function(){return kD},ObjectSpaceNormalMap:function(){return bZ},OctahedronBufferGeometry:function(){return jv},OctahedronGeometry:function(){return jv},OneFactor:function(){return F},OneMinusDstAlphaFactor:function(){return L},OneMinusDstColorFactor:function(){return N},OneMinusSrcAlphaFactor:function(){return J},OneMinusSrcColorFactor:function(){return H},OrthographicCamera:function(){return fe},PCFShadowMap:function(){return l},PCFSoftShadowMap:function(){return m},PMREMGenerator:function(){return fs},ParametricGeometry:function(){return mB},Particle:function(){return ma},ParticleBasicMaterial:function(){return md},ParticleSystem:function(){return mb},ParticleSystemMaterial:function(){return me},Path:function(){return iR},PerspectiveCamera:function(){return eT},Plane:function(){return e$},PlaneBufferGeometry:function(){return e4},PlaneGeometry:function(){return e4},PlaneHelper:function(){return lU},PointCloud:function(){return l9},PointCloudMaterial:function(){return mc},PointLight:function(){return ks},PointLightHelper:function(){return lC},Points:function(){return ie},PointsMaterial:function(){return h9},PolarGridHelper:function(){return lI},PolyhedronBufferGeometry:function(){return ip},PolyhedronGeometry:function(){return ip},PositionalAudio:function(){return k0},PropertyBinding:function(){return ld},PropertyMixer:function(){return k2},QuadraticBezierCurve:function(){return iM},QuadraticBezierCurve3:function(){return iN},Quaternion:function(){return cV},QuaternionKeyframeTrack:function(){return j_},QuaternionLinearInterpolant:function(){return j$},REVISION:function(){return d},RGBADepthPacking:function(){return bX},RGBAFormat:function(){return aM},RGBAIntegerFormat:function(){return aX},RGBA_ASTC_10x10_Format:function(){return bi},RGBA_ASTC_10x5_Format:function(){return bf},RGBA_ASTC_10x6_Format:function(){return bg},RGBA_ASTC_10x8_Format:function(){return bh},RGBA_ASTC_12x10_Format:function(){return bj},RGBA_ASTC_12x12_Format:function(){return bk},RGBA_ASTC_4x4_Format:function(){return a7},RGBA_ASTC_5x4_Format:function(){return a8},RGBA_ASTC_5x5_Format:function(){return a9},RGBA_ASTC_6x5_Format:function(){return ba},RGBA_ASTC_6x6_Format:function(){return bb},RGBA_ASTC_8x5_Format:function(){return bc},RGBA_ASTC_8x6_Format:function(){return bd},RGBA_ASTC_8x8_Format:function(){return be},RGBA_BPTC_Format:function(){return bl},RGBA_ETC2_EAC_Format:function(){return a6},RGBA_PVRTC_2BPPV1_Format:function(){return a3},RGBA_PVRTC_4BPPV1_Format:function(){return a2},RGBA_S3TC_DXT1_Format:function(){return aZ},RGBA_S3TC_DXT3_Format:function(){return a$},RGBA_S3TC_DXT5_Format:function(){return a_},RGBDEncoding:function(){return bV},RGBEEncoding:function(){return bR},RGBEFormat:function(){return aP},RGBFormat:function(){return aL},RGBIntegerFormat:function(){return aW},RGBM16Encoding:function(){return bU},RGBM7Encoding:function(){return bT},RGB_ETC1_Format:function(){return a4},RGB_ETC2_Format:function(){return a5},RGB_PVRTC_2BPPV1_Format:function(){return a1},RGB_PVRTC_4BPPV1_Format:function(){return a0},RGB_S3TC_DXT1_Format:function(){return aY},RGFormat:function(){return aU},RGIntegerFormat:function(){return aV},RawShaderMaterial:function(){return ff},Ray:function(){return dp},Raycaster:function(){return lk},RectAreaLight:function(){return kw},RedFormat:function(){return aS},RedIntegerFormat:function(){return aT},ReinhardToneMapping:function(){return aa},RepeatWrapping:function(){return al},ReplaceStencilOp:function(){return b0},ReverseSubtractEquation:function(){return B},RingBufferGeometry:function(){return jw},RingGeometry:function(){return jw},SRGB8_ALPHA8_ASTC_10x10_Format:function(){return bx},SRGB8_ALPHA8_ASTC_10x5_Format:function(){return bu},SRGB8_ALPHA8_ASTC_10x6_Format:function(){return bv},SRGB8_ALPHA8_ASTC_10x8_Format:function(){return bw},SRGB8_ALPHA8_ASTC_12x10_Format:function(){return by},SRGB8_ALPHA8_ASTC_12x12_Format:function(){return bz},SRGB8_ALPHA8_ASTC_4x4_Format:function(){return bm},SRGB8_ALPHA8_ASTC_5x4_Format:function(){return bn},SRGB8_ALPHA8_ASTC_5x5_Format:function(){return bo},SRGB8_ALPHA8_ASTC_6x5_Format:function(){return bp},SRGB8_ALPHA8_ASTC_6x6_Format:function(){return bq},SRGB8_ALPHA8_ASTC_8x5_Format:function(){return br},SRGB8_ALPHA8_ASTC_8x6_Format:function(){return bs},SRGB8_ALPHA8_ASTC_8x8_Format:function(){return bt},Scene:function(){return hm},SceneUtils:function(){return mz},ShaderChunk:function(){return e5},ShaderLib:function(){return e7},ShaderMaterial:function(){return eR},ShadowMaterial:function(){return jH},Shape:function(){return iS},ShapeBufferGeometry:function(){return jx},ShapeGeometry:function(){return jx},ShapePath:function(){return l$},ShapeUtils:function(){return jn},ShortType:function(){return aA},Skeleton:function(){return hT},SkeletonHelper:function(){return lA},SkinnedMesh:function(){return hO},SmoothShading:function(){return s},Sphere:function(){return dg},SphereBufferGeometry:function(){return jz},SphereGeometry:function(){return jz},Spherical:function(){return ln},SphericalHarmonics3:function(){return kx},SplineCurve:function(){return iO},SpotLight:function(){return kn},SpotLightHelper:function(){return lw},Sprite:function(){return hE},SpriteMaterial:function(){return hq},SrcAlphaFactor:function(){return I},SrcAlphaSaturateFactor:function(){return O},SrcColorFactor:function(){return G},StaticCopyUsage:function(){return ck},StaticDrawUsage:function(){return ce},StaticReadUsage:function(){return ch},StereoCamera:function(){return kP},StreamCopyUsage:function(){return cm},StreamDrawUsage:function(){return cg},StreamReadUsage:function(){return cj},StringKeyframeTrack:function(){return j0},SubtractEquation:function(){return A},SubtractiveBlending:function(){return w},TOUCH:function(){return f},TangentSpaceNormalMap:function(){return bY},TetrahedronBufferGeometry:function(){return jA},TetrahedronGeometry:function(){return jA},TextGeometry:function(){return mC},Texture:function(){return cP},TextureLoader:function(){return kf},TorusBufferGeometry:function(){return jB},TorusGeometry:function(){return jB},TorusKnotBufferGeometry:function(){return jC},TorusKnotGeometry:function(){return jC},Triangle:function(){return d$},TriangleFanDrawMode:function(){return bN},TriangleStripDrawMode:function(){return bM},TrianglesDrawMode:function(){return bL},TubeBufferGeometry:function(){return jD},TubeGeometry:function(){return jD},UVMapping:function(){return ae},Uint16Attribute:function(){return ml},Uint16BufferAttribute:function(){return eg},Uint32Attribute:function(){return mn},Uint32BufferAttribute:function(){return ei},Uint8Attribute:function(){return mi},Uint8BufferAttribute:function(){return ed},Uint8ClampedAttribute:function(){return mj},Uint8ClampedBufferAttribute:function(){return ee},Uniform:function(){return lh},UniformsLib:function(){return e6},UniformsUtils:function(){return eQ},UnsignedByteType:function(){return ay},UnsignedInt248Type:function(){return aJ},UnsignedIntType:function(){return aD},UnsignedShort4444Type:function(){return aG},UnsignedShort5551Type:function(){return aH},UnsignedShort565Type:function(){return aI},UnsignedShortType:function(){return aB},VSMShadowMap:function(){return n},Vector2:function(){return cG},Vector3:function(){return cW},Vector4:function(){return cR},VectorKeyframeTrack:function(){return j1},Vertex:function(){return mf},VertexColors:function(){return l6},VideoTexture:function(){return ih},WebGL1Renderer:function(){return hj},WebGLCubeRenderTarget:function(){return eW},WebGLMultipleRenderTargets:function(){return cT},WebGLMultisampleRenderTarget:function(){return cU},WebGLRenderTarget:function(){return cS},WebGLRenderTargetCube:function(){return mw},WebGLRenderer:function(){return hi},WebGLUtils:function(){return hb},WireframeGeometry:function(){return jE},WireframeHelper:function(){return mt},WrapAroundEnding:function(){return bI},XHRLoader:function(){return mu},ZeroCurvatureEnding:function(){return bG},ZeroFactor:function(){return E},ZeroSlopeEnding:function(){return bH},ZeroStencilOp:function(){return b$},sRGBEncoding:function(){return bP}});/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let d="133",e={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},f={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},g=0,h=1,i=2,j=3,k=0,l=1,m=2,n=3,o=0,p=1,q=2,r=1,s=2,t=0,u=1,v=2,w=3,x=4,y=5,z=100,A=101,B=102,C=103,D=104,E=200,F=201,G=202,H=203,I=204,J=205,K=206,L=207,M=208,N=209,O=210,P=0,Q=1,R=2,S=3,T=4,U=5,V=6,W=7,X=0,Y=1,Z=2,$=0,_=1,aa=2,ab=3,ac=4,ad=5,ae=300,af=301,ag=302,ah=303,ai=304,aj=306,ak=307,al=1e3,am=1001,an=1002,ao=1003,ap=1004,aq=1004,ar=1005,as=1005,at=1006,au=1007,av=1007,aw=1008,ax=1008,ay=1009,az=1010,aA=1011,aB=1012,aC=1013,aD=1014,aE=1015,aF=1016,aG=1017,aH=1018,aI=1019,aJ=1020,aK=1021,aL=1022,aM=1023,aN=1024,aO=1025,aP=aM,aQ=1026,aR=1027,aS=1028,aT=1029,aU=1030,aV=1031,aW=1032,aX=1033,aY=33776,aZ=33777,a$=33778,a_=33779,a0=35840,a1=35841,a2=35842,a3=35843,a4=36196,a5=37492,a6=37496,a7=37808,a8=37809,a9=37810,ba=37811,bb=37812,bc=37813,bd=37814,be=37815,bf=37816,bg=37817,bh=37818,bi=37819,bj=37820,bk=37821,bl=36492,bm=37840,bn=37841,bo=37842,bp=37843,bq=37844,br=37845,bs=37846,bt=37847,bu=37848,bv=37849,bw=37850,bx=37851,by=37852,bz=37853,bA=2200,bB=2201,bC=2202,bD=2300,bE=2301,bF=2302,bG=2400,bH=2401,bI=2402,bJ=2500,bK=2501,bL=0,bM=1,bN=2,bO=3e3,bP=3001,bQ=3007,bR=3002,bS=3003,bT=3004,bU=3005,bV=3006,bW=3200,bX=3201,bY=0,bZ=1,b$=0,b_=7680,b0=7681,b1=7682,b2=7683,b3=34055,b4=34056,b5=5386,b6=512,b7=513,b8=514,b9=515,ca=516,cb=517,cc=518,cd=519,ce=35044,cf=35048,cg=35040,ch=35045,ci=35049,cj=35041,ck=35046,cl=35050,cm=35042,cn="100",co="300 es";class cp{addEventListener(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)}hasEventListener(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&& -1!==c[a].indexOf(b)}removeEventListener(a,b){if(void 0===this._listeners)return;let c=this._listeners,d=c[a];if(void 0!==d){let e=d.indexOf(b);-1!==e&&d.splice(e,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let e=0,f=d.length;e<f;e++)d[e].call(this,a);a.target=null}}}let cq=1234567,cr=Math.PI/180,cs=180/Math.PI,ct=[];for(let cu=0;cu<256;cu++)ct[cu]=(cu<16?"0":"")+cu.toString(16);let cv="undefined"!=typeof crypto&&"randomUUID"in crypto;function cw(){if(cv)return crypto.randomUUID().toUpperCase();let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=ct[255&a]+ct[a>>8&255]+ct[a>>16&255]+ct[a>>24&255]+"-"+ct[255&b]+ct[b>>8&255]+"-"+ct[b>>16&15|64]+ct[b>>24&255]+"-"+ct[63&c|128]+ct[c>>8&255]+"-"+ct[c>>16&255]+ct[c>>24&255]+ct[255&d]+ct[d>>8&255]+ct[d>>16&255]+ct[d>>24&255];return e.toUpperCase()}function cx(a,b,c){return Math.max(b,Math.min(c,a))}function cy(a,b){return(a%b+b)%b}function cz(a,b,c){return(1-c)*a+c*b}function cA(a){return a*cr}function cB(a){return a*cs}function cC(a){return(a&a-1)==0&&0!==a}function cD(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function cE(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}var cF=Object.freeze({__proto__:null,DEG2RAD:cr,RAD2DEG:cs,generateUUID:cw,clamp:cx,euclideanModulo:cy,mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},inverseLerp:function(a,b,c){return a!==b?(c-a)/(b-a):0},lerp:cz,damp:function(a,b,c,d){return cz(a,b,1-Math.exp(-c*d))},pingpong:function(a,b=1){return b-Math.abs(cy(a,2*b)-b)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*(3-2*a)},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(a){return void 0!==a&&(cq=a%2147483647),((cq=16807*cq%2147483647)-1)/2147483646},degToRad:cA,radToDeg:cB,isPowerOfTwo:cC,ceilPowerOfTwo:cD,floorPowerOfTwo:cE,setQuaternionFromProperEuler:function(a,b,c,d,e){let f=Math.cos,g=Math.sin,h=f(c/2),i=g(c/2),j=f((b+d)/2),k=g((b+d)/2),l=f((b-d)/2),m=g((b-d)/2),n=f((d-b)/2),o=g((d-b)/2);switch(e){case"XYX":a.set(h*k,i*l,i*m,h*j);break;case"YZY":a.set(i*m,h*k,i*l,h*j);break;case"ZXZ":a.set(i*l,i*m,h*k,h*j);break;case"XZX":a.set(h*k,i*o,i*n,h*j);break;case"YXY":a.set(i*n,h*k,i*o,h*j);break;case"ZYZ":a.set(i*o,i*n,h*k,h*j);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}}});class cG{constructor(a=0,b=0){this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}cG.prototype.isVector2=!0;class cH{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=j*f-g*i,l=g*h-j*e,m=i*e-f*h,n=b*k+c*l+d*m;if(0===n)return this.set(0,0,0,0,0,0,0,0,0);let o=1/n;return a[0]=k*o,a[1]=(d*i-j*c)*o,a[2]=(g*c-d*f)*o,a[3]=l*o,a[4]=(j*b-d*h)*o,a[5]=(d*e-g*b)*o,a[6]=m*o,a[7]=(c*h-i*b)*o,a[8]=(f*b-c*e)*o,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);return this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1),this}scale(a,b){let c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=b,c[4]*=b,c[7]*=b,this}rotate(a){let b=Math.cos(a),c=Math.sin(a),d=this.elements,e=d[0],f=d[3],g=d[6],h=d[1],i=d[4],j=d[7];return d[0]=b*e+c*h,d[3]=b*f+c*i,d[6]=b*g+c*j,d[1]=-c*e+b*h,d[4]=-c*f+b*i,d[7]=-c*g+b*j,this}translate(a,b){let c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=b*c[2],c[4]+=b*c[5],c[7]+=b*c[8],this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<9;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}function cI(a){if(0===a.length)return-1/0;let b=a[0];for(let c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}cH.prototype.isMatrix3=!0;let cJ={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function cK(a,b){return new cJ[a](b)}function cL(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}let cM;class cN{static getDataURL(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===cM&&(cM=cL("canvas")),cM.width=a.width,cM.height=a.height;let c=cM.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=cM}return b.width>2048||b.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),b.toDataURL("image/jpeg",.6)):b.toDataURL("image/png")}}let cO=0;class cP extends cp{constructor(a=cP.DEFAULT_IMAGE,b=cP.DEFAULT_MAPPING,c=am,d=am,e=at,f=aw,g=aM,h=ay,i=1,j=bO){super(),Object.defineProperty(this,"id",{value:cO++}),this.uuid=cw(),this.name="",this.image=a,this.mipmaps=[],this.mapping=b,this.wrapS=c,this.wrapT=d,this.magFilter=e,this.minFilter=f,this.anisotropy=i,this.format=g,this.internalFormat=null,this.type=h,this.offset=new cG(0,0),this.repeat=new cG(1,1),this.center=new cG(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new cH,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=j,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.image=a.image,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let d=this.image;if(void 0===d.uuid&&(d.uuid=cw()),!b&& void 0===a.images[d.uuid]){let e;if(Array.isArray(d)){e=[];for(let f=0,g=d.length;f<g;f++)d[f].isDataTexture?e.push(cQ(d[f].image)):e.push(cQ(d[f]))}else e=cQ(d);a.images[d.uuid]={uuid:d.uuid,url:e}}c.image=d.uuid}return b||(a.textures[this.uuid]=c),c}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(this.mapping!==ae)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case al:a.x=a.x-Math.floor(a.x);break;case am:a.x=a.x<0?0:1;break;case an:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case al:a.y=a.y-Math.floor(a.y);break;case am:a.y=a.y<0?0:1;break;case an:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&this.version++}}function cQ(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?cN.getDataURL(a):a.data?{data:Array.prototype.slice.call(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}cP.DEFAULT_IMAGE=void 0,cP.DEFAULT_MAPPING=ae,cP.prototype.isTexture=!0;class cR{constructor(a=0,b=0,c=0,d=1){this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let p=(g+1)/2,q=(k+1)/2,r=(o+1)/2,s=(h+j)/4,t=(i+m)/4,u=(l+n)/4;return p>q&&p>r?p<.01?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(p),d=s/c,e=t/c):q>r?q<.01?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(q),c=s/d,e=u/d):r<.01?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(r),c=t/e,d=u/e),this.set(c,d,e,b),this}let v=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(v)&&(v=1),this.x=(n-l)/v,this.y=(i-m)/v,this.z=(j-h)/v,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}cR.prototype.isVector4=!0;class cS extends cp{constructor(a,b,c={}){super(),this.width=a,this.height=b,this.depth=1,this.scissor=new cR(0,0,a,b),this.scissorTest=!1,this.viewport=new cR(0,0,a,b),this.texture=new cP(void 0,c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:a,height:b,depth:1},this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.internalFormat=void 0!==c.internalFormat?c.internalFormat:null,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:at,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0!==c.stencilBuffer&&c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}setTexture(a){a.image={width:this.width,height:this.height,depth:this.depth},this.texture=a}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}cS.prototype.isWebGLRenderTarget=!0;class cT extends cS{constructor(a,b,c){super(a,b);let d=this.texture;this.texture=[];for(let e=0;e<c;e++)this.texture[e]=d.clone()}setSize(a,b,c=1){if(this.width!==a||this.height!==b||this.depth!==c){this.width=a,this.height=b,this.depth=c;for(let d=0,e=this.texture.length;d<e;d++)this.texture[d].image.width=a,this.texture[d].image.height=b,this.texture[d].image.depth=c;this.dispose()}return this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b),this}copy(a){this.dispose(),this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this.texture.length=0;for(let b=0,c=a.texture.length;b<c;b++)this.texture[b]=a.texture[b].clone();return this}}cT.prototype.isWebGLMultipleRenderTargets=!0;class cU extends cS{constructor(a,b,c){super(a,b,c),this.samples=4}copy(a){return super.copy.call(this,a),this.samples=a.samples,this}}cU.prototype.isWebGLMultisampleRenderTarget=!0;class cV{constructor(a=0,b=0,c=0,d=1){this._x=a,this._y=b,this._z=c,this._w=d}static slerp(a,b,c,d){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),c.slerpQuaternions(a,b,d)}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(0===g){a[b+0]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k;return}if(1===g){a[b+0]=l,a[b+1]=m,a[b+2]=n,a[b+3]=o;return}if(k!==o||h!==l||i!==m||j!==n){let p=1-g,q=h*l+i*m+j*n+k*o,r=q>=0?1:-1,s=1-q*q;if(s>Number.EPSILON){let t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t,g=Math.sin(g*u)/t}let v=g*r;if(h=h*p+l*v,i=i*p+m*v,j=j*p+n*v,k=k*p+o*v,p===1-g){let w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w,i*=w,j*=w,k*=w}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b){if(!(a&&a.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!1!==b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let m=.5/Math.sqrt(l+1);this._w=.25/m,this._x=(j-h)*m,this._y=(e-i)*m,this._z=(f-d)*m}else if(c>g&&c>k){let n=2*Math.sqrt(1+c-g-k);this._w=(j-h)/n,this._x=.25*n,this._y=(d+f)/n,this._z=(e+i)/n}else if(g>k){let o=2*Math.sqrt(1+g-c-k);this._w=(e-i)/o,this._x=(d+f)/o,this._y=.25*o,this._z=(h+j)/o}else{let p=2*Math.sqrt(1+k-c-g);this._w=(f-d)/p,this._x=(e+i)/p,this._y=(h+j)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(cx(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let i=1-b;return this._w=i*f+b*this._w,this._x=i*c+b*this._x,this._y=i*d+b*this._y,this._z=i*e+b*this._z,this.normalize(),this._onChangeCallback(),this}let j=Math.sqrt(h),k=Math.atan2(j,g),l=Math.sin((1-b)*k)/j,m=Math.sin(b*k)/j;return this._w=f*l+this._w*m,this._x=c*l+this._x*m,this._y=d*l+this._y*m,this._z=e*l+this._z*m,this._onChangeCallback(),this}slerpQuaternions(a,b,c){this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}cV.prototype.isQuaternion=!0;class cW{constructor(a=0,b=0,c=0){this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cY.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(cY.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+ -(l*e)+ -(j*g)- -(k*f),this.y=j*h+ -(l*f)+ -(k*e)- -(i*g),this.z=k*h+ -(l*g)+ -(i*f)- -(j*e),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return cX.copy(this).projectOnVector(a),this.sub(cX)}reflect(a){return this.sub(cX.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(cx(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}cW.prototype.isVector3=!0;let cX=new cW,cY=new cV;class cZ{constructor(a=new cW(Infinity,Infinity,Infinity),b=new cW(-1/0,-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.length;h<i;h+=3){let j=a[h],k=a[h+1],l=a[h+2];j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.count;h<i;h++){let j=a.getX(h),k=a.getY(h),l=a.getZ(h);j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=c_.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a){return this.makeEmpty(),this.expandByObject(a)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a){a.updateWorldMatrix(!1,!1);let b=a.geometry;void 0!==b&&(null===b.boundingBox&&b.computeBoundingBox(),c0.copy(b.boundingBox),c0.applyMatrix4(a.matrixWorld),this.union(c0));let c=a.children;for(let d=0,e=c.length;d<e;d++)this.expandByObject(c[d]);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,c_),c_.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<= -a.constant&&c>= -a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(c7),c8.subVectors(this.max,c7),c1.subVectors(a.a,c7),c2.subVectors(a.b,c7),c3.subVectors(a.c,c7),c4.subVectors(c2,c1),c5.subVectors(c3,c2),c6.subVectors(c1,c3);let b=[0,-c4.z,c4.y,0,-c5.z,c5.y,0,-c6.z,c6.y,c4.z,0,-c4.x,c5.z,0,-c5.x,c6.z,0,-c6.x,-c4.y,c4.x,0,-c5.y,c5.x,0,-c6.y,c6.x,0];return!!(db(b,c1,c2,c3,c8)&&db(b=[1,0,0,0,1,0,0,0,1],c1,c2,c3,c8))&&(c9.crossVectors(c4,c5),db(b=[c9.x,c9.y,c9.z],c1,c2,c3,c8))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=c_.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return this.getCenter(a.center),a.radius=.5*this.getSize(c_).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(c$[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),c$[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),c$[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),c$[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),c$[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),c$[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),c$[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),c$[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(c$)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}cZ.prototype.isBox3=!0;let c$=[new cW,new cW,new cW,new cW,new cW,new cW,new cW,new cW],c_=new cW,c0=new cZ,c1=new cW,c2=new cW,c3=new cW,c4=new cW,c5=new cW,c6=new cW,c7=new cW,c8=new cW,c9=new cW,da=new cW;function db(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){da.fromArray(a,f);let h=e.x*Math.abs(da.x)+e.y*Math.abs(da.y)+e.z*Math.abs(da.z),i=b.dot(da),j=c.dot(da),k=d.dot(da);if(Math.max(-Math.max(i,j,k),Math.min(i,j,k))>h)return!1}return!0}let dc=new cZ,dd=new cW,de=new cW,df=new cW;class dg{constructor(a=new cW,b=-1){this.center=a,this.radius=b}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):dc.setFromPoints(a).getCenter(c);let d=0;for(let e=0,f=a.length;e<f;e++)d=Math.max(d,c.distanceToSquared(a[e]));return this.radius=Math.sqrt(d),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return this.isEmpty()?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(a){df.subVectors(a,this.center);let b=df.lengthSq();if(b>this.radius*this.radius){let c=Math.sqrt(b),d=(c-this.radius)*.5;this.center.add(df.multiplyScalar(d/c)),this.radius+=d}return this}union(a){return de.subVectors(a.center,this.center).normalize().multiplyScalar(a.radius),this.expandByPoint(dd.copy(a.center).add(de)),this.expandByPoint(dd.copy(a.center).sub(de)),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let dh=new cW,di=new cW,dj=new cW,dk=new cW,dl=new cW,dm=new cW,dn=new cW;class dp{constructor(a=new cW,b=new cW(0,0,-1)){this.origin=a,this.direction=b}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,dh)),this}closestPointToPoint(a,b){b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.direction).multiplyScalar(c).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=dh.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(dh.copy(this.direction).multiplyScalar(b).add(this.origin),dh.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){di.copy(a).add(b).multiplyScalar(.5),dj.copy(b).sub(a).normalize(),dk.copy(this.origin).sub(di);let e=.5*a.distanceTo(b),f=-this.direction.dot(dj),g=dk.dot(this.direction),h=-dk.dot(dj),i=dk.lengthSq(),j=Math.abs(1-f*f),k,l,m,n;if(j>0){if(k=f*h-g,l=f*g-h,n=e*j,k>=0){if(l>= -n){if(l<=n){let o=1/j;k*=o,l*=o,m=k*(k+f*l+2*g)+l*(f*k+l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=e)+g)))*k+l*(l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=-e)+g)))*k+l*(l+2*h)+i}else l<= -n?(l=(k=Math.max(0,-(-f*e+g)))>0?-e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i):l<=n?(k=0,m=(l=Math.min(Math.max(-e,-h),e))*(l+2*h)+i):(l=(k=Math.max(0,-(f*e+g)))>0?e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i)}else l=f>0?-e:e,k=Math.max(0,-(f*l+g)),m=-k*k+l*(l+2*h)+i;return c&&c.copy(this.direction).multiplyScalar(k).add(this.origin),d&&d.copy(dj).multiplyScalar(l).add(di),m}intersectSphere(a,b){dh.subVectors(a.center,this.origin);let c=dh.dot(this.direction),d=dh.dot(dh)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return g<0&&h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d)?null:((e>c||c!=c)&&(c=e),(f<d||d!=d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d)?null:((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,dh)}intersectTriangle(a,b,c,d,e){dl.subVectors(b,a),dm.subVectors(c,a),dn.crossVectors(dl,dm);let f=this.direction.dot(dn),g;if(f>0){if(d)return null;g=1}else{if(!(f<0))return null;g=-1,f=-f}dk.subVectors(this.origin,a);let h=g*this.direction.dot(dm.crossVectors(dk,dm));if(h<0)return null;let i=g*this.direction.dot(dl.cross(dk));if(i<0||h+i>f)return null;let j=-g*dk.dot(dn);return j<0?null:this.at(j/f,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class dq{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new dq().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}setFromMatrix3(a){let b=a.elements;return this.set(b[0],b[3],b[6],0,b[1],b[4],b[7],0,b[2],b[5],b[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/dr.setFromMatrixColumn(a,0).length(),e=1/dr.setFromMatrixColumn(a,1).length(),f=1/dr.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){let p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){let t=h*j,u=h*k,v=i*j,w=i*k;b[0]=t-w*g,b[4]=-f*k,b[8]=v+u*g,b[1]=u+v*g,b[5]=f*j,b[9]=w-t*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let x=f*j,y=f*k,z=g*j,A=g*k;b[0]=h*j,b[4]=z*i-y,b[8]=x*i+A,b[1]=h*k,b[5]=A*i+x,b[9]=y*i-z,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let B=f*h,C=f*i,D=g*h,E=g*i;b[0]=h*j,b[4]=E-B*k,b[8]=D*k+C,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=C*k+D,b[10]=B-E*k}else if("XZY"===a.order){let F=f*h,G=f*i,H=g*h,I=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=F*k+I,b[5]=f*j,b[9]=G*k-H,b[2]=H*k-G,b[6]=g*j,b[10]=I*k+F}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(dt,a,du)}lookAt(a,b,c){let d=this.elements;return dx.subVectors(a,b),0===dx.lengthSq()&&(dx.z=1),dx.normalize(),dv.crossVectors(c,dx),0===dv.lengthSq()&&(1===Math.abs(c.z)?dx.x+=1e-4:dx.z+=1e-4,dx.normalize(),dv.crossVectors(c,dx)),dv.normalize(),dw.crossVectors(dx,dv),d[0]=dv.x,d[4]=dw.x,d[8]=dx.x,d[1]=dv.y,d[5]=dw.y,d[9]=dx.y,d[2]=dv.z,d[6]=dw.z,d[10]=dx.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,s=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,t=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,u=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,v=b*r+c*s+d*t+e*u;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/v;return a[0]=r*w,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*w,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*w,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*w,a[4]=s*w,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*w,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*w,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*w,a[8]=t*w,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*w,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*w,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*w,a[12]=u*w,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*w,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*w,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*w,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=dr.set(d[0],d[1],d[2]).length(),f=dr.set(d[4],d[5],d[6]).length(),g=dr.set(d[8],d[9],d[10]).length(),h=this.determinant();h<0&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],ds.copy(this);let i=1/e,j=1/f,k=1/g;return ds.elements[0]*=i,ds.elements[1]*=i,ds.elements[2]*=i,ds.elements[4]*=j,ds.elements[5]*=j,ds.elements[6]*=j,ds.elements[8]*=k,ds.elements[9]*=k,ds.elements[10]*=k,b.setFromRotationMatrix(ds),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(c-d),g[9]=(c+d)/(c-d),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this}makeOrthographic(a,b,c,d,e,f){let g=this.elements,h=1/(b-a),i=1/(c-d),j=1/(f-e);return g[0]=2*h,g[4]=0,g[8]=0,g[12]=-((b+a)*h),g[1]=0,g[5]=2*i,g[9]=0,g[13]=-((c+d)*i),g[2]=0,g[6]=0,g[10]=-2*j,g[14]=-((f+e)*j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<16;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}dq.prototype.isMatrix4=!0;let dr=new cW,ds=new dq,dt=new cW(0,0,0),du=new cW(1,1,1),dv=new cW,dw=new cW,dx=new cW,dy=new dq,dz=new cV;class dA{constructor(a=0,b=0,c=0,d=dA.DefaultOrder){this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b=this._order,c=!0){let d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];switch(b){case"XYZ":this._y=Math.asin(cx(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0);break;case"YXZ":this._x=Math.asin(-cx(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0);break;case"ZXY":this._x=Math.asin(cx(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e));break;case"ZYX":this._y=Math.asin(-cx(k,-1,1)),.9999999>Math.abs(k)?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i));break;case"YZX":this._z=Math.asin(cx(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m));break;case"XZY":this._z=Math.asin(-cx(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!0===c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return dy.makeRotationFromQuaternion(a),this.setFromRotationMatrix(dy,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return dz.setFromEuler(this),this.setFromQuaternion(dz,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}toVector3(a){return a?a.set(this._x,this._y,this._z):new cW(this._x,this._y,this._z)}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}dA.prototype.isEuler=!0,dA.DefaultOrder="XYZ",dA.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class dB{constructor(){this.mask=1}set(a){this.mask=1<<a|0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}}let dC=0,dD=new cW,dE=new cV,dF=new dq,dG=new cW,dH=new cW,dI=new cW,dJ=new cV,dK=new cW(1,0,0),dL=new cW(0,1,0),dM=new cW(0,0,1),dN={type:"added"},dO={type:"removed"};class dP extends cp{constructor(){super(),Object.defineProperty(this,"id",{value:dC++}),this.uuid=cw(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dP.DefaultUp.clone();let a=new cW,b=new dA,c=new cV,d=new cW(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new dq},normalMatrix:{value:new cH}}),this.matrix=new dq,this.matrixWorld=new dq,this.matrixAutoUpdate=dP.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new dB,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return dE.setFromAxisAngle(a,b),this.quaternion.multiply(dE),this}rotateOnWorldAxis(a,b){return dE.setFromAxisAngle(a,b),this.quaternion.premultiply(dE),this}rotateX(a){return this.rotateOnAxis(dK,a)}rotateY(a){return this.rotateOnAxis(dL,a)}rotateZ(a){return this.rotateOnAxis(dM,a)}translateOnAxis(a,b){return dD.copy(a).applyQuaternion(this.quaternion),this.position.add(dD.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(dK,a)}translateY(a){return this.translateOnAxis(dL,a)}translateZ(a){return this.translateOnAxis(dM,a)}localToWorld(a){return a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return a.applyMatrix4(dF.copy(this.matrixWorld).invert())}lookAt(a,b,c){a.isVector3?dG.copy(a):dG.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),dH.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?dF.lookAt(dH,dG,this.up):dF.lookAt(dG,dH,this.up),this.quaternion.setFromRotationMatrix(dF),d&&(dF.extractRotation(d.matrixWorld),dE.setFromRotationMatrix(dF),this.quaternion.premultiply(dE.invert()))}add(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(dN)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)}remove(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return -1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(dO)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){for(let a=0;a<this.children.length;a++){let b=this.children[a];b.parent=null,b.dispatchEvent(dO)}return this.children.length=0,this}attach(a){return this.updateWorldMatrix(!0,!1),dF.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),dF.multiply(a.parent.matrixWorld)),a.applyMatrix4(dF),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dH,a,dI),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dH,dJ,a),a}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()}raycast(){}traverse(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)}traverseVisible(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}traverseAncestors(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)}updateWorldMatrix(a,b){let c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].updateWorldMatrix(!1,!0)}}toJSON(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(d.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?d.background=this.background.toJSON():this.background.isTexture&&(d.background=this.background.toJSON(a).uuid)),this.environment&&this.environment.isTexture&&(d.environment=this.environment.toJSON(a).uuid);else if(this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&& void 0!==f.shapes){let g=f.shapes;if(Array.isArray(g))for(let h=0,i=g.length;h<i;h++){let j=g[h];e(a.shapes,j)}else e(a.shapes,g)}}if(this.isSkinnedMesh&&(d.bindMode=this.bindMode,d.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(a.skeletons,this.skeleton),d.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let k=[];for(let l=0,m=this.material.length;l<m;l++)k.push(e(a.materials,this.material[l]));d.material=k}else d.material=e(a.materials,this.material)}if(this.children.length>0){d.children=[];for(let n=0;n<this.children.length;n++)d.children.push(this.children[n].toJSON(a).object)}if(this.animations.length>0){d.animations=[];for(let o=0;o<this.animations.length;o++){let p=this.animations[o];d.animations.push(e(a.animations,p))}}if(b){let q=x(a.geometries),r=x(a.materials),s=x(a.textures),t=x(a.images),u=x(a.shapes),v=x(a.skeletons),w=x(a.animations);q.length>0&&(c.geometries=q),r.length>0&&(c.materials=r),s.length>0&&(c.textures=s),t.length>0&&(c.images=t),u.length>0&&(c.shapes=u),v.length>0&&(c.skeletons=v),w.length>0&&(c.animations=w)}return c.object=d,c;function x(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,b=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let c=0;c<a.children.length;c++){let d=a.children[c];this.add(d.clone())}return this}}dP.DefaultUp=new cW(0,1,0),dP.DefaultMatrixAutoUpdate=!0,dP.prototype.isObject3D=!0;let dQ=new cW,dR=new cW,dS=new cW,dT=new cW,dU=new cW,dV=new cW,dW=new cW,dX=new cW,dY=new cW,dZ=new cW;class d${constructor(a=new cW,b=new cW,c=new cW){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,d){d.subVectors(c,b),dQ.subVectors(a,b),d.cross(dQ);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){dQ.subVectors(d,b),dR.subVectors(c,b),dS.subVectors(a,b);let f=dQ.dot(dQ),g=dQ.dot(dR),h=dQ.dot(dS),i=dR.dot(dR),j=dR.dot(dS),k=f*i-g*g;if(0===k)return e.set(-2,-1,-1);let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,dT),dT.x>=0&&dT.y>=0&&dT.x+dT.y<=1}static getUV(a,b,c,d,e,f,g,h){return this.getBarycoord(a,b,c,d,dT),h.set(0,0),h.addScaledVector(e,dT.x),h.addScaledVector(f,dT.y),h.addScaledVector(g,dT.z),h}static isFrontFacing(a,b,c,d){return dQ.subVectors(c,b),dR.subVectors(a,b),0>dQ.cross(dR).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return dQ.subVectors(this.c,this.b),dR.subVectors(this.a,this.b),.5*dQ.cross(dR).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return d$.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return d$.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return d$.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return d$.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return d$.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){let c=this.a,d=this.b,e=this.c,f,g;dU.subVectors(d,c),dV.subVectors(e,c),dX.subVectors(a,c);let h=dU.dot(dX),i=dV.dot(dX);if(h<=0&&i<=0)return b.copy(c);dY.subVectors(a,d);let j=dU.dot(dY),k=dV.dot(dY);if(j>=0&&k<=j)return b.copy(d);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return f=h/(h-j),b.copy(c).addScaledVector(dU,f);dZ.subVectors(a,e);let m=dU.dot(dZ),n=dV.dot(dZ);if(n>=0&&m<=n)return b.copy(e);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return g=i/(i-n),b.copy(c).addScaledVector(dV,g);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return dW.subVectors(e,d),g=(k-j)/(k-j+(m-n)),b.copy(d).addScaledVector(dW,g);let q=1/(p+o+l);return f=o*q,g=l*q,b.copy(c).addScaledVector(dU,f).addScaledVector(dV,g)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let d_=0;class d0 extends cp{constructor(){super(),Object.defineProperty(this,"id",{value:d_++}),this.uuid=cw(),this.name="",this.type="Material",this.fog=!0,this.blending=u,this.side=o,this.vertexColors=!1,this.opacity=1,this.format=aM,this.transparent=!1,this.blendSrc=I,this.blendDst=J,this.blendEquation=z,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=S,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=cd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=b_,this.stencilZFail=b_,this.stencilZPass=b_,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=c===r;continue}let d=this[b];if(void 0===d){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}}toJSON(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),void 0!==this.sheen&&(c.sheen=this.sheen),this.sheenTint&&this.sheenTint.isColor&&(c.sheenTint=this.sheenTint.getHex()),void 0!==this.sheenRoughness&&(c.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(c.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(c.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid,c.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(c.specularIntensityMap=this.specularIntensityMap.toJSON(a).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(c.specularTintMap=this.specularTintMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,void 0!==this.combine&&(c.combine=this.combine)),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(c.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(c.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.transmission&&(c.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(c.transmissionMap=this.transmissionMap.toJSON(a).uuid),void 0!==this.thickness&&(c.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(c.thicknessMap=this.thicknessMap.toJSON(a).uuid),void 0!==this.attenuationDistance&&(c.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(c.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(c.size=this.size),null!==this.shadowSide&&(c.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),this.blending!==u&&(c.blending=this.blending),this.side!==o&&(c.side=this.side),this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),this.format!==aM&&(c.format=this.format),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.colorWrite=this.colorWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(c.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(c.flatShading=this.flatShading),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b){let e=d(a.textures),f=d(a.images);e.length>0&&(c.textures=e),f.length>0&&(c.images=f)}return c}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.fog=a.fog,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.format=a.format,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}d0.prototype.isMaterial=!0;let d1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},d2={h:0,s:0,l:0},d3={h:0,s:0,l:0};function d4(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}function d5(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function d6(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}class d7{constructor(a,b,c){if(void 0===b&& void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this}setRGB(a,b,c){return this.r=a,this.g=b,this.b=c,this}setHSL(a,b,c){if(a=cy(a,1),b=cx(b,0,1),c=cx(c,0,1),0===b)this.r=this.g=this.b=c;else{let d=c<=.5?c*(1+b):c+b-c*b,e=2*c-d;this.r=d4(e,d,a+1/3),this.g=d4(e,d,a),this.b=d4(e,d,a-1/3)}return this}setStyle(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}let c;if(c=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(a)){let d,e=c[1],f=c[2];switch(e){case"rgb":case"rgba":if(d=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return this.r=Math.min(255,parseInt(d[1],10))/255,this.g=Math.min(255,parseInt(d[2],10))/255,this.b=Math.min(255,parseInt(d[3],10))/255,b(d[4]),this;if(d=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return this.r=Math.min(100,parseInt(d[1],10))/100,this.g=Math.min(100,parseInt(d[2],10))/100,this.b=Math.min(100,parseInt(d[3],10))/100,b(d[4]),this;break;case"hsl":case"hsla":if(d=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f)){let g=parseFloat(d[1])/360,h=parseInt(d[2],10)/100,i=parseInt(d[3],10)/100;return b(d[4]),this.setHSL(g,h,i)}}}else if(c=/^\#([A-Fa-f\d]+)$/.exec(a)){let j=c[1],k=j.length;if(3===k)return this.r=parseInt(j.charAt(0)+j.charAt(0),16)/255,this.g=parseInt(j.charAt(1)+j.charAt(1),16)/255,this.b=parseInt(j.charAt(2)+j.charAt(2),16)/255,this;if(6===k)return this.r=parseInt(j.charAt(0)+j.charAt(1),16)/255,this.g=parseInt(j.charAt(2)+j.charAt(3),16)/255,this.b=parseInt(j.charAt(4)+j.charAt(5),16)/255,this}return a&&a.length>0?this.setColorName(a):this}setColorName(a){let b=d1[a.toLowerCase()];return void 0!==b?this.setHex(b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copyGammaToLinear(a,b=2){return this.r=Math.pow(a.r,b),this.g=Math.pow(a.g,b),this.b=Math.pow(a.b,b),this}copyLinearToGamma(a,b=2){let c=b>0?1/b:1;return this.r=Math.pow(a.r,c),this.g=Math.pow(a.g,c),this.b=Math.pow(a.b,c),this}convertGammaToLinear(a){return this.copyGammaToLinear(this,a),this}convertLinearToGamma(a){return this.copyLinearToGamma(this,a),this}copySRGBToLinear(a){return this.r=d5(a.r),this.g=d5(a.g),this.b=d5(a.b),this}copyLinearToSRGB(a){return this.r=d6(a.r),this.g=d6(a.g),this.b=d6(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(a){let b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h,i=(f+e)/2;if(f===e)g=0,h=0;else{let j=e-f;switch(h=i<=.5?j/(e+f):j/(2-e-f),e){case b:g=(c-d)/j+(c<d?6:0);break;case c:g=(d-b)/j+2;break;case d:g=(b-c)/j+4}g/=6}return a.h=g,a.s=h,a.l=i,a}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(a,b,c){return this.getHSL(d2),d2.h+=a,d2.s+=b,d2.l+=c,this.setHSL(d2.h,d2.s,d2.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(a,b){this.getHSL(d2),a.getHSL(d3);let c=cz(d2.h,d3.h,b),d=cz(d2.s,d3.s,b),e=cz(d2.l,d3.l,b);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}d7.NAMES=d1,d7.prototype.isColor=!0,d7.prototype.r=1,d7.prototype.g=1,d7.prototype.b=1;class d8 extends d0{constructor(a){super(),this.type="MeshBasicMaterial",this.color=new d7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}d8.prototype.isMeshBasicMaterial=!0;let d9=new cW,ea=new cG;class eb{constructor(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=ce,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this}copyAt(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this}copyArray(a){return this.array.set(a),this}copyColorsArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new d7),b[c++]=f.r,b[c++]=f.g,b[c++]=f.b}return this}copyVector2sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new cG),b[c++]=f.x,b[c++]=f.y}return this}copyVector3sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new cW),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z}return this}copyVector4sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new cR),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z,b[c++]=f.w}return this}applyMatrix3(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)ea.fromBufferAttribute(this,b),ea.applyMatrix3(a),this.setXY(b,ea.x,ea.y);else if(3===this.itemSize)for(let d=0,e=this.count;d<e;d++)d9.fromBufferAttribute(this,d),d9.applyMatrix3(a),this.setXYZ(d,d9.x,d9.y,d9.z);return this}applyMatrix4(a){for(let b=0,c=this.count;b<c;b++)d9.x=this.getX(b),d9.y=this.getY(b),d9.z=this.getZ(b),d9.applyMatrix4(a),this.setXYZ(b,d9.x,d9.y,d9.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)d9.x=this.getX(b),d9.y=this.getY(b),d9.z=this.getZ(b),d9.applyNormalMatrix(a),this.setXYZ(b,d9.x,d9.y,d9.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)d9.x=this.getX(b),d9.y=this.getY(b),d9.z=this.getZ(b),d9.transformDirection(a),this.setXYZ(b,d9.x,d9.y,d9.z);return this}set(a,b=0){return this.array.set(a,b),this}getX(a){return this.array[a*this.itemSize]}setX(a,b){return this.array[a*this.itemSize]=b,this}getY(a){return this.array[a*this.itemSize+1]}setY(a,b){return this.array[a*this.itemSize+1]=b,this}getZ(a){return this.array[a*this.itemSize+2]}setZ(a,b){return this.array[a*this.itemSize+2]=b,this}getW(a){return this.array[a*this.itemSize+3]}setW(a,b){return this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),this.usage!==ce&&(a.usage=this.usage),(0!==this.updateRange.offset|| -1!==this.updateRange.count)&&(a.updateRange=this.updateRange),a}}eb.prototype.isBufferAttribute=!0;class ec extends eb{constructor(a,b,c){super(new Int8Array(a),b,c)}}class ed extends eb{constructor(a,b,c){super(new Uint8Array(a),b,c)}}class ee extends eb{constructor(a,b,c){super(new Uint8ClampedArray(a),b,c)}}class ef extends eb{constructor(a,b,c){super(new Int16Array(a),b,c)}}class eg extends eb{constructor(a,b,c){super(new Uint16Array(a),b,c)}}class eh extends eb{constructor(a,b,c){super(new Int32Array(a),b,c)}}class ei extends eb{constructor(a,b,c){super(new Uint32Array(a),b,c)}}class ej extends eb{constructor(a,b,c){super(new Uint16Array(a),b,c)}}ej.prototype.isFloat16BufferAttribute=!0;class ek extends eb{constructor(a,b,c){super(new Float32Array(a),b,c)}}class el extends eb{constructor(a,b,c){super(new Float64Array(a),b,c)}}let em=0,en=new dq,eo=new dP,ep=new cW,eq=new cZ,er=new cZ,es=new cW;class et extends cp{constructor(){super(),Object.defineProperty(this,"id",{value:em++}),this.uuid=cw(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(cI(a)>65535?ei:eg)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let d=new cH().getNormalMatrix(a);c.applyNormalMatrix(d),c.needsUpdate=!0}let e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(a),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return en.makeRotationFromQuaternion(a),this.applyMatrix4(en),this}rotateX(a){return en.makeRotationX(a),this.applyMatrix4(en),this}rotateY(a){return en.makeRotationY(a),this.applyMatrix4(en),this}rotateZ(a){return en.makeRotationZ(a),this.applyMatrix4(en),this}translate(a,b,c){return en.makeTranslation(a,b,c),this.applyMatrix4(en),this}scale(a,b,c){return en.makeScale(a,b,c),this.applyMatrix4(en),this}lookAt(a){return eo.lookAt(a),eo.updateMatrix(),this.applyMatrix4(eo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ep).negate(),this.translate(ep.x,ep.y,ep.z),this}setFromPoints(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c];b.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new ek(b,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new cZ);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new cW(-1/0,-1/0,-1/0),new cW(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++){let e=b[c];eq.setFromBufferAttribute(e),this.morphTargetsRelative?(es.addVectors(this.boundingBox.min,eq.min),this.boundingBox.expandByPoint(es),es.addVectors(this.boundingBox.max,eq.max),this.boundingBox.expandByPoint(es)):(this.boundingBox.expandByPoint(eq.min),this.boundingBox.expandByPoint(eq.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new dg);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new cW,1/0);return}if(a){let c=this.boundingSphere.center;if(eq.setFromBufferAttribute(a),b)for(let d=0,e=b.length;d<e;d++){let f=b[d];er.setFromBufferAttribute(f),this.morphTargetsRelative?(es.addVectors(eq.min,er.min),eq.expandByPoint(es),es.addVectors(eq.max,er.max),eq.expandByPoint(es)):(eq.expandByPoint(er.min),eq.expandByPoint(er.max))}eq.getCenter(c);let g=0;for(let h=0,i=a.count;h<i;h++)es.fromBufferAttribute(a,h),g=Math.max(g,c.distanceToSquared(es));if(b)for(let j=0,k=b.length;j<k;j++){let l=b[j],m=this.morphTargetsRelative;for(let n=0,o=l.count;n<o;n++)es.fromBufferAttribute(l,n),m&&(ep.fromBufferAttribute(a,n),es.add(ep)),g=Math.max(g,c.distanceToSquared(es))}this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let a=this.index,b=this.attributes;if(null===a|| void 0===b.position|| void 0===b.normal|| void 0===b.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let c=a.array,d=b.position.array,e=b.normal.array,f=b.uv.array,g=d.length/3;void 0===b.tangent&&this.setAttribute("tangent",new eb(new Float32Array(4*g),4));let h=b.tangent.array,i=[],j=[];for(let k=0;k<g;k++)i[k]=new cW,j[k]=new cW;let l=new cW,m=new cW,n=new cW,o=new cG,p=new cG,q=new cG,r=new cW,s=new cW;function t(a,b,c){l.fromArray(d,3*a),m.fromArray(d,3*b),n.fromArray(d,3*c),o.fromArray(f,2*a),p.fromArray(f,2*b),q.fromArray(f,2*c),m.sub(l),n.sub(l),p.sub(o),q.sub(o);let e=1/(p.x*q.y-q.x*p.y);isFinite(e)&&(r.copy(m).multiplyScalar(q.y).addScaledVector(n,-p.y).multiplyScalar(e),s.copy(n).multiplyScalar(p.x).addScaledVector(m,-q.x).multiplyScalar(e),i[a].add(r),i[b].add(r),i[c].add(r),j[a].add(s),j[b].add(s),j[c].add(s))}let u=this.groups;0===u.length&&(u=[{start:0,count:c.length}]);for(let v=0,w=u.length;v<w;++v){let x=u[v],y=x.start,z=x.count;for(let A=y,B=y+z;A<B;A+=3)t(c[A+0],c[A+1],c[A+2])}let C=new cW,D=new cW,E=new cW,F=new cW;function G(a){E.fromArray(e,3*a),F.copy(E);let b=i[a];C.copy(b),C.sub(E.multiplyScalar(E.dot(b))).normalize(),D.crossVectors(F,b);let c=D.dot(j[a]);h[4*a]=C.x,h[4*a+1]=C.y,h[4*a+2]=C.z,h[4*a+3]=c<0?-1:1}for(let H=0,I=u.length;H<I;++H){let J=u[H],K=J.start,L=J.count;for(let M=K,N=K+L;M<N;M+=3)G(c[M+0]),G(c[M+1]),G(c[M+2])}}computeVertexNormals(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new eb(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let d=0,e=c.count;d<e;d++)c.setXYZ(d,0,0,0);let f=new cW,g=new cW,h=new cW,i=new cW,j=new cW,k=new cW,l=new cW,m=new cW;if(a)for(let n=0,o=a.count;n<o;n+=3){let p=a.getX(n+0),q=a.getX(n+1),r=a.getX(n+2);f.fromBufferAttribute(b,p),g.fromBufferAttribute(b,q),h.fromBufferAttribute(b,r),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),i.fromBufferAttribute(c,p),j.fromBufferAttribute(c,q),k.fromBufferAttribute(c,r),i.add(l),j.add(l),k.add(l),c.setXYZ(p,i.x,i.y,i.z),c.setXYZ(q,j.x,j.y,j.z),c.setXYZ(r,k.x,k.y,k.z)}else for(let s=0,t=b.count;s<t;s+=3)f.fromBufferAttribute(b,s+0),g.fromBufferAttribute(b,s+1),h.fromBufferAttribute(b,s+2),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),c.setXYZ(s+0,l.x,l.y,l.z),c.setXYZ(s+1,l.x,l.y,l.z),c.setXYZ(s+2,l.x,l.y,l.z);this.normalizeNormals(),c.needsUpdate=!0}}merge(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let c=this.attributes;for(let d in c){if(void 0===a.attributes[d])continue;let e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize*b,j=Math.min(h.length,f.length-i);for(let k=0,l=i;k<j;k++,l++)f[l]=h[k]}return this}normalizeNormals(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)es.fromBufferAttribute(a,b),es.normalize(),a.setXYZ(b,es.x,es.y,es.z)}toNonIndexed(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let i=0,j=b.length;i<j;i++){g=a.isInterleavedBufferAttribute?b[i]*a.data.stride+a.offset:b[i]*d;for(let k=0;k<d;k++)f[h++]=c[g++]}return new eb(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let b=new et,c=this.index.array,d=this.attributes;for(let e in d){let f=d[e],g=a(f,c);b.setAttribute(e,g)}let h=this.morphAttributes;for(let i in h){let j=[],k=h[i];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=a(n,c);j.push(o)}b.morphAttributes[i]=j}b.morphTargetsRelative=this.morphTargetsRelative;let p=this.groups;for(let q=0,r=p.length;q<r;q++){let s=p[q];b.addGroup(s.start,s.count,s.materialIndex)}return b}toJSON(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let e=this.attributes;for(let f in e){let g=e[f];a.data.attributes[f]=g.toJSON(a.data)}let h={},i=!1;for(let j in this.morphAttributes){let k=this.morphAttributes[j],l=[];for(let m=0,n=k.length;m<n;m++){let o=k[m];l.push(o.toJSON(a.data))}l.length>0&&(h[j]=l,i=!0)}i&&(a.data.morphAttributes=h,a.data.morphTargetsRelative=this.morphTargetsRelative);let p=this.groups;p.length>0&&(a.data.groups=JSON.parse(JSON.stringify(p)));let q=this.boundingSphere;return null!==q&&(a.data.boundingSphere={center:q.center.toArray(),radius:q.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let e in d){let f=d[e];this.setAttribute(e,f.clone(b))}let g=a.morphAttributes;for(let h in g){let i=[],j=g[h];for(let k=0,l=j.length;k<l;k++)i.push(j[k].clone(b));this.morphAttributes[h]=i}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let n=0,o=m.length;n<o;n++){let p=m[n];this.addGroup(p.start,p.count,p.materialIndex)}let q=a.boundingBox;null!==q&&(this.boundingBox=q.clone());let r=a.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,void 0!==a.parameters&&(this.parameters=Object.assign({},a.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}et.prototype.isBufferGeometry=!0;let eu=new dq,ev=new dp,ew=new dg,ex=new cW,ey=new cW,ez=new cW,eA=new cW,eB=new cW,eC=new cW,eD=new cW,eE=new cW,eF=new cW,eG=new cG,eH=new cG,eI=new cG,eJ=new cW,eK=new cW;class eL extends dP{constructor(a=new et,b=new d8){super(),this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0===d||(null===c.boundingSphere&&c.computeBoundingSphere(),ew.copy(c.boundingSphere),ew.applyMatrix4(e),!1===a.ray.intersectsSphere(ew))||(eu.copy(e).invert(),ev.copy(a.ray).applyMatrix4(eu),null!==c.boundingBox&& !1===ev.intersectsBox(c.boundingBox)))return;let f;if(c.isBufferGeometry){let g=c.index,h=c.attributes.position,i=c.morphAttributes.position,j=c.morphTargetsRelative,k=c.attributes.uv,l=c.attributes.uv2,m=c.groups,n=c.drawRange;if(null!==g){if(Array.isArray(d))for(let o=0,p=m.length;o<p;o++){let q=m[o],r=d[q.materialIndex],s=Math.max(q.start,n.start),t=Math.min(g.count,Math.min(q.start+q.count,n.start+n.count));for(let u=s,v=t;u<v;u+=3){let w=g.getX(u),x=g.getX(u+1),y=g.getX(u+2);(f=eM(this,r,a,ev,h,i,j,k,l,w,x,y))&&(f.faceIndex=Math.floor(u/3),f.face.materialIndex=q.materialIndex,b.push(f))}}else{let z=Math.max(0,n.start),A=Math.min(g.count,n.start+n.count);for(let B=z,C=A;B<C;B+=3){let D=g.getX(B),E=g.getX(B+1),F=g.getX(B+2);(f=eM(this,d,a,ev,h,i,j,k,l,D,E,F))&&(f.faceIndex=Math.floor(B/3),b.push(f))}}}else if(void 0!==h){if(Array.isArray(d))for(let G=0,H=m.length;G<H;G++){let I=m[G],J=d[I.materialIndex],K=Math.max(I.start,n.start),L=Math.min(h.count,Math.min(I.start+I.count,n.start+n.count));for(let M=K,N=L;M<N;M+=3){let O=M,P=M+1,Q=M+2;(f=eM(this,J,a,ev,h,i,j,k,l,O,P,Q))&&(f.faceIndex=Math.floor(M/3),f.face.materialIndex=I.materialIndex,b.push(f))}}else{let R=Math.max(0,n.start),S=Math.min(h.count,n.start+n.count);for(let T=R,U=S;T<U;T+=3){let V=T,W=T+1,X=T+2;(f=eM(this,d,a,ev,h,i,j,k,l,V,W,X))&&(f.faceIndex=Math.floor(T/3),b.push(f))}}}}else c.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function eM(a,b,c,d,e,f,g,h,i,j,k,l){ex.fromBufferAttribute(e,j),ey.fromBufferAttribute(e,k),ez.fromBufferAttribute(e,l);let m=a.morphTargetInfluences;if(f&&m){eD.set(0,0,0),eE.set(0,0,0),eF.set(0,0,0);for(let n=0,o=f.length;n<o;n++){let r=m[n],s=f[n];0!==r&&(eA.fromBufferAttribute(s,j),eB.fromBufferAttribute(s,k),eC.fromBufferAttribute(s,l),g?(eD.addScaledVector(eA,r),eE.addScaledVector(eB,r),eF.addScaledVector(eC,r)):(eD.addScaledVector(eA.sub(ex),r),eE.addScaledVector(eB.sub(ey),r),eF.addScaledVector(eC.sub(ez),r)))}ex.add(eD),ey.add(eE),ez.add(eF)}a.isSkinnedMesh&&(a.boneTransform(j,ex),a.boneTransform(k,ey),a.boneTransform(l,ez));let t=function(a,b,c,d,e,f,g,h){let i;if(null===(b.side===p?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,f,g,b.side!==q,h)))return null;eK.copy(h),eK.applyMatrix4(a.matrixWorld);let j=c.ray.origin.distanceTo(eK);return j<c.near||j>c.far?null:{distance:j,point:eK.clone(),object:a}}(a,b,c,d,ex,ey,ez,eJ);if(t){h&&(eG.fromBufferAttribute(h,j),eH.fromBufferAttribute(h,k),eI.fromBufferAttribute(h,l),t.uv=d$.getUV(eJ,ex,ey,ez,eG,eH,eI,new cG)),i&&(eG.fromBufferAttribute(i,j),eH.fromBufferAttribute(i,k),eI.fromBufferAttribute(i,l),t.uv2=d$.getUV(eJ,ex,ey,ez,eG,eH,eI,new cG));let u={a:j,b:k,c:l,normal:new cW,materialIndex:0};d$.getNormal(ex,ey,ez,u.normal),t.face=u}return t}eL.prototype.isMesh=!0;class eN extends et{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e),f=Math.floor(f);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new cW;for(let C=0;C<y;C++){let D=C*t-v;for(let E=0;E<x;E++){let F=E*s-u;B[a]=F*d,B[b]=D*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(E/p),k.push(1-C/q),z+=1}}for(let G=0;G<q;G++)for(let H=0;H<p;H++){let I=l+H+x*G,J=l+H+x*(G+1),K=l+(H+1)+x*(G+1),L=l+(H+1)+x*G;h.push(I,J,L),h.push(J,K,L),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f,e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new ek(i,3)),this.setAttribute("normal",new ek(j,3)),this.setAttribute("uv",new ek(k,2))}static fromJSON(a){return new eN(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function eO(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture||e.isQuaternion)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function eP(a){let b={};for(let c=0;c<a.length;c++){let d=eO(a[c]);for(let e in d)b[e]=d[e]}return b}let eQ={clone:eO,merge:eP};class eR extends d0{constructor(a){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=eO(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(a){let b=super.toJSON(a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c],e=d.value;e&&e.isTexture?b.uniforms[c]={type:"t",value:e.toJSON(a).uuid}:e&&e.isColor?b.uniforms[c]={type:"c",value:e.getHex()}:e&&e.isVector2?b.uniforms[c]={type:"v2",value:e.toArray()}:e&&e.isVector3?b.uniforms[c]={type:"v3",value:e.toArray()}:e&&e.isVector4?b.uniforms[c]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?b.uniforms[c]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?b.uniforms[c]={type:"m4",value:e.toArray()}:b.uniforms[c]={value:e}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let f={};for(let g in this.extensions)!0===this.extensions[g]&&(f[g]=!0);return Object.keys(f).length>0&&(b.extensions=f),b}}eR.prototype.isShaderMaterial=!0;class eS extends dP{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new dq,this.projectionMatrix=new dq,this.projectionMatrixInverse=new dq}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}eS.prototype.isCamera=!0;class eT extends eS{constructor(a=50,b=1,c=.1,d=2e3){super(),this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*cs*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*cr*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*cs*Math.atan(Math.tan(.5*cr*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=this.near,b=a*Math.tan(.5*cr*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g,b-=f.offsetY*c/h,d*=f.width/g,c*=f.height/h}let i=this.filmOffset;0!==i&&(e+=a*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}eT.prototype.isPerspectiveCamera=!0;class eU extends dP{constructor(a,b,c){if(super(),this.type="CubeCamera",!0!==c.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=c;let d=new eT(90,1,a,b);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new cW(1,0,0)),this.add(d);let e=new eT(90,1,a,b);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new cW(-1,0,0)),this.add(e);let f=new eT(90,1,a,b);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new cW(0,1,0)),this.add(f);let g=new eT(90,1,a,b);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new cW(0,-1,0)),this.add(g);let h=new eT(90,1,a,b);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new cW(0,0,1)),this.add(h);let i=new eT(90,1,a,b);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new cW(0,0,-1)),this.add(i)}update(a,b){null===this.parent&&this.updateMatrixWorld();let c=this.renderTarget,[d,e,f,g,h,i]=this.children,j=a.xr.enabled,k=a.getRenderTarget();a.xr.enabled=!1;let l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0),a.render(b,d),a.setRenderTarget(c,1),a.render(b,e),a.setRenderTarget(c,2),a.render(b,f),a.setRenderTarget(c,3),a.render(b,g),a.setRenderTarget(c,4),a.render(b,h),c.texture.generateMipmaps=l,a.setRenderTarget(c,5),a.render(b,i),a.setRenderTarget(k),a.xr.enabled=j}}class eV extends cP{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:af,c,d,e,f,g,h,i,j),this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}eV.prototype.isCubeTexture=!0;class eW extends cS{constructor(a,b,c){Number.isInteger(b)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),b=c),super(a,a,b),b=b||{},this.texture=new eV(void 0,b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==b.generateMipmaps&&b.generateMipmaps,this.texture.minFilter=void 0!==b.minFilter?b.minFilter:at,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(a,b){this.texture.type=b.type,this.texture.format=aM,this.texture.encoding=b.encoding,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},d=new eN(5,5,5),e=new eR({name:"CubemapFromEquirect",uniforms:eO(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:p,blending:t});e.uniforms.tEquirect.value=b;let f=new eL(d,e),g=b.minFilter;b.minFilter===aw&&(b.minFilter=at);let h=new eU(1,10,this);return h.update(a,f),b.minFilter=g,f.geometry.dispose(),f.material.dispose(),this}clear(a,b,c,d){let e=a.getRenderTarget();for(let f=0;f<6;f++)a.setRenderTarget(this,f),a.clear(b,c,d);a.setRenderTarget(e)}}eW.prototype.isWebGLCubeRenderTarget=!0;let eX=new cW,eY=new cW,eZ=new cH;class e${constructor(a=new cW(1,0,0),b=0){this.normal=a,this.constant=b}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=eX.subVectors(c,b).cross(eY.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){let c=a.delta(eX),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):null;let e=-(a.start.dot(this.normal)+this.constant)/d;return e<0||e>1?null:b.copy(c).multiplyScalar(e).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||eZ.getNormalMatrix(a),d=this.coplanarPoint(eX).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}e$.prototype.isPlane=!0;let e_=new dg,e0=new cW;class e1{constructor(a=new e$,b=new e$,c=new e$,d=new e$,e=new e$,f=new e$){this.planes=[a,b,c,d,e,f]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){let b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this}intersectsObject(a){let b=a.geometry;return null===b.boundingSphere&&b.computeBoundingSphere(),e_.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(e_)}intersectsSprite(a){return e_.center.set(0,0,0),e_.radius=.7071067811865476,e_.applyMatrix4(a.matrixWorld),this.intersectsSphere(e_)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let e=0;e<6;e++){let f=b[e].distanceToPoint(c);if(f<d)return!1}return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(e0.x=d.normal.x>0?a.max.x:a.min.x,e0.y=d.normal.y>0?a.max.y:a.min.y,e0.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(e0))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}clone(){return new this.constructor().copy(this)}}function e2(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function e3(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){let f=d.get(b);(!f||f.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let g=d.get(b);void 0===g?d.set(b,function(b,d){let e=b.array,f=b.usage,g=a.createBuffer();a.bindBuffer(d,g),a.bufferData(d,e,f),b.onUploadCallback();let h=5126;return e instanceof Float32Array?h=5126:e instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):e instanceof Uint16Array?b.isFloat16BufferAttribute?c?h=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):h=5123:e instanceof Int16Array?h=5122:e instanceof Uint32Array?h=5125:e instanceof Int32Array?h=5124:e instanceof Int8Array?h=5120:e instanceof Uint8Array?h=5121:e instanceof Uint8ClampedArray&&(h=5121),{buffer:g,type:h,bytesPerElement:e.BYTES_PER_ELEMENT,version:b.version}}(b,e)):g.version<b.version&&(!function(b,d,e){let f=d.array,g=d.updateRange;a.bindBuffer(e,b),-1===g.count?a.bufferSubData(e,0,f):(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}(g.buffer,b,e),g.version=b.version)}}}class e4 extends et{constructor(a=1,b=1,c=1,d=1){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};let e=a/2,f=b/2,g=Math.floor(c),h=Math.floor(d),i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let q=0;q<j;q++){let r=q*l-f;for(let s=0;s<i;s++){let t=s*k-e;n.push(t,-r,0),o.push(0,0,1),p.push(s/g),p.push(1-q/h)}}for(let u=0;u<h;u++)for(let v=0;v<g;v++){let w=v+i*u,x=v+i*(u+1),y=v+1+i*(u+1),z=v+1+i*u;m.push(w,x,z),m.push(x,y,z)}this.setIndex(m),this.setAttribute("position",new ek(n,3)),this.setAttribute("normal",new ek(o,3)),this.setAttribute("uv",new ek(p,2))}static fromJSON(a){return new e4(a.width,a.height,a.widthSegments,a.heightSegments)}}let e5={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenTint * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n		envColor = envMapTexelToLinear( envColor );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec;\n			#ifdef ENVMAP_MODE_REFLECTION\n				reflectVec = reflect( - viewDir, normal );\n				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			#else\n				reflectVec = refract( - viewDir, normal, refractionRatio );\n			#endif\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		lightMapIrradiance *= PI;\n	#endif\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularTintFactor = specularTint;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARTINTMAP\n			specularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularTintFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenTint = sheenTint;\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenTint;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform vec2 morphTargetsTextureSize;\n		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n			float texelIndex = float( vertexIndex * stride + offset );\n			float y = floor( texelIndex / morphTargetsTextureSize.x );\n			float x = texelIndex - y * morphTargetsTextureSize.x;\n			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n			return texture( morphTargetsTexture, morphUV ).xyz;\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			#ifndef USE_MORPHNORMALS\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n			#else\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n			#endif\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationTint, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationTint;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( float roughness, float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef TEXTURE_LOD_EXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n		vec3 attenuationColor, float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularTint;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARTINTMAP\n		uniform sampler2D specularTintMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenTint;\n	uniform float sheenRoughness;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},e6={common:{diffuse:{value:new d7(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new cH},uv2Transform:{value:new cH},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new cG(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new d7(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new d7(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cH}},sprite:{diffuse:{value:new d7(16777215)},opacity:{value:1},center:{value:new cG(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cH}}},e7={basic:{uniforms:eP([e6.common,e6.specularmap,e6.envmap,e6.aomap,e6.lightmap,e6.fog]),vertexShader:e5.meshbasic_vert,fragmentShader:e5.meshbasic_frag},lambert:{uniforms:eP([e6.common,e6.specularmap,e6.envmap,e6.aomap,e6.lightmap,e6.emissivemap,e6.fog,e6.lights,{emissive:{value:new d7(0)}}]),vertexShader:e5.meshlambert_vert,fragmentShader:e5.meshlambert_frag},phong:{uniforms:eP([e6.common,e6.specularmap,e6.envmap,e6.aomap,e6.lightmap,e6.emissivemap,e6.bumpmap,e6.normalmap,e6.displacementmap,e6.fog,e6.lights,{emissive:{value:new d7(0)},specular:{value:new d7(1118481)},shininess:{value:30}}]),vertexShader:e5.meshphong_vert,fragmentShader:e5.meshphong_frag},standard:{uniforms:eP([e6.common,e6.envmap,e6.aomap,e6.lightmap,e6.emissivemap,e6.bumpmap,e6.normalmap,e6.displacementmap,e6.roughnessmap,e6.metalnessmap,e6.fog,e6.lights,{emissive:{value:new d7(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:e5.meshphysical_vert,fragmentShader:e5.meshphysical_frag},toon:{uniforms:eP([e6.common,e6.aomap,e6.lightmap,e6.emissivemap,e6.bumpmap,e6.normalmap,e6.displacementmap,e6.gradientmap,e6.fog,e6.lights,{emissive:{value:new d7(0)}}]),vertexShader:e5.meshtoon_vert,fragmentShader:e5.meshtoon_frag},matcap:{uniforms:eP([e6.common,e6.bumpmap,e6.normalmap,e6.displacementmap,e6.fog,{matcap:{value:null}}]),vertexShader:e5.meshmatcap_vert,fragmentShader:e5.meshmatcap_frag},points:{uniforms:eP([e6.points,e6.fog]),vertexShader:e5.points_vert,fragmentShader:e5.points_frag},dashed:{uniforms:eP([e6.common,e6.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:e5.linedashed_vert,fragmentShader:e5.linedashed_frag},depth:{uniforms:eP([e6.common,e6.displacementmap]),vertexShader:e5.depth_vert,fragmentShader:e5.depth_frag},normal:{uniforms:eP([e6.common,e6.bumpmap,e6.normalmap,e6.displacementmap,{opacity:{value:1}}]),vertexShader:e5.meshnormal_vert,fragmentShader:e5.meshnormal_frag},sprite:{uniforms:eP([e6.sprite,e6.fog]),vertexShader:e5.sprite_vert,fragmentShader:e5.sprite_frag},background:{uniforms:{uvTransform:{value:new cH},t2D:{value:null}},vertexShader:e5.background_vert,fragmentShader:e5.background_frag},cube:{uniforms:eP([e6.envmap,{opacity:{value:1}}]),vertexShader:e5.cube_vert,fragmentShader:e5.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:e5.equirect_vert,fragmentShader:e5.equirect_frag},distanceRGBA:{uniforms:eP([e6.common,e6.displacementmap,{referencePosition:{value:new cW},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:e5.distanceRGBA_vert,fragmentShader:e5.distanceRGBA_frag},shadow:{uniforms:eP([e6.lights,e6.fog,{color:{value:new d7(0)},opacity:{value:1}},]),vertexShader:e5.shadow_vert,fragmentShader:e5.shadow_frag}};function e8(a,b,c,d,e){let f=new d7(0),g=0,h,i,j=null,k=0,l=null;function m(a,b){c.buffers.color.setClear(a.r,a.g,a.b,b,e)}return{getClearColor:function(){return f},setClearColor:function(a,b=1){f.set(a),m(f,g=b)},getClearAlpha:function(){return g},setClearAlpha:function(a){m(f,g=a)},render:function(c,e){let n=!1,q=!0===e.isScene?e.background:null;q&&q.isTexture&&(q=b.get(q));let r=a.xr,s=r.getSession&&r.getSession();s&&"additive"===s.environmentBlendMode&&(q=null),null===q?m(f,g):q&&q.isColor&&(m(q,1),n=!0),(a.autoClear||n)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),q&&(q.isCubeTexture||q.mapping===aj)?(void 0===i&&((i=new eL(new eN(1,1,1),new eR({name:"BackgroundCubeMaterial",uniforms:eO(e7.cube.uniforms),vertexShader:e7.cube.vertexShader,fragmentShader:e7.cube.fragmentShader,side:p,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),i.geometry.deleteAttribute("uv"),i.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(i.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(i)),i.material.uniforms.envMap.value=q,i.material.uniforms.flipEnvMap.value=q.isCubeTexture&& !1===q.isRenderTargetTexture?-1:1,(j!==q||k!==q.version||l!==a.toneMapping)&&(i.material.needsUpdate=!0,j=q,k=q.version,l=a.toneMapping),c.unshift(i,i.geometry,i.material,0,0,null)):q&&q.isTexture&&(void 0===h&&((h=new eL(new e4(2,2),new eR({name:"BackgroundMaterial",uniforms:eO(e7.background.uniforms),vertexShader:e7.background.vertexShader,fragmentShader:e7.background.fragmentShader,side:o,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(h)),h.material.uniforms.t2D.value=q,!0===q.matrixAutoUpdate&&q.updateMatrix(),h.material.uniforms.uvTransform.value.copy(q.matrix),(j!==q||k!==q.version||l!==a.toneMapping)&&(h.material.needsUpdate=!0,j=q,k=q.version,l=a.toneMapping),c.unshift(h,h.geometry,h.material,0,0,null))}}}function e9(a,b,c,d){let e=a.getParameter(34921),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=m(null),j=i;function k(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function l(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function m(a){let b=[],c=[],d=[];for(let f=0;f<e;f++)b[f]=0,c[f]=0,d[f]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function n(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function o(a){p(a,0)}function p(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;if(f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e){let i=d.isWebGL2?a:b.get("ANGLE_instanced_arrays");i[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e}}function q(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function r(b,c,e,f,g,h){!0===d.isWebGL2&&(5124===e||5125===e)?a.vertexAttribIPointer(b,c,e,g,h):a.vertexAttribPointer(b,c,e,f,g,h)}function s(){t(),j!==i&&k((j=i).object)}function t(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,l,s,t){let u=!1;if(g){let v=function b(c,e,g){let i=!0===g.wireframe,j=h[c.id];void 0===j&&(j={},h[c.id]=j);let k=j[e.id];void 0===k&&(k={},j[e.id]=k);let l=k[i];return void 0===l&&(l=m(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),k[i]=l),l}(s,l,i);j!==v&&k((j=v).object),(u=function a(b,c){let d=j.attributes,e=b.attributes,f=0;for(let g in e){let h=d[g],i=e[g];if(void 0===h||h.attribute!==i||h.data!==i.data)return!0;f++}return j.attributesNum!==f||j.index!==c}(s,t))&&function a(b,c){let d={},e=b.attributes,f=0;for(let g in e){let h=e[g],i={};i.attribute=h,h.data&&(i.data=h.data),d[g]=i,f++}j.attributes=d,j.attributesNum=f,j.index=c}(s,t)}else{let w=!0===i.wireframe;(j.geometry!==s.id||j.program!==l.id||j.wireframe!==w)&&(j.geometry=s.id,j.program=l.id,j.wireframe=w,u=!0)}!0===e.isInstancedMesh&&(u=!0),null!==t&&c.update(t,34963),u&&(function e(f,g,h,i){if(!1===d.isWebGL2&&(f.isInstancedMesh||i.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;n();let j=i.attributes,k=h.getAttributes(),l=g.defaultAttributeValues;for(let m in k){let s=k[m];if(s.location>=0){let t=j[m];if(void 0===t&&("instanceMatrix"===m&&f.instanceMatrix&&(t=f.instanceMatrix),"instanceColor"===m&&f.instanceColor&&(t=f.instanceColor)),void 0!==t){let u=t.normalized,v=t.itemSize,w=c.get(t);if(void 0===w)continue;let x=w.buffer,y=w.type,z=w.bytesPerElement;if(t.isInterleavedBufferAttribute){let A=t.data,B=A.stride,C=t.offset;if(A&&A.isInstancedInterleavedBuffer){for(let D=0;D<s.locationSize;D++)p(s.location+D,A.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let E=0;E<s.locationSize;E++)o(s.location+E);a.bindBuffer(34962,x);for(let F=0;F<s.locationSize;F++)r(s.location+F,v/s.locationSize,y,u,B*z,(C+v/s.locationSize*F)*z)}else{if(t.isInstancedBufferAttribute){for(let G=0;G<s.locationSize;G++)p(s.location+G,t.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let H=0;H<s.locationSize;H++)o(s.location+H);a.bindBuffer(34962,x);for(let I=0;I<s.locationSize;I++)r(s.location+I,v/s.locationSize,y,u,v*z,v/s.locationSize*I*z)}}else if(void 0!==l){let J=l[m];if(void 0!==J)switch(J.length){case 2:a.vertexAttrib2fv(s.location,J);break;case 3:a.vertexAttrib3fv(s.location,J);break;case 4:a.vertexAttrib4fv(s.location,J);break;default:a.vertexAttrib1fv(s.location,J)}}}}q()}(e,i,l,s),null!==t&&a.bindBuffer(34963,c.get(t).buffer))},reset:s,resetDefaultState:t,dispose:function(){for(let a in s(),h){let b=h[a];for(let c in b){let d=b[c];for(let e in d)l(d[e].object),delete d[e];delete b[c]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let c in b){let d=b[c];for(let e in d)l(d[e].object),delete d[e];delete b[c]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let e in d)l(d[e].object),delete d[e];delete c[a.id]}},initAttributes:n,enableAttribute:o,disableUnusedAttributes:q}}function fa(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}this.setMode=g,this.render=function(b,d){a.drawArrays(f,b,d),c.update(d,f,1)},this.renderInstances=function(d,g,h){if(0===h)return;let i,j;if(e)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}i[j](f,d,g,h),c.update(g,f,h)}}function fb(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=f||b.has("WEBGL_draw_buffers"),j=!0===c.logarithmicDepthBuffer,k=a.getParameter(34930),l=a.getParameter(35660),m=a.getParameter(3379),n=a.getParameter(34076),o=a.getParameter(34921),p=a.getParameter(36347),q=a.getParameter(36348),r=a.getParameter(36349),s=l>0,t=f||b.has("OES_texture_float"),u=f?a.getParameter(36183):0;return{isWebGL2:f,drawBuffers:i,getMaxAnisotropy:function(){if(void 0!==d)return d;if(!0===b.has("EXT_texture_filter_anisotropic")){let c=b.get("EXT_texture_filter_anisotropic");d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else d=0;return d},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:j,maxTextures:k,maxVertexTextures:l,maxTextureSize:m,maxCubemapSize:n,maxAttributes:o,maxVertexUniforms:p,maxVaryings:q,maxFragmentUniforms:r,vertexTextures:s,floatFragmentTextures:t,floatVertexTextures:s&&t,maxSamples:u}}function fc(a){let b=this,c=null,d=0,e=!1,f=!1,g=new e$,h=new cH,i={value:null,needsUpdate:!1};function j(){i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0}function k(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let k=d+4*f,l=c.matrixWorldInverse;h.getNormalMatrix(l),(null===j||j.length<k)&&(j=new Float32Array(k));for(let m=0,n=d;m!==f;++m,n+=4)g.copy(a[m]).applyMatrix4(l,h),g.normal.toArray(j,n),j[n+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,f){let g=0!==a.length||b||0!==d||e;return e=b,c=k(a,f,0),d=a.length,g},this.beginShadows=function(){f=!0,k(null)},this.endShadows=function(){f=!1,j()},this.setState=function(b,g,h){let l=b.clippingPlanes,m=b.clipIntersection,n=b.clipShadows,o=a.get(b);if(e&&null!==l&&0!==l.length&&(!f||n)){let p=f?0:d,q=4*p,r=o.clippingState||null;i.value=r,r=k(l,g,q,h);for(let s=0;s!==q;++s)r[s]=c[s];o.clippingState=r,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=p}else f?k(null):j()}}function fd(a){let b=new WeakMap;function c(a,b){return b===ah?a.mapping=af:b===ai&&(a.mapping=ag),a}function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture&& !1===e.isRenderTargetTexture){let f=e.mapping;if(f===ah||f===ai){if(b.has(e)){let g=b.get(e).texture;return c(g,e.mapping)}{let h=e.image;if(!h||!(h.height>0))return null;{let i=a.getRenderTarget(),j=new eW(h.height/2);return j.fromEquirectangularTexture(a,e),b.set(e,j),a.setRenderTarget(i),e.addEventListener("dispose",d),c(j.texture,e.mapping)}}}}return e},dispose:function(){b=new WeakMap}}}e7.physical={uniforms:eP([e7.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new cG(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new d7(0)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new cG},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new d7(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new d7(1,1,1)},specularTintMap:{value:null}}]),vertexShader:e5.meshphysical_vert,fragmentShader:e5.meshphysical_frag};class fe extends eS{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=i*this.view.offsetX,f=e+i*this.view.width,g-=j*this.view.offsetY,h=g-j*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}fe.prototype.isOrthographicCamera=!0;class ff extends eR{constructor(a){super(a),this.type="RawShaderMaterial"}}ff.prototype.isRawShaderMaterial=!0;let fg=[.125,.215,.35,.446,.526,.582],fh=5+fg.length,fi={[bO]:0,[bP]:1,[bR]:2,[bT]:3,[bU]:4,[bV]:5,[bQ]:6},fj=new fe,{_lodPlanes:fk,_sizeLods:fl,_sigmas:fm}=function(){let a=[],b=[],c=[],d=8;for(let e=0;e<fh;e++){let f=Math.pow(2,d);b.push(f);let g=1/f;e>4?g=fg[e-8+4-1]:0==e&&(g=0),c.push(g);let h=1/(f-1),i=-h/2,j=1+h/2,k=[i,i,j,i,j,j,i,i,j,j,i,j],l=6,m=6,n=3,o=2,p=1,q=new Float32Array(n*m*l),r=new Float32Array(o*m*l),s=new Float32Array(p*m*l);for(let t=0;t<l;t++){let u=t%3*2/3-1,v=t>2?0:-1,w=[u,v,0,u+2/3,v,0,u+2/3,v+1,0,u,v,0,u+2/3,v+1,0,u,v+1,0];q.set(w,n*m*t),r.set(k,o*m*t);let x=[t,t,t,t,t,t];s.set(x,p*m*t)}let y=new et;y.setAttribute("position",new eb(q,n)),y.setAttribute("uv",new eb(r,o)),y.setAttribute("faceIndex",new eb(s,p)),a.push(y),d>4&&d--}return{_lodPlanes:a,_sizeLods:b,_sigmas:c}}(),fn=new d7,fo=null,fp=(1+Math.sqrt(5))/2,fq=1/fp,fr=[new cW(1,1,1),new cW(-1,1,1),new cW(1,1,-1),new cW(-1,1,-1),new cW(0,fp,fq),new cW(0,fp,-fq),new cW(fq,0,fp),new cW(-fq,0,fp),new cW(fp,fq,0),new cW(-fp,fq,0)];class fs{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._blurMaterial=function(a){let b=new Float32Array(a),c=new cW(0,1,0),d=new ff({name:"SphericalGaussianBlur",defines:{n:a},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:b},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:c},inputEncoding:{value:fi[bO]},outputEncoding:{value:fi[bO]}},vertexShader:fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${fz()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:t,depthTest:!1,depthWrite:!1});return d}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){fo=this._renderer.getRenderTarget();let e=this._allocateTargets();return this._sceneToCubeUV(a,c,d,e),b>0&&this._blur(e,0,0,b),this._applyPMREM(e),this._cleanup(e),e}fromEquirectangular(a){return this._fromTexture(a)}fromCubemap(a){return this._fromTexture(a)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=fx(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=fw(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let a=0;a<fk.length;a++)fk[a].dispose()}_cleanup(a){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(fo),a.scissorTest=!1,fv(a,0,0,a.width,a.height)}_fromTexture(a){fo=this._renderer.getRenderTarget();let b=this._allocateTargets(a);return this._textureToCubeUV(a,b),this._applyPMREM(b),this._cleanup(b),b}_allocateTargets(a){let b={magFilter:ao,minFilter:ao,generateMipmaps:!1,type:ay,format:aP,encoding:ft(a)?a.encoding:bR,depthBuffer:!1},c=fu(b);return c.depthBuffer=!a,this._pingPongRenderTarget=fu(b),c}_compileMaterial(a){let b=new eL(fk[0],a);this._renderer.compile(b,fj)}_sceneToCubeUV(a,b,c,d){let e=new eT(90,1,b,c),f=[1,-1,1,1,1,1],g=[1,1,1,-1,-1,-1],h=this._renderer,i=h.autoClear,j=h.outputEncoding,k=h.toneMapping;h.getClearColor(fn),h.toneMapping=$,h.outputEncoding=bO,h.autoClear=!1;let l=new d8({name:"PMREM.Background",side:p,depthWrite:!1,depthTest:!1}),m=new eL(new eN,l),n=!1,o=a.background;o?o.isColor&&(l.color.copy(o),a.background=null,n=!0):(l.color.copy(fn),n=!0);for(let q=0;q<6;q++){let r=q%3;0==r?(e.up.set(0,f[q],0),e.lookAt(g[q],0,0)):1==r?(e.up.set(0,0,f[q]),e.lookAt(0,g[q],0)):(e.up.set(0,f[q],0),e.lookAt(0,0,g[q])),fv(d,256*r,q>2?256:0,256,256),h.setRenderTarget(d),n&&h.render(m,e),h.render(a,e)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=k,h.outputEncoding=j,h.autoClear=i,a.background=o}_setEncoding(a,b){!0===this._renderer.capabilities.isWebGL2&&b.format===aM&&b.type===ay&&b.encoding===bP?a.value=fi[bO]:a.value=fi[b.encoding]}_textureToCubeUV(a,b){let c=this._renderer;a.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=fx()):null==this._equirectShader&&(this._equirectShader=fw());let d=a.isCubeTexture?this._cubemapShader:this._equirectShader,e=new eL(fk[0],d),f=d.uniforms;f.envMap.value=a,a.isCubeTexture||f.texelSize.value.set(1/a.image.width,1/a.image.height),this._setEncoding(f.inputEncoding,a),this._setEncoding(f.outputEncoding,b.texture),fv(b,0,0,768,512),c.setRenderTarget(b),c.render(e,fj)}_applyPMREM(a){let b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let d=1;d<fh;d++){let e=Math.sqrt(fm[d]*fm[d]-fm[d-1]*fm[d-1]),f=fr[(d-1)%fr.length];this._blur(a,d-1,d,e,f)}b.autoClear=c}_blur(a,b,c,d,e){let f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e),this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,g){let h=this._renderer,i=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");let j=new eL(fk[d],i),k=i.uniforms,l=fl[c]-1,m=isFinite(e)?Math.PI/(2*l):2*Math.PI/39,n=e/m,o=isFinite(e)?1+Math.floor(3*n):20;o>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${o} samples when the maximum is set to 20`);let p=[],q=0;for(let r=0;r<20;++r){let s=r/n,t=Math.exp(-s*s/2);p.push(t),0==r?q+=t:r<o&&(q+=2*t)}for(let u=0;u<p.length;u++)p[u]=p[u]/q;k.envMap.value=a.texture,k.samples.value=o,k.weights.value=p,k.latitudinal.value="latitudinal"===f,g&&(k.poleAxis.value=g),k.dTheta.value=m,k.mipInt.value=8-c,this._setEncoding(k.inputEncoding,a.texture),this._setEncoding(k.outputEncoding,a.texture);let v=fl[d];fv(b,3*Math.max(0,256-2*v),(0===d?0:512)+2*v*(d>4?d-8+4:0),3*v,2*v),h.setRenderTarget(b),h.render(j,fj)}}function ft(a){return void 0!==a&&a.type===ay&&(a.encoding===bO||a.encoding===bP||a.encoding===bQ)}function fu(a){let b=new cS(768,768,a);return b.texture.mapping=aj,b.texture.name="PMREM.cubeUv",b.scissorTest=!0,b}function fv(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function fw(){let a=new cG(1,1),b=new ff({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:a},inputEncoding:{value:fi[bO]},outputEncoding:{value:fi[bO]}},vertexShader:fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${fz()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:t,depthTest:!1,depthWrite:!1});return b}function fx(){let a=new ff({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:fi[bO]},outputEncoding:{value:fi[bO]}},vertexShader:fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${fz()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:t,depthTest:!1,depthWrite:!1});return a}function fy(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function fz(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function fA(a){let b=new WeakMap,c=null;function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture&& !1===e.isRenderTargetTexture){let f=e.mapping,g=f===ah||f===ai,h=f===af||f===ag;if(g||h){if(b.has(e))return b.get(e).texture;{let i=e.image;if(!(g&&i&&i.height>0||h&&i&&function a(b){let c=0;for(let d=0;d<6;d++)void 0!==b[d]&&c++;return 6===c}(i)))return null;{let j=a.getRenderTarget();null===c&&(c=new fs(a));let k=g?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,k),a.setRenderTarget(j),e.addEventListener("dispose",d),k.texture}}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function fB(a){let b={};function c(c){if(void 0!==b[c])return b[c];let d;switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,d}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?c("EXT_color_buffer_float"):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function fC(a,b,c,d){let e={},f=new WeakMap;function g(a){let h=a.target;for(let i in null!==h.index&&b.remove(h.index),h.attributes)b.remove(h.attributes[i]);h.removeEventListener("dispose",g),delete e[h.id];let j=f.get(h);j&&(b.remove(j),f.delete(h)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let h=d.array;g=d.version;for(let i=0,j=h.length;i<j;i+=3){let k=h[i+0],l=h[i+1],m=h[i+2];c.push(k,l,l,m,m,k)}}else{let n=e.array;g=e.version;for(let o=0,p=n.length/3-1;o<p;o+=3){let q=o+0,r=o+1,s=o+2;c.push(q,r,r,s,s,q)}}let t=new(cI(c)>65535?ei:eg)(c,1);t.version=g;let u=f.get(a);u&&b.remove(u),f.set(a,t)}return{get:function(a,b){return!0===e[b.id]||(b.addEventListener("dispose",g),e[b.id]=!0,c.memory.geometries++),b},update:function(a){let c=a.attributes;for(let d in c)b.update(c[d],34962);let e=a.morphAttributes;for(let f in e){let g=e[f];for(let h=0,i=g.length;h<i;h++)b.update(g[h],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function fD(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}let h,i;this.setMode=g,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,d){a.drawElements(f,d,h,b*i),c.update(d,f,1)},this.renderInstances=function(d,g,j){if(0===j)return;let k,l;if(e)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}k[l](f,g,h,d*i,j),c.update(g,f,j)}}function fE(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++,b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(a,c,d){switch(b.calls++,c){case 4:b.triangles+=d*(a/3);break;case 1:b.lines+=d*(a/2);break;case 3:b.lines+=d*(a-1);break;case 2:b.lines+=d*a;break;case 0:b.points+=d*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}class fF extends cP{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=ao,this.minFilter=ao,this.wrapR=am,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}function fG(a,b){return a[0]-b[0]}function fH(a,b){return Math.abs(b[1])-Math.abs(a[1])}function fI(a,b){let c=1,d=b.isInterleavedBufferAttribute?b.data.array:b.array;d instanceof Int8Array?c=127:d instanceof Int16Array?c=32767:d instanceof Int32Array?c=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",d),a.divideScalar(c)}function fJ(a,b,c){let d={},e=new Float32Array(8),f=new WeakMap,g=new cW,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(i,j,k,l){let m=i.morphTargetInfluences;if(!0===b.isWebGL2){let n=j.morphAttributes.position.length,o=f.get(j);if(void 0===o||o.count!==n){void 0!==o&&o.texture.dispose();let p=void 0!==j.morphAttributes.normal,q=j.morphAttributes.position,r=j.morphAttributes.normal||[],s=j.attributes.position.count,t=!0===p?2:1,u=s*t,v=1;u>b.maxTextureSize&&(v=Math.ceil(u/b.maxTextureSize),u=b.maxTextureSize);let w=new Float32Array(u*v*4*n),x=new fF(w,u,v,n);x.format=aM,x.type=aE;let y=4*t;for(let z=0;z<n;z++){let A=q[z],B=r[z],C=u*v*4*z;for(let D=0;D<A.count;D++){g.fromBufferAttribute(A,D),!0===A.normalized&&fI(g,A);let E=D*y;w[C+E+0]=g.x,w[C+E+1]=g.y,w[C+E+2]=g.z,w[C+E+3]=0,!0===p&&(g.fromBufferAttribute(B,D),!0===B.normalized&&fI(g,B),w[C+E+4]=g.x,w[C+E+5]=g.y,w[C+E+6]=g.z,w[C+E+7]=0)}}o={count:n,texture:x,size:new cG(u,v)},f.set(j,o)}let F=0;for(let G=0;G<m.length;G++)F+=m[G];let H=j.morphTargetsRelative?1:1-F;l.getUniforms().setValue(a,"morphTargetBaseInfluence",H),l.getUniforms().setValue(a,"morphTargetInfluences",m),l.getUniforms().setValue(a,"morphTargetsTexture",o.texture,c),l.getUniforms().setValue(a,"morphTargetsTextureSize",o.size)}else{let I=void 0===m?0:m.length,J=d[j.id];if(void 0===J||J.length!==I){J=[];for(let K=0;K<I;K++)J[K]=[K,0];d[j.id]=J}for(let L=0;L<I;L++){let M=J[L];M[0]=L,M[1]=m[L]}J.sort(fH);for(let N=0;N<8;N++)N<I&&J[N][1]?(h[N][0]=J[N][0],h[N][1]=J[N][1]):(h[N][0]=Number.MAX_SAFE_INTEGER,h[N][1]=0);h.sort(fG);let O=j.morphAttributes.position,P=j.morphAttributes.normal,Q=0;for(let R=0;R<8;R++){let S=h[R],T=S[0],U=S[1];T!==Number.MAX_SAFE_INTEGER&&U?(O&&j.getAttribute("morphTarget"+R)!==O[T]&&j.setAttribute("morphTarget"+R,O[T]),P&&j.getAttribute("morphNormal"+R)!==P[T]&&j.setAttribute("morphNormal"+R,P[T]),e[R]=U,Q+=U):(O&& !0===j.hasAttribute("morphTarget"+R)&&j.deleteAttribute("morphTarget"+R),P&& !0===j.hasAttribute("morphNormal"+R)&&j.deleteAttribute("morphNormal"+R),e[R]=0)}let V=j.morphTargetsRelative?1:1-Q;l.getUniforms().setValue(a,"morphTargetBaseInfluence",V),l.getUniforms().setValue(a,"morphTargetInfluences",e)}}}}function fK(a,b,c,d){let e=new WeakMap;function f(a){let b=a.target;b.removeEventListener("dispose",f),c.remove(b.instanceMatrix),null!==b.instanceColor&&c.remove(b.instanceColor)}return{update:function(a){let g=d.render.frame,h=a.geometry,i=b.get(a,h);return e.get(i)!==g&&(b.update(i),e.set(i,g)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",f)&&a.addEventListener("dispose",f),c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),i},dispose:function(){e=new WeakMap}}}fF.prototype.isDataTexture2DArray=!0;class fL extends cP{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=ao,this.minFilter=ao,this.wrapR=am,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}fL.prototype.isDataTexture3D=!0;let fM=new cP,fN=new fF,fO=new fL,fP=new eV,fQ=[],fR=[],fS=new Float32Array(16),fT=new Float32Array(9),fU=new Float32Array(4);function fV(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=fQ[e];if(void 0===f&&(f=new Float32Array(e),fQ[e]=f),0!==b){d.toArray(f,0);for(let g=1,h=0;g!==b;++g)h+=c,a[g].toArray(f,h)}return f}function fW(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function fX(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function fY(a,b){let c=fR[b];void 0===c&&(c=new Int32Array(b),fR[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function fZ(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function f$(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(fW(c,b))return;a.uniform2fv(this.addr,b),fX(c,b)}}function f_(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(fW(c,b))return;a.uniform3fv(this.addr,b),fX(c,b)}}function f0(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(fW(c,b))return;a.uniform4fv(this.addr,b),fX(c,b)}}function f1(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fW(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),fX(c,b)}else{if(fW(c,d))return;fU.set(d),a.uniformMatrix2fv(this.addr,!1,fU),fX(c,d)}}function f2(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fW(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),fX(c,b)}else{if(fW(c,d))return;fT.set(d),a.uniformMatrix3fv(this.addr,!1,fT),fX(c,d)}}function f3(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fW(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),fX(c,b)}else{if(fW(c,d))return;fS.set(d),a.uniformMatrix4fv(this.addr,!1,fS),fX(c,d)}}function f4(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function f5(a,b){let c=this.cache;fW(c,b)||(a.uniform2iv(this.addr,b),fX(c,b))}function f6(a,b){let c=this.cache;fW(c,b)||(a.uniform3iv(this.addr,b),fX(c,b))}function f7(a,b){let c=this.cache;fW(c,b)||(a.uniform4iv(this.addr,b),fX(c,b))}function f8(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function f9(a,b){let c=this.cache;fW(c,b)||(a.uniform2uiv(this.addr,b),fX(c,b))}function ga(a,b){let c=this.cache;fW(c,b)||(a.uniform3uiv(this.addr,b),fX(c,b))}function gb(a,b){let c=this.cache;fW(c,b)||(a.uniform4uiv(this.addr,b),fX(c,b))}function gc(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.safeSetTexture2D(b||fM,e)}function gd(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||fO,e)}function ge(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.safeSetTextureCube(b||fP,e)}function gf(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||fN,e)}function gg(a,b){a.uniform1fv(this.addr,b)}function gh(a,b){let c=fV(b,this.size,2);a.uniform2fv(this.addr,c)}function gi(a,b){let c=fV(b,this.size,3);a.uniform3fv(this.addr,c)}function gj(a,b){let c=fV(b,this.size,4);a.uniform4fv(this.addr,c)}function gk(a,b){let c=fV(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function gl(a,b){let c=fV(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function gm(a,b){let c=fV(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function gn(a,b){a.uniform1iv(this.addr,b)}function go(a,b){a.uniform2iv(this.addr,b)}function gp(a,b){a.uniform3iv(this.addr,b)}function gq(a,b){a.uniform4iv(this.addr,b)}function gr(a,b){a.uniform1uiv(this.addr,b)}function gs(a,b){a.uniform2uiv(this.addr,b)}function gt(a,b){a.uniform3uiv(this.addr,b)}function gu(a,b){a.uniform4uiv(this.addr,b)}function gv(a,b,c){let d=b.length,e=fY(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.safeSetTexture2D(b[f]||fM,e[f])}function gw(a,b,c){let d=b.length,e=fY(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.safeSetTextureCube(b[f]||fP,e[f])}function gx(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return fZ;case 35664:return f$;case 35665:return f_;case 35666:return f0;case 35674:return f1;case 35675:return f2;case 35676:return f3;case 5124:case 35670:return f4;case 35667:case 35671:return f5;case 35668:case 35672:return f6;case 35669:case 35673:return f7;case 5125:return f8;case 36294:return f9;case 36295:return ga;case 36296:return gb;case 35678:case 36198:case 36298:case 36306:case 35682:return gc;case 35679:case 36299:case 36307:return gd;case 35680:case 36300:case 36308:case 36293:return ge;case 36289:case 36303:case 36311:case 36292:return gf}}(b.type)}function gy(a,b,c){this.id=a,this.addr=c,this.cache=[],this.size=b.size,this.setValue=function(a){switch(a){case 5126:return gg;case 35664:return gh;case 35665:return gi;case 35666:return gj;case 35674:return gk;case 35675:return gl;case 35676:return gm;case 5124:case 35670:return gn;case 35667:case 35671:return go;case 35668:case 35672:return gp;case 35669:case 35673:return gq;case 5125:return gr;case 36294:return gs;case 36295:return gt;case 36296:return gu;case 35678:case 36198:case 36298:case 36306:case 35682:return gv;case 35680:case 36300:case 36308:case 36293:return gw}}(b.type)}function gz(a){this.id=a,this.seq=[],this.map={}}gy.prototype.updateCache=function(a){let b=this.cache;a instanceof Float32Array&&b.length!==a.length&&(this.cache=new Float32Array(a.length)),fX(b,a)},gz.prototype.setValue=function(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let g=d[e];g.setValue(a,b[g.id],c)}};let gA=/(\w+)(\])?(\[|\.)?/g;function gB(a,b){a.seq.push(b),a.map[b.id]=b}function gC(a,b,c){let d=a.name,e=d.length;for(gA.lastIndex=0;;){let f=gA.exec(d),g=gA.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){gB(c,void 0===j?new gx(h,a,b):new gy(h,a,b));break}{let k=c.map,l=k[h];void 0===l&&(l=new gz(h),gB(c,l)),c=l}}}function gD(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){let e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);gC(e,f,this)}}function gE(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}gD.prototype.setValue=function(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)},gD.prototype.setOptional=function(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)},gD.upload=function(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}},gD.seqWithValue=function(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let f=a[d];f.id in b&&c.push(f)}return c};let gF=0;function gG(a){switch(a){case bO:return["Linear","( value )"];case bP:return["sRGB","( value )"];case bR:return["RGBE","( value )"];case bT:return["RGBM","( value, 7.0 )"];case bU:return["RGBM","( value, 16.0 )"];case bV:return["RGBD","( value, 256.0 )"];case bQ:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case bS:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}function gH(a,b,c){let d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();return d&&""===e?"":c.toUpperCase()+"\n\n"+e+"\n\n"+function(a){let b=a.split("\n");for(let c=0;c<b.length;c++)b[c]=c+1+": "+b[c];return b.join("\n")}(a.getShaderSource(b))}function gI(a,b){let c=gG(b);return"vec4 "+a+"( vec4 value ) { return "+c[0]+"ToLinear"+c[1]+"; }"}function gJ(a){return""!==a}function gK(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function gL(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let gM=/^[ \t]*#include +<([\w\d./]+)>/gm;function gN(a){return a.replace(gM,gO)}function gO(a,b){let c=e5[b];if(void 0===c)throw Error("Can not resolve #include <"+b+">");return gN(c)}let gP=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,gQ=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gR(a){return a.replace(gQ,gT).replace(gP,gS)}function gS(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),gT(a,b,c,d)}function gT(a,b,c,d){let e="";for(let f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+f+" ]").replace(/UNROLLED_LOOP_INDEX/g,f);return e}function gU(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function gV(a,b,c,d){var e;let f=a.getContext(),g=c.defines,h=c.vertexShader,i=c.fragmentShader,j,k=(j="SHADOWMAP_TYPE_BASIC",(e=c).shadowMapType===l?j="SHADOWMAP_TYPE_PCF":e.shadowMapType===m?j="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===n&&(j="SHADOWMAP_TYPE_VSM"),j),o=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case af:case ag:b="ENVMAP_TYPE_CUBE";break;case aj:case ak:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),p=function(a){let b="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case ag:case ak:b="ENVMAP_MODE_REFRACTION"}return b}(c),q=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case X:b="ENVMAP_BLENDING_MULTIPLY";break;case Y:b="ENVMAP_BLENDING_MIX";break;case Z:b="ENVMAP_BLENDING_ADD"}return b}(c),r=a.gammaFactor>0?a.gammaFactor:1,s=c.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUV||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(gJ).join("\n")}(c),t=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(g),u=f.createProgram(),v,w,x=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((v=[t].filter(gJ).join("\n")).length>0&&(v+="\n"),(w=[s,t].filter(gJ).join("\n")).length>0&&(w+="\n")):(v=[gU(c),"#define SHADER_NAME "+c.shaderName,t,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+r,"#define MAX_BONES "+c.maxBones,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+p:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularTintMap?"#define USE_SPECULARTINTMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&& !1===c.flatShading?"#define USE_MORPHNORMALS":"",c.morphTargets&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",c.morphTargets&&c.isWebGL2?"#define MORPHTARGETS_COUNT "+c.morphTargetsCount:"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(gJ).join("\n"),w=[s,gU(c),"#define SHADER_NAME "+c.shaderName,t,"#define GAMMA_FACTOR "+r,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+o:"",c.envMap?"#define "+p:"",c.envMap?"#define "+q:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoat?"#define USE_CLEARCOAT":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularTintMap?"#define USE_SPECULARTINTMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaTest?"#define USE_ALPHATEST":"",c.sheen?"#define USE_SHEEN":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(c.extensionShaderTextureLOD||c.envMap)&&c.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",c.toneMapping!==$?"#define TONE_MAPPING":"",c.toneMapping!==$?e5.tonemapping_pars_fragment:"",c.toneMapping!==$?function(a,b){let c;switch(b){case _:c="Linear";break;case aa:c="Reinhard";break;case ab:c="OptimizedCineon";break;case ac:c="ACESFilmic";break;case ad:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",c.format===aL?"#define OPAQUE":"",e5.encodings_pars_fragment,c.map?gI("mapTexelToLinear",c.mapEncoding):"",c.matcap?gI("matcapTexelToLinear",c.matcapEncoding):"",c.envMap?gI("envMapTexelToLinear",c.envMapEncoding):"",c.emissiveMap?gI("emissiveMapTexelToLinear",c.emissiveMapEncoding):"",c.specularTintMap?gI("specularTintMapTexelToLinear",c.specularTintMapEncoding):"",c.lightMap?gI("lightMapTexelToLinear",c.lightMapEncoding):"",function(a,b){let c=gG(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }"}("linearToOutputTexel",c.outputEncoding),c.depthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(gJ).join("\n")),h=gN(h),h=gK(h,c),h=gL(h,c),i=gN(i),i=gK(i,c),i=gL(i,c),h=gR(h),i=gR(i),c.isWebGL2&& !0!==c.isRawShaderMaterial&&(x="#version 300 es\n",v="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+v,w=["#define varying in",c.glslVersion===co?"":"out highp vec4 pc_fragColor;",c.glslVersion===co?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);let y=x+v+h,z=x+w+i,A=gE(f,35633,y),B=gE(f,35632,z);if(f.attachShader(u,A),f.attachShader(u,B),void 0!==c.index0AttributeName?f.bindAttribLocation(u,0,c.index0AttributeName):!0===c.morphTargets&&f.bindAttribLocation(u,0,"position"),f.linkProgram(u),a.debug.checkShaderErrors){let C=f.getProgramInfoLog(u).trim(),D=f.getShaderInfoLog(A).trim(),E=f.getShaderInfoLog(B).trim(),F=!0,G=!0;if(!1===f.getProgramParameter(u,35714)){F=!1;let H=gH(f,A,"vertex"),I=gH(f,B,"fragment");console.error("THREE.WebGLProgram: Shader Error "+f.getError()+" - VALIDATE_STATUS "+f.getProgramParameter(u,35715)+"\n\nProgram Info Log: "+C+"\n"+H+"\n"+I)}else""!==C?console.warn("THREE.WebGLProgram: Program Info Log:",C):(""===D||""===E)&&(G=!1);G&&(this.diagnostics={runnable:F,programLog:C,vertexShader:{log:D,prefix:v},fragmentShader:{log:E,prefix:w}})}f.deleteShader(A),f.deleteShader(B);let J;this.getUniforms=function(){return void 0===J&&(J=new gD(f,u)),J};let K;return this.getAttributes=function(){return void 0===K&&(K=function(a,b){let c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){let f=a.getActiveAttrib(b,e),g=f.name,h=1;35674===f.type&&(h=2),35675===f.type&&(h=3),35676===f.type&&(h=4),c[g]={type:f.type,location:a.getAttribLocation(b,g),locationSize:h}}return c}(f,u)),K},this.destroy=function(){d.releaseStatesOfProgram(this),f.deleteProgram(u),this.program=void 0},this.name=c.shaderName,this.id=gF++,this.cacheKey=b,this.usedTimes=1,this.program=u,this.vertexShader=A,this.fragmentShader=B,this}function gW(a,b,c,d,e,f,g){let h=[],i=e.isWebGL2,j=e.logarithmicDepthBuffer,k=e.floatVertexTextures,l=e.maxVertexUniforms,m=e.vertexTextures,n=e.precision,o={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},r=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheen","transmission","transmissionMap","thicknessMap"];function s(a){let b;return a&&a.isTexture?b=a.encoding:a&&a.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),b=a.texture.encoding):b=bO,i&&a&&a.isTexture&&a.format===aM&&a.type===ay&&a.encoding===bP&&(b=bO),b}return{getParameters:function(f,h,r,t,u){let v=t.fog,w=f.isMeshStandardMaterial?t.environment:null,x=(f.isMeshStandardMaterial?c:b).get(f.envMap||w),y=o[f.type],z=u.isSkinnedMesh?function(a){let b=a.skeleton,c=b.bones;if(k)return 1024;{let d=l,e=Math.floor((d-20)/4),f=Math.min(e,c.length);return f<c.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+c.length+" bones. This GPU supports "+f+"."),0):f}}(u):0;null!==f.precision&&(n=e.getMaxPrecision(f.precision))!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",n,"instead.");let A,B;if(y){let C=e7[y];A=C.vertexShader,B=C.fragmentShader}else A=f.vertexShader,B=f.fragmentShader;let D=a.getRenderTarget(),E=f.alphaTest>0,F=f.clearcoat>0,G={isWebGL2:i,shaderID:y,shaderName:f.type,vertexShader:A,fragmentShader:B,defines:f.defines,isRawShaderMaterial:!0===f.isRawShaderMaterial,glslVersion:f.glslVersion,precision:n,instancing:!0===u.isInstancedMesh,instancingColor:!0===u.isInstancedMesh&&null!==u.instanceColor,supportsVertexTextures:m,outputEncoding:null!==D?s(D.texture):a.outputEncoding,map:!!f.map,mapEncoding:s(f.map),matcap:!!f.matcap,matcapEncoding:s(f.matcap),envMap:!!x,envMapMode:x&&x.mapping,envMapEncoding:s(x),envMapCubeUV:!!x&&(x.mapping===aj||x.mapping===ak),lightMap:!!f.lightMap,lightMapEncoding:s(f.lightMap),aoMap:!!f.aoMap,emissiveMap:!!f.emissiveMap,emissiveMapEncoding:s(f.emissiveMap),bumpMap:!!f.bumpMap,normalMap:!!f.normalMap,objectSpaceNormalMap:f.normalMapType===bZ,tangentSpaceNormalMap:f.normalMapType===bY,clearcoat:F,clearcoatMap:F&&!!f.clearcoatMap,clearcoatRoughnessMap:F&&!!f.clearcoatRoughnessMap,clearcoatNormalMap:F&&!!f.clearcoatNormalMap,displacementMap:!!f.displacementMap,roughnessMap:!!f.roughnessMap,metalnessMap:!!f.metalnessMap,specularMap:!!f.specularMap,specularIntensityMap:!!f.specularIntensityMap,specularTintMap:!!f.specularTintMap,specularTintMapEncoding:s(f.specularTintMap),alphaMap:!!f.alphaMap,alphaTest:E,gradientMap:!!f.gradientMap,sheen:f.sheen>0,transmission:f.transmission>0,transmissionMap:!!f.transmissionMap,thicknessMap:!!f.thicknessMap,combine:f.combine,vertexTangents:!!f.normalMap&&!!u.geometry&&!!u.geometry.attributes.tangent,vertexColors:f.vertexColors,vertexAlphas:!0===f.vertexColors&&!!u.geometry&&!!u.geometry.attributes.color&&4===u.geometry.attributes.color.itemSize,vertexUvs:!!f.map||!!f.bumpMap||!!f.normalMap||!!f.specularMap||!!f.alphaMap||!!f.emissiveMap||!!f.roughnessMap||!!f.metalnessMap||!!f.clearcoatMap||!!f.clearcoatRoughnessMap||!!f.clearcoatNormalMap||!!f.displacementMap||!!f.transmissionMap||!!f.thicknessMap||!!f.specularIntensityMap||!!f.specularTintMap,uvsVertexOnly:!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatNormalMap||f.transmission>0||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularTintMap)&&!!f.displacementMap,fog:!!v,useFog:f.fog,fogExp2:v&&v.isFogExp2,flatShading:!!f.flatShading,sizeAttenuation:f.sizeAttenuation,logarithmicDepthBuffer:j,skinning:!0===u.isSkinnedMesh&&z>0,maxBones:z,useVertexTexture:k,morphTargets:!!u.geometry&&!!u.geometry.morphAttributes.position,morphNormals:!!u.geometry&&!!u.geometry.morphAttributes.normal,morphTargetsCount:u.geometry&&u.geometry.morphAttributes.position?u.geometry.morphAttributes.position.length:0,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,format:f.format,dithering:f.dithering,shadowMapEnabled:a.shadowMap.enabled&&r.length>0,shadowMapType:a.shadowMap.type,toneMapping:f.toneMapped?a.toneMapping:$,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:f.side===q,flipSided:f.side===p,depthPacking:void 0!==f.depthPacking&&f.depthPacking,index0AttributeName:f.index0AttributeName,extensionDerivatives:f.extensions&&f.extensions.derivatives,extensionFragDepth:f.extensions&&f.extensions.fragDepth,extensionDrawBuffers:f.extensions&&f.extensions.drawBuffers,extensionShaderTextureLOD:f.extensions&&f.extensions.shaderTextureLOD,rendererExtensionFragDepth:i||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:i||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:i||d.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()};return G},getProgramCacheKey:function(b){let c=[];if(b.shaderID?c.push(b.shaderID):(c.push(b.fragmentShader),c.push(b.vertexShader)),void 0!==b.defines)for(let d in b.defines)c.push(d),c.push(b.defines[d]);if(!1===b.isRawShaderMaterial){for(let e=0;e<r.length;e++)c.push(b[r[e]]);c.push(a.outputEncoding),c.push(a.gammaFactor)}return c.push(b.customProgramCacheKey),c.join()},getUniforms:function(a){let b=o[a.type],c;if(b){let d=e7[b];c=eQ.clone(d.uniforms)}else c=a.uniforms;return c},acquireProgram:function(b,c){let d;for(let e=0,g=h.length;e<g;e++){let i=h[e];if(i.cacheKey===c){d=i,++d.usedTimes;break}}return void 0===d&&(d=new gV(a,c,b,f),h.push(d)),d},releaseProgram:function(a){if(0== --a.usedTimes){let b=h.indexOf(a);h[b]=h[h.length-1],h.pop(),a.destroy()}},programs:h}}function gX(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function gY(a,b){if(a.groupOrder!==b.groupOrder)return a.groupOrder-b.groupOrder;if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;if(a.program!==b.program)return a.program.id-b.program.id;if(a.material.id!==b.material.id)return a.material.id-b.material.id;if(a.z!==b.z)return a.z-b.z;else return a.id-b.id}function gZ(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function g$(a){let b=[],c=0,d=[],e=[],f=[],g={id:-1};function h(d,e,f,h,i,j){let k=b[c],l=a.get(f);return void 0===k?(k={id:d.id,object:d,geometry:e,material:f,program:l.program||g,groupOrder:h,renderOrder:d.renderOrder,z:i,group:j},b[c]=k):(k.id=d.id,k.object=d,k.geometry=e,k.material=f,k.program=l.program||g,k.groupOrder=h,k.renderOrder=d.renderOrder,k.z=i,k.group=j),c++,k}return{opaque:d,transmissive:e,transparent:f,init:function(){c=0,d.length=0,e.length=0,f.length=0},push:function(a,b,c,g,i,j){let k=h(a,b,c,g,i,j);c.transmission>0?e.push(k):!0===c.transparent?f.push(k):d.push(k)},unshift:function(a,b,c,g,i,j){let k=h(a,b,c,g,i,j);c.transmission>0?e.unshift(k):!0===c.transparent?f.unshift(k):d.unshift(k)},finish:function(){for(let a=c,d=b.length;a<d;a++){let e=b[a];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.program=null,e.group=null}},sort:function(a,b){d.length>1&&d.sort(a||gY),e.length>1&&e.sort(b||gZ),f.length>1&&f.sort(b||gZ)}}}function g_(a){let b=new WeakMap;return{get:function(c,d){let e;return!1===b.has(c)?(e=new g$(a),b.set(c,[e])):d>=b.get(c).length?(e=new g$(a),b.get(c).push(e)):e=b.get(c)[d],e},dispose:function(){b=new WeakMap}}}function g0(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":c={direction:new cW,color:new d7};break;case"SpotLight":c={position:new cW,direction:new cW,color:new d7,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new cW,color:new d7,distance:0,decay:0};break;case"HemisphereLight":c={direction:new cW,skyColor:new d7,groundColor:new d7};break;case"RectAreaLight":c={color:new d7,position:new cW,halfWidth:new cW,halfHeight:new cW}}return a[b.id]=c,c}}}let g1=0;function g2(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function g3(a,b){let c=new g0,d=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new cG};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new cG,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let f=0;f<9;f++)e.probe.push(new cW);let g=new cW,h=new dq,i=new dq;return{setup:function(f,g){let h=0,i=0,j=0;for(let k=0;k<9;k++)e.probe[k].set(0,0,0);let l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f.sort(g2);let t=!0!==g?Math.PI:1;for(let u=0,v=f.length;u<v;u++){let w=f[u],x=w.color,y=w.intensity,z=w.distance,A=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)h+=x.r*y*t,i+=x.g*y*t,j+=x.b*y*t;else if(w.isLightProbe)for(let B=0;B<9;B++)e.probe[B].addScaledVector(w.sh.coefficients[B],y);else if(w.isDirectionalLight){let C=c.get(w);if(C.color.copy(w.color).multiplyScalar(w.intensity*t),w.castShadow){let D=w.shadow,E=d.get(w);E.shadowBias=D.bias,E.shadowNormalBias=D.normalBias,E.shadowRadius=D.radius,E.shadowMapSize=D.mapSize,e.directionalShadow[l]=E,e.directionalShadowMap[l]=A,e.directionalShadowMatrix[l]=w.shadow.matrix,q++}e.directional[l]=C,l++}else if(w.isSpotLight){let F=c.get(w);if(F.position.setFromMatrixPosition(w.matrixWorld),F.color.copy(x).multiplyScalar(y*t),F.distance=z,F.coneCos=Math.cos(w.angle),F.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),F.decay=w.decay,w.castShadow){let G=w.shadow,H=d.get(w);H.shadowBias=G.bias,H.shadowNormalBias=G.normalBias,H.shadowRadius=G.radius,H.shadowMapSize=G.mapSize,e.spotShadow[n]=H,e.spotShadowMap[n]=A,e.spotShadowMatrix[n]=w.shadow.matrix,s++}e.spot[n]=F,n++}else if(w.isRectAreaLight){let I=c.get(w);I.color.copy(x).multiplyScalar(y),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),e.rectArea[o]=I,o++}else if(w.isPointLight){let J=c.get(w);if(J.color.copy(w.color).multiplyScalar(w.intensity*t),J.distance=w.distance,J.decay=w.decay,w.castShadow){let K=w.shadow,L=d.get(w);L.shadowBias=K.bias,L.shadowNormalBias=K.normalBias,L.shadowRadius=K.radius,L.shadowMapSize=K.mapSize,L.shadowCameraNear=K.camera.near,L.shadowCameraFar=K.camera.far,e.pointShadow[m]=L,e.pointShadowMap[m]=A,e.pointShadowMatrix[m]=w.shadow.matrix,r++}e.point[m]=J,m++}else if(w.isHemisphereLight){let M=c.get(w);M.skyColor.copy(w.color).multiplyScalar(y*t),M.groundColor.copy(w.groundColor).multiplyScalar(y*t),e.hemi[p]=M,p++}}o>0&&(b.isWebGL2?(e.rectAreaLTC1=e6.LTC_FLOAT_1,e.rectAreaLTC2=e6.LTC_FLOAT_2):!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=e6.LTC_FLOAT_1,e.rectAreaLTC2=e6.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(e.rectAreaLTC1=e6.LTC_HALF_1,e.rectAreaLTC2=e6.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),e.ambient[0]=h,e.ambient[1]=i,e.ambient[2]=j;let N=e.hash;(N.directionalLength!==l||N.pointLength!==m||N.spotLength!==n||N.rectAreaLength!==o||N.hemiLength!==p||N.numDirectionalShadows!==q||N.numPointShadows!==r||N.numSpotShadows!==s)&&(e.directional.length=l,e.spot.length=n,e.rectArea.length=o,e.point.length=m,e.hemi.length=p,e.directionalShadow.length=q,e.directionalShadowMap.length=q,e.pointShadow.length=r,e.pointShadowMap.length=r,e.spotShadow.length=s,e.spotShadowMap.length=s,e.directionalShadowMatrix.length=q,e.pointShadowMatrix.length=r,e.spotShadowMatrix.length=s,N.directionalLength=l,N.pointLength=m,N.spotLength=n,N.rectAreaLength=o,N.hemiLength=p,N.numDirectionalShadows=q,N.numPointShadows=r,N.numSpotShadows=s,e.version=g1++)},setupView:function(a,b){let c=0,d=0,f=0,j=0,k=0,l=b.matrixWorldInverse;for(let m=0,n=a.length;m<n;m++){let o=a[m];if(o.isDirectionalLight){let p=e.directional[c];p.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),p.direction.sub(g),p.direction.transformDirection(l),c++}else if(o.isSpotLight){let q=e.spot[f];q.position.setFromMatrixPosition(o.matrixWorld),q.position.applyMatrix4(l),q.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),q.direction.sub(g),q.direction.transformDirection(l),f++}else if(o.isRectAreaLight){let r=e.rectArea[j];r.position.setFromMatrixPosition(o.matrixWorld),r.position.applyMatrix4(l),i.identity(),h.copy(o.matrixWorld),h.premultiply(l),i.extractRotation(h),r.halfWidth.set(.5*o.width,0,0),r.halfHeight.set(0,.5*o.height,0),r.halfWidth.applyMatrix4(i),r.halfHeight.applyMatrix4(i),j++}else if(o.isPointLight){let s=e.point[d];s.position.setFromMatrixPosition(o.matrixWorld),s.position.applyMatrix4(l),d++}else if(o.isHemisphereLight){let t=e.hemi[k];t.direction.setFromMatrixPosition(o.matrixWorld),t.direction.transformDirection(l),t.direction.normalize(),k++}}},state:e}}function g4(a,b){let c=new g3(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function g5(a,b){let c=new WeakMap;return{get:function(d,e=0){let f;return!1===c.has(d)?(f=new g4(a,b),c.set(d,[f])):e>=c.get(d).length?(f=new g4(a,b),c.get(d).push(f)):f=c.get(d)[e],f},dispose:function(){c=new WeakMap}}}class g6 extends d0{constructor(a){super(),this.type="MeshDepthMaterial",this.depthPacking=bW,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}g6.prototype.isMeshDepthMaterial=!0;class g7 extends d0{constructor(a){super(),this.type="MeshDistanceMaterial",this.referencePosition=new cW,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function g8(a,b,c){let d=new e1,e=new cG,f=new cG,g=new cR,h=new g6({depthPacking:bX}),i=new g7,j={},k=c.maxTextureSize,m={0:p,1:o,2:q},r=new eR({uniforms:{shadow_pass:{value:null},resolution:{value:new cG},radius:{value:4},samples:{value:8}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),s=r.clone();s.defines.HORIZONTAL_PASS=1;let u=new et;u.setAttribute("position",new eb(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let v=new eL(u,r),w=this;function x(c,d){let e=b.update(v);r.uniforms.shadow_pass.value=c.map.texture,r.uniforms.resolution.value=c.mapSize,r.uniforms.radius.value=c.radius,r.uniforms.samples.value=c.blurSamples,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,e,r,v,null),s.uniforms.shadow_pass.value=c.mapPass.texture,s.uniforms.resolution.value=c.mapSize,s.uniforms.radius.value=c.radius,s.uniforms.samples.value=c.blurSamples,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,e,s,v,null)}function y(b,c,d,e,f,g,k){let l=null,o=!0===e.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(l=void 0!==o?o:!0===e.isPointLight?i:h,a.localClippingEnabled&& !0===d.clipShadows&&0!==d.clippingPlanes.length||d.displacementMap&&0!==d.displacementScale||d.alphaMap&&d.alphaTest>0){let p=l.uuid,q=d.uuid,r=j[p];void 0===r&&(r={},j[p]=r);let s=r[q];void 0===s&&(s=l.clone(),r[q]=s),l=s}return l.visible=d.visible,l.wireframe=d.wireframe,k===n?l.side=null!==d.shadowSide?d.shadowSide:d.side:l.side=null!==d.shadowSide?d.shadowSide:m[d.side],l.alphaMap=d.alphaMap,l.alphaTest=d.alphaTest,l.clipShadows=d.clipShadows,l.clippingPlanes=d.clippingPlanes,l.clipIntersection=d.clipIntersection,l.displacementMap=d.displacementMap,l.displacementScale=d.displacementScale,l.displacementBias=d.displacementBias,l.wireframeLinewidth=d.wireframeLinewidth,l.linewidth=d.linewidth,!0===e.isPointLight&& !0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(e.matrixWorld),l.nearDistance=f,l.farDistance=g),l}function z(c,e,f,g,h){if(!1===c.visible)return;let i=c.layers.test(e.layers);if(i&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&h===n)&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);let j=b.update(c),k=c.material;if(Array.isArray(k)){let l=j.groups;for(let m=0,o=l.length;m<o;m++){let p=l[m],q=k[p.materialIndex];if(q&&q.visible){let r=y(c,j,q,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,r,c,p)}}}else if(k.visible){let s=y(c,j,k,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,s,c,null)}}let t=c.children;for(let u=0,v=t.length;u<v;u++)z(t[u],e,f,g,h)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=l,this.render=function(b,c,h){if(!1===w.enabled|| !1===w.autoUpdate&& !1===w.needsUpdate||0===b.length)return;let i=a.getRenderTarget(),j=a.getActiveCubeFace(),l=a.getActiveMipmapLevel(),m=a.state;m.setBlending(t),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(let o=0,p=b.length;o<p;o++){let q=b[o],r=q.shadow;if(void 0===r){console.warn("THREE.WebGLShadowMap:",q,"has no shadow.");continue}if(!1===r.autoUpdate&& !1===r.needsUpdate)continue;e.copy(r.mapSize);let s=r.getFrameExtents();if(e.multiply(s),f.copy(r.mapSize),(e.x>k||e.y>k)&&(e.x>k&&(f.x=Math.floor(k/s.x),e.x=f.x*s.x,r.mapSize.x=f.x),e.y>k&&(f.y=Math.floor(k/s.y),e.y=f.y*s.y,r.mapSize.y=f.y)),null===r.map&&!r.isPointLightShadow&&this.type===n){let u={minFilter:at,magFilter:at,format:aM};r.map=new cS(e.x,e.y,u),r.map.texture.name=q.name+".shadowMap",r.mapPass=new cS(e.x,e.y,u),r.camera.updateProjectionMatrix()}if(null===r.map){let v={minFilter:ao,magFilter:ao,format:aM};r.map=new cS(e.x,e.y,v),r.map.texture.name=q.name+".shadowMap",r.camera.updateProjectionMatrix()}a.setRenderTarget(r.map),a.clear();let y=r.getViewportCount();for(let A=0;A<y;A++){let B=r.getViewport(A);g.set(f.x*B.x,f.y*B.y,f.x*B.z,f.y*B.w),m.viewport(g),r.updateMatrices(q,A),d=r.getFrustum(),z(c,h,r.camera,q,this.type)}r.isPointLightShadow||this.type!==n||x(r,h),r.needsUpdate=!1}w.needsUpdate=!1,a.setRenderTarget(i,j,l)}}function g9(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new cR,d=null,e=new cR(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(a){a?as(2929):at(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case P:a.depthFunc(512);break;case Q:a.depthFunc(519);break;case R:a.depthFunc(513);break;case S:a.depthFunc(515);break;case T:a.depthFunc(514);break;case U:a.depthFunc(518);break;case V:a.depthFunc(516);break;case W:a.depthFunc(517);break;default:a.depthFunc(515)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},j=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(a){b||(a?as(2960):at(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},k={},l=null,m={},n=null,o=!1,r=null,s=null,X=null,Y=null,Z=null,$=null,_=null,aa=!1,ab=null,ac=null,ad=null,ae=null,af=null,ag=a.getParameter(35661),ah=!1,ai=0,aj=a.getParameter(7938);-1!==aj.indexOf("WebGL")?ah=parseFloat(/^WebGL (\d)/.exec(aj)[1])>=1:-1!==aj.indexOf("OpenGL ES")&&(ah=parseFloat(/^OpenGL ES (\d)/.exec(aj)[1])>=2);let ak=null,al={},am=a.getParameter(3088),an=a.getParameter(2978),ao=new cR().fromArray(am),ap=new cR().fromArray(an);function aq(b,c,d){let e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let g=0;g<d;g++)a.texImage2D(c+g,0,6408,1,1,0,6408,5121,e);return f}let ar={};function as(b){!0!==k[b]&&(a.enable(b),k[b]=!0)}function at(b){!1!==k[b]&&(a.disable(b),k[b]=!1)}ar[3553]=aq(3553,3553,1),ar[34067]=aq(34067,34069,6),e.setClear(0,0,0,1),f.setClear(1),j.setClear(0),as(2929),f.setFunc(S),ay(!1),az(h),as(2884),ax(t);let au={[z]:32774,[A]:32778,[B]:32779};if(d)au[C]=32775,au[D]=32776;else{let av=b.get("EXT_blend_minmax");null!==av&&(au[C]=av.MIN_EXT,au[D]=av.MAX_EXT)}let aw={[E]:0,[F]:1,[G]:768,[I]:770,[O]:776,[M]:774,[K]:772,[H]:769,[J]:771,[N]:775,[L]:773};function ax(b,c,d,e,f,g,h,i){if(b===t){!0===o&&(at(3042),o=!1);return}if(!1===o&&(as(3042),o=!0),b!==y){if(b!==r||i!==aa){if((s!==z||Z!==z)&&(a.blendEquation(32774),s=z,Z=z),i)switch(b){case u:a.blendFuncSeparate(1,771,1,771);break;case v:a.blendFunc(1,1);break;case w:a.blendFuncSeparate(0,0,769,771);break;case x:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case u:a.blendFuncSeparate(770,771,1,771);break;case v:a.blendFunc(770,1);break;case w:a.blendFunc(0,769);break;case x:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}X=null,Y=null,$=null,_=null,r=b,aa=i}return}f=f||c,g=g||d,h=h||e,(c!==s||f!==Z)&&(a.blendEquationSeparate(au[c],au[f]),s=c,Z=f),(d!==X||e!==Y||g!==$||h!==_)&&(a.blendFuncSeparate(aw[d],aw[e],aw[g],aw[h]),X=d,Y=e,$=g,_=h),r=b,aa=null}function ay(b){ab!==b&&(b?a.frontFace(2304):a.frontFace(2305),ab=b)}function az(b){b!==g?(as(2884),b!==ac&&(b===h?a.cullFace(1029):b===i?a.cullFace(1028):a.cullFace(1032))):at(2884),ac=b}function aA(b,c,d){b?(as(32823),(ae!==c||af!==d)&&(a.polygonOffset(c,d),ae=c,af=d)):at(32823)}function aB(b){void 0===b&&(b=33984+ag-1),ak!==b&&(a.activeTexture(b),ak=b)}return{buffers:{color:e,depth:f,stencil:j},enable:as,disable:at,bindFramebuffer:function(b,c){return null===c&&null!==l&&(c=l),m[b]!==c&&(a.bindFramebuffer(b,c),m[b]=c,d&&(36009===b&&(m[36160]=c),36160===b&&(m[36009]=c)),!0)},bindXRFramebuffer:function(b){b!==l&&(a.bindFramebuffer(36160,b),l=b)},useProgram:function(b){return n!==b&&(a.useProgram(b),n=b,!0)},setBlending:ax,setMaterial:function(a,b){a.side===q?at(2884):as(2884);let c=a.side===p;b&&(c=!c),ay(c),a.blending===u&& !1===a.transparent?ax(t):ax(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),f.setFunc(a.depthFunc),f.setTest(a.depthTest),f.setMask(a.depthWrite),e.setMask(a.colorWrite);let d=a.stencilWrite;j.setTest(d),d&&(j.setMask(a.stencilWriteMask),j.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),j.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),aA(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?as(32926):at(32926)},setFlipSided:ay,setCullFace:az,setLineWidth:function(b){b!==ad&&(ah&&a.lineWidth(b),ad=b)},setPolygonOffset:aA,setScissorTest:function(a){a?as(3089):at(3089)},activeTexture:aB,bindTexture:function(b,c){null===ak&&aB();let d=al[ak];void 0===d&&(d={type:void 0,texture:void 0},al[ak]=d),(d.type!==b||d.texture!==c)&&(a.bindTexture(b,c||ar[b]),d.type=b,d.texture=c)},unbindTexture:function(){let b=al[ak];void 0!==b&& void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===ao.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),ao.copy(b))},viewport:function(b){!1===ap.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),ap.copy(b))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===d&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),k={},ak=null,al={},l=null,m={},n=null,o=!1,r=null,s=null,X=null,Y=null,Z=null,$=null,_=null,aa=!1,ab=null,ac=null,ad=null,ae=null,af=null,ao.set(0,0,a.canvas.width,a.canvas.height),ap.set(0,0,a.canvas.width,a.canvas.height),e.reset(),f.reset(),j.reset()}}}function ha(a,b,c,d,e,f,g){let h=e.isWebGL2,i=e.maxTextures,j=e.maxCubemapSize,k=e.maxTextureSize,l=e.maxSamples,m=new WeakMap,n,o=!1;try{o="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(p){}function q(a,b){return o?new OffscreenCanvas(a,b):cL("canvas")}function r(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1|| !0===b){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let f=b?cE:Math.floor,g=f(e*a.width),h=f(e*a.height);void 0===n&&(n=q(g,h));let i=c?q(g,h):n;i.width=g,i.height=h;let j=i.getContext("2d");return j.drawImage(a,0,0,g,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+g+"x"+h+")."),i}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function s(a){return cC(a.width)&&cC(a.height)}function t(a,b){return a.generateMipmaps&&b&&a.minFilter!==ao&&a.minFilter!==at}function u(b,c,e,f,g=1){a.generateMipmap(b);let h=d.get(c);h.__maxMipLevel=Math.log2(Math.max(e,f,g))}function v(c,d,e,f){if(!1===h)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let g=d;return 6403===d&&(5126===e&&(g=33326),5131===e&&(g=33325),5121===e&&(g=33321)),6407===d&&(5126===e&&(g=34837),5131===e&&(g=34843),5121===e&&(g=32849)),6408===d&&(5126===e&&(g=34836),5131===e&&(g=34842),5121===e&&(g=f===bP?35907:32856)),(33325===g||33326===g||34842===g||34836===g)&&b.get("EXT_color_buffer_float"),g}function w(a){return a===ao||a===ap||a===ar?9728:9729}function x(a){let b=a.target;b.removeEventListener("dispose",x),z(b),b.isVideoTexture&&m.delete(b),g.memory.textures--}function y(a){let b=a.target;b.removeEventListener("dispose",y),A(b)}function z(b){let c=d.get(b);void 0!==c.__webglInit&&(a.deleteTexture(c.__webglTexture),d.remove(b))}function A(b){let c=b.texture,e=d.get(b),f=d.get(c);if(b){if(void 0!==f.__webglTexture&&(a.deleteTexture(f.__webglTexture),g.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let h=0;h<6;h++)a.deleteFramebuffer(e.__webglFramebuffer[h]),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer[h]);else a.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&a.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer&&a.deleteRenderbuffer(e.__webglColorRenderbuffer),e.__webglDepthRenderbuffer&&a.deleteRenderbuffer(e.__webglDepthRenderbuffer);if(b.isWebGLMultipleRenderTargets)for(let i=0,j=c.length;i<j;i++){let k=d.get(c[i]);k.__webglTexture&&(a.deleteTexture(k.__webglTexture),g.memory.textures--),d.remove(c[i])}d.remove(c),d.remove(b)}}let B=0;function C(a,b){let e=d.get(a);if(a.isVideoTexture&&N(a),a.version>0&&e.__version!==a.version){let f=a.image;if(void 0===f)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===f.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{I(e,a,b);return}}c.activeTexture(33984+b),c.bindTexture(3553,e.__webglTexture)}function D(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){J(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(34067,e.__webglTexture)}let E={[al]:10497,[am]:33071,[an]:33648},F={[ao]:9728,[ap]:9984,[ar]:9986,[at]:9729,[au]:9985,[aw]:9987};function G(c,f,g){if(g?(a.texParameteri(c,10242,E[f.wrapS]),a.texParameteri(c,10243,E[f.wrapT]),(32879===c||35866===c)&&a.texParameteri(c,32882,E[f.wrapR]),a.texParameteri(c,10240,F[f.magFilter]),a.texParameteri(c,10241,F[f.minFilter])):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),(32879===c||35866===c)&&a.texParameteri(c,32882,33071),(f.wrapS!==am||f.wrapT!==am)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,w(f.magFilter)),a.texParameteri(c,10241,w(f.minFilter)),f.minFilter!==ao&&f.minFilter!==at&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===b.has("EXT_texture_filter_anisotropic")){let i=b.get("EXT_texture_filter_anisotropic");(f.type!==aE|| !1!==b.has("OES_texture_float_linear"))&&(!1!==h||f.type!==aF|| !1!==b.has("OES_texture_half_float_linear"))&&(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function H(b,c){void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",x),b.__webglTexture=a.createTexture(),g.memory.textures++)}function I(b,d,e){var g;let i=3553;d.isDataTexture2DArray&&(i=35866),d.isDataTexture3D&&(i=32879),H(b,d),c.activeTexture(33984+e),c.bindTexture(i,b.__webglTexture),a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment),a.pixelStorei(37443,0);let j=(g=d,!h&&(g.wrapS!==am||g.wrapT!==am||g.minFilter!==ao&&g.minFilter!==at)&& !1===s(d.image)),l=r(d.image,j,!1,k),m=s(l)||h,n=f.convert(d.format),o=f.convert(d.type),p=v(d.internalFormat,n,o,d.encoding);G(i,d,m);let q,w=d.mipmaps;if(d.isDepthTexture)p=6402,h?p=d.type===aE?36012:d.type===aD?33190:d.type===aJ?35056:33189:d.type===aE&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),d.format===aQ&&6402===p&&d.type!==aB&&d.type!==aD&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),d.type=aB,o=f.convert(d.type)),d.format===aR&&6402===p&&(p=34041,d.type!==aJ&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),d.type=aJ,o=f.convert(d.type))),c.texImage2D(3553,0,p,l.width,l.height,0,n,o,null);else if(d.isDataTexture){if(w.length>0&&m){for(let x=0,y=w.length;x<y;x++)q=w[x],c.texImage2D(3553,x,p,q.width,q.height,0,n,o,q.data);d.generateMipmaps=!1,b.__maxMipLevel=w.length-1}else c.texImage2D(3553,0,p,l.width,l.height,0,n,o,l.data),b.__maxMipLevel=0}else if(d.isCompressedTexture){for(let z=0,A=w.length;z<A;z++)q=w[z],d.format!==aM&&d.format!==aL?null!==n?c.compressedTexImage2D(3553,z,p,q.width,q.height,0,q.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):c.texImage2D(3553,z,p,q.width,q.height,0,n,o,q.data);b.__maxMipLevel=w.length-1}else if(d.isDataTexture2DArray)c.texImage3D(35866,0,p,l.width,l.height,l.depth,0,n,o,l.data),b.__maxMipLevel=0;else if(d.isDataTexture3D)c.texImage3D(32879,0,p,l.width,l.height,l.depth,0,n,o,l.data),b.__maxMipLevel=0;else if(w.length>0&&m){for(let B=0,C=w.length;B<C;B++)q=w[B],c.texImage2D(3553,B,p,n,o,q);d.generateMipmaps=!1,b.__maxMipLevel=w.length-1}else c.texImage2D(3553,0,p,n,o,l),b.__maxMipLevel=0;t(d,m)&&u(i,d,l.width,l.height),b.__version=d.version,d.onUpdate&&d.onUpdate(d)}function J(b,d,e){if(6!==d.image.length)return;H(b,d),c.activeTexture(33984+e),c.bindTexture(34067,b.__webglTexture),a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment),a.pixelStorei(37443,0);let g=d&&(d.isCompressedTexture||d.image[0].isCompressedTexture),i=d.image[0]&&d.image[0].isDataTexture,k=[];for(let l=0;l<6;l++)g||i?k[l]=i?d.image[l].image:d.image[l]:k[l]=r(d.image[l],!1,!0,j);let m=k[0],n=s(m)||h,o=f.convert(d.format),p=f.convert(d.type),q=v(d.internalFormat,o,p,d.encoding);G(34067,d,n);let w;if(g){for(let x=0;x<6;x++){w=k[x].mipmaps;for(let y=0;y<w.length;y++){let z=w[y];d.format!==aM&&d.format!==aL?null!==o?c.compressedTexImage2D(34069+x,y,q,z.width,z.height,0,z.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(34069+x,y,q,z.width,z.height,0,o,p,z.data)}}b.__maxMipLevel=w.length-1}else{w=d.mipmaps;for(let A=0;A<6;A++)if(i){c.texImage2D(34069+A,0,q,k[A].width,k[A].height,0,o,p,k[A].data);for(let B=0;B<w.length;B++){let C=w[B],D=C.image[A].image;c.texImage2D(34069+A,B+1,q,D.width,D.height,0,o,p,D.data)}}else{c.texImage2D(34069+A,0,q,o,p,k[A]);for(let E=0;E<w.length;E++){let F=w[E];c.texImage2D(34069+A,E+1,q,o,p,F.image[A])}}b.__maxMipLevel=w.length}t(d,n)&&u(34067,d,m.width,m.height),b.__version=d.version,d.onUpdate&&d.onUpdate(d)}function K(b,e,g,h,i){let j=f.convert(g.format),k=f.convert(g.type),l=v(g.internalFormat,j,k,g.encoding);32879===i||35866===i?c.texImage3D(i,0,l,e.width,e.height,e.depth,0,j,k,null):c.texImage2D(i,0,l,e.width,e.height,0,j,k,null),c.bindFramebuffer(36160,b),a.framebufferTexture2D(36160,h,i,d.get(g).__webglTexture,0),c.bindFramebuffer(36160,null)}function L(b,c,d){if(a.bindRenderbuffer(36161,b),c.depthBuffer&&!c.stencilBuffer){let e=33189;if(d){let g=c.depthTexture;g&&g.isDepthTexture&&(g.type===aE?e=36012:g.type===aD&&(e=33190));let h=M(c);a.renderbufferStorageMultisample(36161,h,e,c.width,c.height)}else a.renderbufferStorage(36161,e,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(c.depthBuffer&&c.stencilBuffer){if(d){let i=M(c);a.renderbufferStorageMultisample(36161,i,35056,c.width,c.height)}else a.renderbufferStorage(36161,34041,c.width,c.height);a.framebufferRenderbuffer(36160,33306,36161,b)}else{let j=!0===c.isWebGLMultipleRenderTargets?c.texture[0]:c.texture,k=f.convert(j.format),l=f.convert(j.type),m=v(j.internalFormat,k,l,j.encoding);if(d){let n=M(c);a.renderbufferStorageMultisample(36161,n,m,c.width,c.height)}else a.renderbufferStorage(36161,m,c.width,c.height)}a.bindRenderbuffer(36161,null)}function M(a){return h&&a.isWebGLMultisampleRenderTarget?Math.min(l,a.samples):0}function N(a){let b=g.render.frame;m.get(a)!==b&&(m.set(a,b),a.update())}let O=!1,P=!1;this.allocateTextureUnit=function(){let a=B;return a>=i&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+i),B+=1,a},this.resetTextureUnits=function(){B=0},this.setTexture2D=C,this.setTexture2DArray=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){I(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(35866,e.__webglTexture)},this.setTexture3D=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){I(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(32879,e.__webglTexture)},this.setTextureCube=D,this.setupRenderTarget=function(b){let i=b.texture,j=d.get(b),k=d.get(i);b.addEventListener("dispose",y),!0!==b.isWebGLMultipleRenderTargets&&(k.__webglTexture=a.createTexture(),k.__version=i.version,g.memory.textures++);let l=!0===b.isWebGLCubeRenderTarget,m=!0===b.isWebGLMultipleRenderTargets,n=!0===b.isWebGLMultisampleRenderTarget,o=i.isDataTexture3D||i.isDataTexture2DArray,p=s(b)||h;if(h&&i.format===aL&&(i.type===aE||i.type===aF)&&(i.format=aM,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),l){j.__webglFramebuffer=[];for(let q=0;q<6;q++)j.__webglFramebuffer[q]=a.createFramebuffer()}else if(j.__webglFramebuffer=a.createFramebuffer(),m){if(e.drawBuffers){let r=b.texture;for(let w=0,x=r.length;w<x;w++){let z=d.get(r[w]);void 0===z.__webglTexture&&(z.__webglTexture=a.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(n){if(h){j.__webglMultisampledFramebuffer=a.createFramebuffer(),j.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,j.__webglColorRenderbuffer);let A=f.convert(i.format),B=f.convert(i.type),D=v(i.internalFormat,A,B,i.encoding),E=M(b);a.renderbufferStorageMultisample(36161,E,D,b.width,b.height),c.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,j.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),b.depthBuffer&&(j.__webglDepthRenderbuffer=a.createRenderbuffer(),L(j.__webglDepthRenderbuffer,b,!0)),c.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(l){c.bindTexture(34067,k.__webglTexture),G(34067,i,p);for(let F=0;F<6;F++)K(j.__webglFramebuffer[F],b,i,36064,34069+F);t(i,p)&&u(34067,i,b.width,b.height),c.unbindTexture()}else if(m){let H=b.texture;for(let I=0,J=H.length;I<J;I++){let N=H[I],O=d.get(N);c.bindTexture(3553,O.__webglTexture),G(3553,N,p),K(j.__webglFramebuffer,b,N,36064+I,3553),t(N,p)&&u(3553,N,b.width,b.height)}c.unbindTexture()}else{let P=3553;if(o){if(h){let Q=i.isDataTexture3D;P=Q?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")}c.bindTexture(P,k.__webglTexture),G(P,i,p),K(j.__webglFramebuffer,b,i,36064,P),t(i,p)&&u(P,i,b.width,b.height,b.depth),c.unbindTexture()}b.depthBuffer&&function(b){let e=d.get(b),f=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture){if(f)throw Error("target.depthTexture not supported in Cube render targets");!function(b,e){let f=e&&e.isWebGLCubeRenderTarget;if(f)throw Error("Depth Texture with cube render targets is not supported");if(c.bindFramebuffer(36160,b),!(e.depthTexture&&e.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),C(e.depthTexture,0);let g=d.get(e.depthTexture).__webglTexture;if(e.depthTexture.format===aQ)a.framebufferTexture2D(36160,36096,3553,g,0);else if(e.depthTexture.format===aR)a.framebufferTexture2D(36160,33306,3553,g,0);else throw Error("Unknown depthTexture format")}(e.__webglFramebuffer,b)}else if(f){e.__webglDepthbuffer=[];for(let g=0;g<6;g++)c.bindFramebuffer(36160,e.__webglFramebuffer[g]),e.__webglDepthbuffer[g]=a.createRenderbuffer(),L(e.__webglDepthbuffer[g],b,!1)}else c.bindFramebuffer(36160,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),L(e.__webglDepthbuffer,b,!1);c.bindFramebuffer(36160,null)}(b)},this.updateRenderTargetMipmap=function(a){let b=s(a)||h,e=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let f=0,g=e.length;f<g;f++){let i=e[f];if(t(i,b)){let j=a.isWebGLCubeRenderTarget?34067:3553,k=d.get(i).__webglTexture;c.bindTexture(j,k),u(j,i,a.width,a.height),c.unbindTexture()}}},this.updateMultisampleRenderTarget=function(b){if(b.isWebGLMultisampleRenderTarget){if(h){let e=b.width,f=b.height,g=16384;b.depthBuffer&&(g|=256),b.stencilBuffer&&(g|=1024);let i=d.get(b);c.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),c.bindFramebuffer(36009,i.__webglFramebuffer),a.blitFramebuffer(0,0,e,f,0,0,e,f,g,9728),c.bindFramebuffer(36008,null),c.bindFramebuffer(36009,i.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.safeSetTexture2D=function(a,b){a&&a.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),a=a.texture),C(a,b)},this.safeSetTextureCube=function(a,b){a&&a.isWebGLCubeRenderTarget&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),a=a.texture),D(a,b)}}function hb(a,b,c){let d=c.isWebGL2;return{convert:function(a){let c;if(a===ay)return 5121;if(a===aG)return 32819;if(a===aH)return 32820;if(a===aI)return 33635;if(a===az)return 5120;if(a===aA)return 5122;if(a===aB)return 5123;if(a===aC)return 5124;if(a===aD)return 5125;if(a===aE)return 5126;if(a===aF)return d?5131:null!==(c=b.get("OES_texture_half_float"))?c.HALF_FLOAT_OES:null;if(a===aK)return 6406;if(a===aL)return 6407;if(a===aM)return 6408;if(a===aN)return 6409;if(a===aO)return 6410;if(a===aQ)return 6402;if(a===aR)return 34041;if(a===aS)return 6403;if(a===aT)return 36244;if(a===aU)return 33319;if(a===aV)return 33320;if(a===aW)return 36248;if(a===aX)return 36249;if(a===aY||a===aZ||a===a$||a===a_){if(null===(c=b.get("WEBGL_compressed_texture_s3tc")))return null;if(a===aY)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===aZ)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===a$)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===a_)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(a===a0||a===a1||a===a2||a===a3){if(null===(c=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(a===a0)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===a1)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===a2)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===a3)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(a===a4)return null!==(c=b.get("WEBGL_compressed_texture_etc1"))?c.COMPRESSED_RGB_ETC1_WEBGL:null;if((a===a5||a===a6)&&null!==(c=b.get("WEBGL_compressed_texture_etc"))){if(a===a5)return c.COMPRESSED_RGB8_ETC2;if(a===a6)return c.COMPRESSED_RGBA8_ETC2_EAC}return a===a7||a===a8||a===a9||a===ba||a===bb||a===bc||a===bd||a===be||a===bf||a===bg||a===bh||a===bi||a===bj||a===bk||a===bm||a===bn||a===bo||a===bp||a===bq||a===br||a===bs||a===bt||a===bu||a===bv||a===bw||a===bx||a===by||a===bz?null!==(c=b.get("WEBGL_compressed_texture_astc"))?a:null:a===bl?null!==(c=b.get("EXT_texture_compression_bptc"))?a:null:a===aJ?d?34042:null!==(c=b.get("WEBGL_depth_texture"))?c.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}g7.prototype.isMeshDistanceMaterial=!0;class hc extends eT{constructor(a=[]){super(),this.cameras=a}}hc.prototype.isArrayCamera=!0;class hd extends dP{constructor(){super(),this.type="Group"}}hd.prototype.isGroup=!0;let he={type:"move"};class hf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new hd,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new hd,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new cW,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new cW),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new hd,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new cW,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new cW),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a&&"visible-blurred"!==b.session.visibilityState){if(null!==g&&null!==(d=b.getPose(a.targetRaySpace,c))&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),d.linearVelocity?(g.hasLinearVelocity=!0,g.linearVelocity.copy(d.linearVelocity)):g.hasLinearVelocity=!1,d.angularVelocity?(g.hasAngularVelocity=!0,g.angularVelocity.copy(d.angularVelocity)):g.hasAngularVelocity=!1,this.dispatchEvent(he)),i&&a.hand){for(let j of(f=!0,a.hand.values())){let k=b.getJointPose(j,c);if(void 0===i.joints[j.jointName]){let l=new hd;l.matrixAutoUpdate=!1,l.visible=!1,i.joints[j.jointName]=l,i.add(l)}let m=i.joints[j.jointName];null!==k&&(m.matrix.fromArray(k.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=k.radius),m.visible=null!==k}let n=i.joints["index-finger-tip"],o=i.joints["thumb-tip"],p=n.position.distanceTo(o.position),q=.02,r=.005;i.inputState.pinching&&p>q+r?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&p<=q-r&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}else null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),e.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(e.linearVelocity)):h.hasLinearVelocity=!1,e.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(e.angularVelocity)):h.hasAngularVelocity=!1)}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}}class hg extends cp{constructor(a,b){super();let c=this,d=a.state,e=null,f=1,g=null,h="local-floor",i=null,j=null,k=null,l=null,m=null,n=!1,o=null,p=null,q=null,r=null,s=null,t=null,u=[],v=new Map,w=new eT;w.layers.enable(1),w.viewport=new cR;let x=new eT;x.layers.enable(2),x.viewport=new cR;let y=[w,x],z=new hc;z.layers.enable(1),z.layers.enable(2);let A=null,B=null;function C(a){let b=v.get(a.inputSource);b&&b.dispatchEvent({type:a.type,data:a.inputSource})}function D(){v.forEach(function(a,b){a.disconnect(b)}),v.clear(),A=null,B=null,d.bindXRFramebuffer(null),a.setRenderTarget(a.getRenderTarget()),k&&b.deleteFramebuffer(k),o&&b.deleteFramebuffer(o),p&&b.deleteRenderbuffer(p),q&&b.deleteRenderbuffer(q),k=null,o=null,p=null,q=null,m=null,l=null,j=null,e=null,J.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}function E(a){let b=e.inputSources;for(let c=0;c<u.length;c++)v.set(b[c],u[c]);for(let d=0;d<a.removed.length;d++){let f=a.removed[d],g=v.get(f);g&&(g.dispatchEvent({type:"disconnected",data:f}),v.delete(f))}for(let h=0;h<a.added.length;h++){let i=a.added[h],j=v.get(i);j&&j.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=u[a];return void 0===b&&(b=new hf,u[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=u[a];return void 0===b&&(b=new hf,u[a]=b),b.getGripSpace()},this.getHand=function(a){let b=u[a];return void 0===b&&(b=new hf,u[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){f=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){h=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return g},this.getBaseLayer=function(){return null!==l?l:m},this.getBinding=function(){return j},this.getFrame=function(){return r},this.getSession=function(){return e},this.setSession=async function(a){if(null!==(e=a)){e.addEventListener("select",C),e.addEventListener("selectstart",C),e.addEventListener("selectend",C),e.addEventListener("squeeze",C),e.addEventListener("squeezestart",C),e.addEventListener("squeezeend",C),e.addEventListener("end",D),e.addEventListener("inputsourceschange",E);let i=b.getContextAttributes();if(!0!==i.xrCompatible&&await b.makeXRCompatible(),void 0===e.renderState.layers){let r={antialias:i.antialias,alpha:i.alpha,depth:i.depth,stencil:i.stencil,framebufferScaleFactor:f};m=new XRWebGLLayer(e,b,r),e.updateRenderState({baseLayer:m})}else if(b instanceof WebGLRenderingContext){let u={antialias:!0,alpha:i.alpha,depth:i.depth,stencil:i.stencil,framebufferScaleFactor:f};m=new XRWebGLLayer(e,b,u),e.updateRenderState({layers:[m]})}else{n=i.antialias;let v=null;i.depth&&(t=256,i.stencil&&(t|=1024),s=i.stencil?33306:36096,v=i.stencil?35056:33190);let w={colorFormat:i.alpha?32856:32849,depthFormat:v,scaleFactor:f};l=(j=new XRWebGLBinding(e,b)).createProjectionLayer(w),k=b.createFramebuffer(),e.updateRenderState({layers:[l]}),n&&(o=b.createFramebuffer(),p=b.createRenderbuffer(),b.bindRenderbuffer(36161,p),b.renderbufferStorageMultisample(36161,4,32856,l.textureWidth,l.textureHeight),d.bindFramebuffer(36160,o),b.framebufferRenderbuffer(36160,36064,36161,p),b.bindRenderbuffer(36161,null),null!==v&&(q=b.createRenderbuffer(),b.bindRenderbuffer(36161,q),b.renderbufferStorageMultisample(36161,4,v,l.textureWidth,l.textureHeight),b.framebufferRenderbuffer(36160,s,36161,q),b.bindRenderbuffer(36161,null)),d.bindFramebuffer(36160,null))}g=await e.requestReferenceSpace(h),J.setContext(e),J.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}};let F=new cW,G=new cW;function H(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){if(null===e)return;z.near=x.near=w.near=a.near,z.far=x.far=w.far=a.far,(A!==z.near||B!==z.far)&&(e.updateRenderState({depthNear:z.near,depthFar:z.far}),A=z.near,B=z.far);let b=a.parent,c=z.cameras;H(z,b);for(let d=0;d<c.length;d++)H(c[d],b);z.matrixWorld.decompose(z.position,z.quaternion,z.scale),a.position.copy(z.position),a.quaternion.copy(z.quaternion),a.scale.copy(z.scale),a.matrix.copy(z.matrix),a.matrixWorld.copy(z.matrixWorld);let f=a.children;for(let g=0,h=f.length;g<h;g++)f[g].updateMatrixWorld(!0);2===c.length?function(a,b,c){F.setFromMatrixPosition(b.matrixWorld),G.setFromMatrixPosition(c.matrixWorld);let d=F.distanceTo(G),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p)}(z,w,x):z.projectionMatrix.copy(w.projectionMatrix)},this.getCamera=function(){return z},this.getFoveation=function(){return null!==l?l.fixedFoveation:null!==m?m.fixedFoveation:void 0},this.setFoveation=function(a){null!==l&&(l.fixedFoveation=a),null!==m&& void 0!==m.fixedFoveation&&(m.fixedFoveation=a)};let I=null,J=new e2;J.setAnimationLoop(function(a,c){if(i=c.getViewerPose(g),r=c,null!==i){let f=i.views;null!==m&&d.bindXRFramebuffer(m.framebuffer);let h=!1;f.length!==z.cameras.length&&(z.cameras.length=0,h=!0);for(let p=0;p<f.length;p++){let q=f[p],v=null;if(null!==m)v=m.getViewport(q);else{let w=j.getViewSubImage(l,q);d.bindXRFramebuffer(k),void 0!==w.depthStencilTexture&&b.framebufferTexture2D(36160,s,3553,w.depthStencilTexture,0),b.framebufferTexture2D(36160,36064,3553,w.colorTexture,0),v=w.viewport}let x=y[p];x.matrix.fromArray(q.transform.matrix),x.projectionMatrix.fromArray(q.projectionMatrix),x.viewport.set(v.x,v.y,v.width,v.height),0===p&&z.matrix.copy(x.matrix),!0===h&&z.cameras.push(x)}n&&(d.bindXRFramebuffer(o),null!==t&&b.clear(t))}let A=e.inputSources;for(let B=0;B<u.length;B++){let C=u[B],D=A[B];C.update(D,c,g)}if(I&&I(a,c),n){let E=l.textureWidth,F=l.textureHeight;d.bindFramebuffer(36008,o),d.bindFramebuffer(36009,k),b.invalidateFramebuffer(36008,[s]),b.invalidateFramebuffer(36009,[s]),b.blitFramebuffer(0,0,E,F,0,0,E,F,16384,9728),b.invalidateFramebuffer(36008,[36064]),d.bindFramebuffer(36008,null),d.bindFramebuffer(36009,null),d.bindFramebuffer(36160,o)}r=null}),this.setAnimationLoop=function(a){I=a},this.dispose=function(){}}}function hh(a){function b(b,c){b.opacity.value=c.opacity,c.color&&b.diffuse.value.copy(c.color),c.emissive&&b.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity),c.map&&(b.map.value=c.map),c.alphaMap&&(b.alphaMap.value=c.alphaMap),c.specularMap&&(b.specularMap.value=c.specularMap),c.alphaTest>0&&(b.alphaTest.value=c.alphaTest);let d=a.get(c).envMap;if(d){b.envMap.value=d,b.flipEnvMap.value=d.isCubeTexture&& !1===d.isRenderTargetTexture?-1:1,b.reflectivity.value=c.reflectivity,b.ior.value=c.ior,b.refractionRatio.value=c.refractionRatio;let e=a.get(d).__maxMipLevel;void 0!==e&&(b.maxMipLevel.value=e)}c.lightMap&&(b.lightMap.value=c.lightMap,b.lightMapIntensity.value=c.lightMapIntensity),c.aoMap&&(b.aoMap.value=c.aoMap,b.aoMapIntensity.value=c.aoMapIntensity);let f;c.map?f=c.map:c.specularMap?f=c.specularMap:c.displacementMap?f=c.displacementMap:c.normalMap?f=c.normalMap:c.bumpMap?f=c.bumpMap:c.roughnessMap?f=c.roughnessMap:c.metalnessMap?f=c.metalnessMap:c.alphaMap?f=c.alphaMap:c.emissiveMap?f=c.emissiveMap:c.clearcoatMap?f=c.clearcoatMap:c.clearcoatNormalMap?f=c.clearcoatNormalMap:c.clearcoatRoughnessMap?f=c.clearcoatRoughnessMap:c.specularIntensityMap?f=c.specularIntensityMap:c.specularTintMap?f=c.specularTintMap:c.transmissionMap?f=c.transmissionMap:c.thicknessMap&&(f=c.thicknessMap),void 0!==f&&(f.isWebGLRenderTarget&&(f=f.texture),!0===f.matrixAutoUpdate&&f.updateMatrix(),b.uvTransform.value.copy(f.matrix));let g;c.aoMap?g=c.aoMap:c.lightMap&&(g=c.lightMap),void 0!==g&&(g.isWebGLRenderTarget&&(g=g.texture),!0===g.matrixAutoUpdate&&g.updateMatrix(),b.uv2Transform.value.copy(g.matrix))}function c(b,c){b.roughness.value=c.roughness,b.metalness.value=c.metalness,c.roughnessMap&&(b.roughnessMap.value=c.roughnessMap),c.metalnessMap&&(b.metalnessMap.value=c.metalnessMap),c.emissiveMap&&(b.emissiveMap.value=c.emissiveMap),c.bumpMap&&(b.bumpMap.value=c.bumpMap,b.bumpScale.value=c.bumpScale,c.side===p&&(b.bumpScale.value*=-1)),c.normalMap&&(b.normalMap.value=c.normalMap,b.normalScale.value.copy(c.normalScale),c.side===p&&b.normalScale.value.negate()),c.displacementMap&&(b.displacementMap.value=c.displacementMap,b.displacementScale.value=c.displacementScale,b.displacementBias.value=c.displacementBias);let d=a.get(c).envMap;d&&(b.envMapIntensity.value=c.envMapIntensity)}return{refreshFogUniforms:function(a,b){a.fogColor.value.copy(b.color),b.isFog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b.isFogExp2&&(a.fogDensity.value=b.density)},refreshMaterialUniforms:function(a,d,e,f,g){var h,i,j,k,l,m,n,o,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I;let J,K;d.isMeshBasicMaterial?b(a,d):d.isMeshLambertMaterial?(b(a,d),h=a,(i=d).emissiveMap&&(h.emissiveMap.value=i.emissiveMap)):d.isMeshToonMaterial?(b(a,d),j=a,(k=d).gradientMap&&(j.gradientMap.value=k.gradientMap),k.emissiveMap&&(j.emissiveMap.value=k.emissiveMap),k.bumpMap&&(j.bumpMap.value=k.bumpMap,j.bumpScale.value=k.bumpScale,k.side===p&&(j.bumpScale.value*=-1)),k.normalMap&&(j.normalMap.value=k.normalMap,j.normalScale.value.copy(k.normalScale),k.side===p&&j.normalScale.value.negate()),k.displacementMap&&(j.displacementMap.value=k.displacementMap,j.displacementScale.value=k.displacementScale,j.displacementBias.value=k.displacementBias)):d.isMeshPhongMaterial?(b(a,d),l=a,m=d,l.specular.value.copy(m.specular),l.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(l.emissiveMap.value=m.emissiveMap),m.bumpMap&&(l.bumpMap.value=m.bumpMap,l.bumpScale.value=m.bumpScale,m.side===p&&(l.bumpScale.value*=-1)),m.normalMap&&(l.normalMap.value=m.normalMap,l.normalScale.value.copy(m.normalScale),m.side===p&&l.normalScale.value.negate()),m.displacementMap&&(l.displacementMap.value=m.displacementMap,l.displacementScale.value=m.displacementScale,l.displacementBias.value=m.displacementBias)):d.isMeshStandardMaterial?(b(a,d),d.isMeshPhysicalMaterial?(n=a,o=d,q=g,c(n,o),n.ior.value=o.ior,o.sheen>0&&(n.sheenTint.value.copy(o.sheenTint).multiplyScalar(o.sheen),n.sheenRoughness.value=o.sheenRoughness),o.clearcoat>0&&(n.clearcoat.value=o.clearcoat,n.clearcoatRoughness.value=o.clearcoatRoughness,o.clearcoatMap&&(n.clearcoatMap.value=o.clearcoatMap),o.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap.value=o.clearcoatRoughnessMap),o.clearcoatNormalMap&&(n.clearcoatNormalScale.value.copy(o.clearcoatNormalScale),n.clearcoatNormalMap.value=o.clearcoatNormalMap,o.side===p&&n.clearcoatNormalScale.value.negate())),o.transmission>0&&(n.transmission.value=o.transmission,n.transmissionSamplerMap.value=q.texture,n.transmissionSamplerSize.value.set(q.width,q.height),o.transmissionMap&&(n.transmissionMap.value=o.transmissionMap),n.thickness.value=o.thickness,o.thicknessMap&&(n.thicknessMap.value=o.thicknessMap),n.attenuationDistance.value=o.attenuationDistance,n.attenuationTint.value.copy(o.attenuationTint)),n.specularIntensity.value=o.specularIntensity,n.specularTint.value.copy(o.specularTint),o.specularIntensityMap&&(n.specularIntensityMap.value=o.specularIntensityMap),o.specularTintMap&&(n.specularTintMap.value=o.specularTintMap)):c(a,d)):d.isMeshMatcapMaterial?(b(a,d),r=a,(s=d).matcap&&(r.matcap.value=s.matcap),s.bumpMap&&(r.bumpMap.value=s.bumpMap,r.bumpScale.value=s.bumpScale,s.side===p&&(r.bumpScale.value*=-1)),s.normalMap&&(r.normalMap.value=s.normalMap,r.normalScale.value.copy(s.normalScale),s.side===p&&r.normalScale.value.negate()),s.displacementMap&&(r.displacementMap.value=s.displacementMap,r.displacementScale.value=s.displacementScale,r.displacementBias.value=s.displacementBias)):d.isMeshDepthMaterial?(b(a,d),t=a,(u=d).displacementMap&&(t.displacementMap.value=u.displacementMap,t.displacementScale.value=u.displacementScale,t.displacementBias.value=u.displacementBias)):d.isMeshDistanceMaterial?(b(a,d),v=a,(w=d).displacementMap&&(v.displacementMap.value=w.displacementMap,v.displacementScale.value=w.displacementScale,v.displacementBias.value=w.displacementBias),v.referencePosition.value.copy(w.referencePosition),v.nearDistance.value=w.nearDistance,v.farDistance.value=w.farDistance):d.isMeshNormalMaterial?(b(a,d),x=a,(y=d).bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===p&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===p&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)):d.isLineBasicMaterial?(z=a,A=d,z.diffuse.value.copy(A.color),z.opacity.value=A.opacity,d.isLineDashedMaterial&&(B=a,C=d,B.dashSize.value=C.dashSize,B.totalSize.value=C.dashSize+C.gapSize,B.scale.value=C.scale)):d.isPointsMaterial?(D=a,E=d,F=e,G=f,D.diffuse.value.copy(E.color),D.opacity.value=E.opacity,D.size.value=E.size*F,D.scale.value=.5*G,E.map&&(D.map.value=E.map),E.alphaMap&&(D.alphaMap.value=E.alphaMap),E.alphaTest>0&&(D.alphaTest.value=E.alphaTest),E.map?J=E.map:E.alphaMap&&(J=E.alphaMap),void 0!==J&&(!0===J.matrixAutoUpdate&&J.updateMatrix(),D.uvTransform.value.copy(J.matrix))):d.isSpriteMaterial?(H=a,I=d,H.diffuse.value.copy(I.color),H.opacity.value=I.opacity,H.rotation.value=I.rotation,I.map&&(H.map.value=I.map),I.alphaMap&&(H.alphaMap.value=I.alphaMap),I.alphaTest>0&&(H.alphaTest.value=I.alphaTest),I.map?K=I.map:I.alphaMap&&(K=I.alphaMap),void 0!==K&&(!0===K.matrixAutoUpdate&&K.updateMatrix(),H.uvTransform.value.copy(K.matrix))):d.isShadowMaterial?(a.color.value.copy(d.color),a.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function hi(a={}){let b=void 0!==a.canvas?a.canvas:function(){let a=cL("canvas");return a.style.display="block",a}(),c=void 0!==a.context?a.context:null,d=void 0!==a.alpha&&a.alpha,e=void 0===a.depth||a.depth,f=void 0===a.stencil||a.stencil,g=void 0!==a.antialias&&a.antialias,h=void 0===a.premultipliedAlpha||a.premultipliedAlpha,i=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,j=void 0!==a.powerPreference?a.powerPreference:"default",k=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,l=null,m=null,n=[],r=[];this.domElement=b,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=bO,this.physicallyCorrectLights=!1,this.toneMapping=$,this.toneMappingExposure=1;let s=this,t=!1,u=0,v=0,w=null,x=-1,y=null,z=new cR,A=new cR,B=null,C=b.width,D=b.height,E=1,F=null,G=null,H=new cR(0,0,C,D),I=new cR(0,0,C,D),J=!1,K=[],L=new e1,M=!1,N=!1,O=null,P=new dq,Q=new cW,R={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function S(){return null===w?E:1}let T=c;function U(a,c){for(let d=0;d<a.length;d++){let e=a[d],f=b.getContext(e,c);if(null!==f)return f}return null}try{let V={alpha:d,depth:e,stencil:f,antialias:g,premultipliedAlpha:h,preserveDrawingBuffer:i,powerPreference:j,failIfMajorPerformanceCaveat:k};if(b.addEventListener("webglcontextlost",aA,!1),b.addEventListener("webglcontextrestored",aB,!1),null===T){let W=["webgl2","webgl","experimental-webgl"];if(!0===s.isWebGL1Renderer&&W.shift(),T=U(W,V),null===T){if(U(W))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===T.getShaderPrecisionFormat&&(T.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(X){throw console.error("THREE.WebGLRenderer: "+X.message),X}let Y,Z,_,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,an,ap,aq,ar,as,at,au,av;function ax(){Y=new fB(T),Z=new fb(T,Y,a),Y.init(Z),au=new hb(T,Y,Z),_=new g9(T,Y,Z),K[0]=1029,aa=new fE(T),ab=new gX,ac=new ha(T,Y,_,ab,Z,au,aa),ad=new fd(s),ae=new fA(s),af=new e3(T,Z),av=new e9(T,Y,af,Z),ag=new fC(T,af,aa,av),ah=new fK(T,ag,af,aa),ar=new fJ(T,Z,ac),an=new fc(ab),ai=new gW(s,ad,ae,Y,Z,av,an),aj=new hh(ab),ak=new g_(ab),al=new g5(Y,Z),aq=new e8(s,ad,_,ah,h),ap=new g8(s,ah,Z),as=new fa(T,Y,aa,Z),at=new fD(T,Y,aa,Z),aa.programs=ai.programs,s.capabilities=Z,s.extensions=Y,s.properties=ab,s.renderLists=ak,s.shadowMap=ap,s.state=_,s.info=aa}ax();let az=new hg(s,T);function aA(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),t=!0}function aB(){console.log("THREE.WebGLRenderer: Context Restored."),t=!1;let a=aa.autoReset,b=ap.enabled,c=ap.autoUpdate,d=ap.needsUpdate,e=ap.type;ax(),aa.autoReset=a,ap.enabled=b,ap.autoUpdate=c,ap.needsUpdate=d,ap.type=e}function aC(a){let b=a.target;b.removeEventListener("dispose",aC),aD(b)}function aD(a){aG(a),ab.remove(a)}function aG(a){let b=ab.get(a).programs;void 0!==b&&b.forEach(function(a){ai.releaseProgram(a)})}this.xr=az,this.getContext=function(){return T},this.getContextAttributes=function(){return T.getContextAttributes()},this.forceContextLoss=function(){let a=Y.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=Y.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return E},this.setPixelRatio=function(a){void 0!==a&&(E=a,this.setSize(C,D,!1))},this.getSize=function(a){return a.set(C,D)},this.setSize=function(a,c,d){if(az.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=a,D=c,b.width=Math.floor(a*E),b.height=Math.floor(c*E),!1!==d&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,a,c)},this.getDrawingBufferSize=function(a){return a.set(C*E,D*E).floor()},this.setDrawingBufferSize=function(a,c,d){C=a,D=c,E=d,b.width=Math.floor(a*d),b.height=Math.floor(c*d),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return a.copy(z)},this.getViewport=function(a){return a.copy(H)},this.setViewport=function(a,b,c,d){a.isVector4?H.set(a.x,a.y,a.z,a.w):H.set(a,b,c,d),_.viewport(z.copy(H).multiplyScalar(E).floor())},this.getScissor=function(a){return a.copy(I)},this.setScissor=function(a,b,c,d){a.isVector4?I.set(a.x,a.y,a.z,a.w):I.set(a,b,c,d),_.scissor(A.copy(I).multiplyScalar(E).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(a){_.setScissorTest(J=a)},this.setOpaqueSort=function(a){F=a},this.setTransparentSort=function(a){G=a},this.getClearColor=function(a){return a.copy(aq.getClearColor())},this.setClearColor=function(){aq.setClearColor.apply(aq,arguments)},this.getClearAlpha=function(){return aq.getClearAlpha()},this.setClearAlpha=function(){aq.setClearAlpha.apply(aq,arguments)},this.clear=function(a,b,c){let d=0;(void 0===a||a)&&(d|=16384),(void 0===b||b)&&(d|=256),(void 0===c||c)&&(d|=1024),T.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){b.removeEventListener("webglcontextlost",aA,!1),b.removeEventListener("webglcontextrestored",aB,!1),ak.dispose(),al.dispose(),ab.dispose(),ad.dispose(),ae.dispose(),ah.dispose(),av.dispose(),az.dispose(),az.removeEventListener("sessionstart",aI),az.removeEventListener("sessionend",aJ),O&&(O.dispose(),O=null),aK.stop()},this.renderBufferImmediate=function(a,b){av.initAttributes();let c=ab.get(a);a.hasPositions&&!c.position&&(c.position=T.createBuffer()),a.hasNormals&&!c.normal&&(c.normal=T.createBuffer()),a.hasUvs&&!c.uv&&(c.uv=T.createBuffer()),a.hasColors&&!c.color&&(c.color=T.createBuffer());let d=b.getAttributes();a.hasPositions&&(T.bindBuffer(34962,c.position),T.bufferData(34962,a.positionArray,35048),av.enableAttribute(d.position.location),T.vertexAttribPointer(d.position.location,3,5126,!1,0,0)),a.hasNormals&&(T.bindBuffer(34962,c.normal),T.bufferData(34962,a.normalArray,35048),av.enableAttribute(d.normal.location),T.vertexAttribPointer(d.normal.location,3,5126,!1,0,0)),a.hasUvs&&(T.bindBuffer(34962,c.uv),T.bufferData(34962,a.uvArray,35048),av.enableAttribute(d.uv.location),T.vertexAttribPointer(d.uv.location,2,5126,!1,0,0)),a.hasColors&&(T.bindBuffer(34962,c.color),T.bufferData(34962,a.colorArray,35048),av.enableAttribute(d.color.location),T.vertexAttribPointer(d.color.location,3,5126,!1,0,0)),av.disableUnusedAttributes(),T.drawArrays(4,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){null===b&&(b=R);let g=e.isMesh&&0>e.matrixWorld.determinant(),h=aT(a,b,c,d,e);_.setMaterial(d,g);let i=c.index,j=c.attributes.position;if(null===i){if(void 0===j||0===j.count)return}else if(0===i.count)return;let k=1;!0===d.wireframe&&(i=ag.getWireframeAttribute(c),k=2),av.setup(e,d,h,c,i);let l,m=as;null!==i&&(l=af.get(i),(m=at).setIndex(l));let n=null!==i?i.count:j.count,o=c.drawRange.start*k,p=c.drawRange.count*k,q=null!==f?f.start*k:0,r=null!==f?f.count*k:1/0,s=Math.max(o,q),t=Math.max(0,Math.min(n,o+p,q+r)-1-s+1);if(0!==t){if(e.isMesh)!0===d.wireframe?(_.setLineWidth(d.wireframeLinewidth*S()),m.setMode(1)):m.setMode(4);else if(e.isLine){let u=d.linewidth;void 0===u&&(u=1),_.setLineWidth(u*S()),e.isLineSegments?m.setMode(1):e.isLineLoop?m.setMode(2):m.setMode(3)}else e.isPoints?m.setMode(0):e.isSprite&&m.setMode(4);if(e.isInstancedMesh)m.renderInstances(s,t,e.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);m.renderInstances(s,t,v)}else m.render(s,t)}},this.compile=function(a,b){(m=al.get(a)).init(),r.push(m),a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(m.pushLight(a),a.castShadow&&m.pushShadow(a))}),m.setupLights(s.physicallyCorrectLights),a.traverse(function(b){let c=b.material;if(c){if(Array.isArray(c))for(let d=0;d<c.length;d++){let e=c[d];aR(e,a,b)}else aR(c,a,b)}}),r.pop(),m=null};let aH=null;function aI(){aK.stop()}function aJ(){aK.start()}let aK=new e2;function aL(a,b,c,d){if(!1===a.visible)return;let e=a.layers.test(b.layers);if(e){if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(b);else if(a.isLight)m.pushLight(a),a.castShadow&&m.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||L.intersectsSprite(a)){d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let f=ah.update(a),g=a.material;g.visible&&l.push(a,f,g,c,Q.z,null)}}else if(a.isImmediateRenderObject)d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P),l.push(a,null,a.material,c,Q.z,null);else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==aa.render.frame&&(a.skeleton.update(),a.skeleton.frame=aa.render.frame),!a.frustumCulled||L.intersectsObject(a))){d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let h=ah.update(a),i=a.material;if(Array.isArray(i)){let j=h.groups;for(let k=0,n=j.length;k<n;k++){let o=j[k],p=i[o.materialIndex];p&&p.visible&&l.push(a,h,p,c,Q.z,o)}}else i.visible&&l.push(a,h,i,c,Q.z,null)}}let q=a.children;for(let r=0,s=q.length;r<s;r++)aL(q[r],b,c,d)}function aN(a,b,c,d){let e=a.opaque,f=a.transmissive,g=a.transparent;m.setupLightsView(c),f.length>0&&aO(e,b,c),d&&_.viewport(z.copy(d)),e.length>0&&aP(e,b,c),f.length>0&&aP(f,b,c),g.length>0&&aP(g,b,c)}function aO(a,b,c){if(null===O){let d=!0===g&& !0===Z.isWebGL2,e=d?cU:cS;O=new e(1024,1024,{generateMipmaps:!0,type:null!==au.convert(aF)?aF:ay,minFilter:aw,magFilter:ao,wrapS:am,wrapT:am})}let f=s.getRenderTarget();s.setRenderTarget(O),s.clear();let h=s.toneMapping;s.toneMapping=$,aP(a,b,c),s.toneMapping=h,ac.updateMultisampleRenderTarget(O),ac.updateRenderTargetMipmap(O),s.setRenderTarget(f)}function aP(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let g=a[e],h=g.object,i=g.geometry,j=null===d?g.material:d,k=g.group;h.layers.test(c.layers)&&aQ(h,b,c,i,j,k)}}function aQ(a,b,c,d,e,f){if(a.onBeforeRender(s,b,c,d,e,f),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),e.onBeforeRender(s,b,c,d,a,f),a.isImmediateRenderObject){let g=aT(c,b,d,e,a);_.setMaterial(e),av.reset(),function(a,b){a.render(function(a){s.renderBufferImmediate(a,b)})}(a,g)}else!0===e.transparent&&e.side===q?(e.side=p,e.needsUpdate=!0,s.renderBufferDirect(c,b,d,e,a,f),e.side=o,e.needsUpdate=!0,s.renderBufferDirect(c,b,d,e,a,f),e.side=q):s.renderBufferDirect(c,b,d,e,a,f);a.onAfterRender(s,b,c,d,e,f)}function aR(a,b,c){!0!==b.isScene&&(b=R);let d=ab.get(a),e=m.state.lights,f=m.state.shadowsArray,g=e.state.version,h=ai.getParameters(a,e.state,f,b,c),i=ai.getProgramCacheKey(h),j=d.programs;d.environment=a.isMeshStandardMaterial?b.environment:null,d.fog=b.fog,d.envMap=(a.isMeshStandardMaterial?ae:ad).get(a.envMap||d.environment),void 0===j&&(a.addEventListener("dispose",aC),j=new Map,d.programs=j);let k=j.get(i);if(void 0!==k){if(d.currentProgram===k&&d.lightsStateVersion===g)return aS(a,h),k}else h.uniforms=ai.getUniforms(a),a.onBuild(h,s),a.onBeforeCompile(h,s),k=ai.acquireProgram(h,i),j.set(i,k),d.uniforms=h.uniforms;let l=d.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&& !0!==a.clipping||(l.clippingPlanes=an.uniform),aS(a,h),d.needsLights=aV(a),d.lightsStateVersion=g,d.needsLights&&(l.ambientLightColor.value=e.state.ambient,l.lightProbe.value=e.state.probe,l.directionalLights.value=e.state.directional,l.directionalLightShadows.value=e.state.directionalShadow,l.spotLights.value=e.state.spot,l.spotLightShadows.value=e.state.spotShadow,l.rectAreaLights.value=e.state.rectArea,l.ltc_1.value=e.state.rectAreaLTC1,l.ltc_2.value=e.state.rectAreaLTC2,l.pointLights.value=e.state.point,l.pointLightShadows.value=e.state.pointShadow,l.hemisphereLights.value=e.state.hemi,l.directionalShadowMap.value=e.state.directionalShadowMap,l.directionalShadowMatrix.value=e.state.directionalShadowMatrix,l.spotShadowMap.value=e.state.spotShadowMap,l.spotShadowMatrix.value=e.state.spotShadowMatrix,l.pointShadowMap.value=e.state.pointShadowMap,l.pointShadowMatrix.value=e.state.pointShadowMatrix);let n=k.getUniforms(),o=gD.seqWithValue(n.seq,l);return d.currentProgram=k,d.uniformsList=o,k}function aS(a,b){let c=ab.get(a);c.outputEncoding=b.outputEncoding,c.instancing=b.instancing,c.skinning=b.skinning,c.morphTargets=b.morphTargets,c.morphNormals=b.morphNormals,c.morphTargetsCount=b.morphTargetsCount,c.numClippingPlanes=b.numClippingPlanes,c.numIntersection=b.numClipIntersection,c.vertexAlphas=b.vertexAlphas,c.vertexTangents=b.vertexTangents}function aT(a,b,c,d,e){!0!==b.isScene&&(b=R),ac.resetTextureUnits();let f=b.fog,g=d.isMeshStandardMaterial?b.environment:null,h=null===w?s.outputEncoding:w.texture.encoding,i=(d.isMeshStandardMaterial?ae:ad).get(d.envMap||g),j=!0===d.vertexColors&&!!c&&!!c.attributes.color&&4===c.attributes.color.itemSize,k=!!d.normalMap&&!!c&&!!c.attributes.tangent,l=!!c&&!!c.morphAttributes.position,n=!!c&&!!c.morphAttributes.normal,o=c&&c.morphAttributes.position?c.morphAttributes.position.length:0,p=ab.get(d),q=m.state.lights;if(!0===M&&(!0===N||a!==y)){let r=a===y&&d.id===x;an.setState(d,a,r)}let t=!1;d.version===p.__version?p.needsLights&&p.lightsStateVersion!==q.state.version?t=!0:p.outputEncoding!==h?t=!0:e.isInstancedMesh&& !1===p.instancing?t=!0:e.isInstancedMesh|| !0!==p.instancing?e.isSkinnedMesh&& !1===p.skinning?t=!0:e.isSkinnedMesh|| !0!==p.skinning?p.envMap!==i?t=!0:d.fog&&p.fog!==f?t=!0:void 0!==p.numClippingPlanes&&(p.numClippingPlanes!==an.numPlanes||p.numIntersection!==an.numIntersection)?t=!0:p.vertexAlphas!==j?t=!0:p.vertexTangents!==k?t=!0:p.morphTargets!==l?t=!0:p.morphNormals!==n?t=!0:!0===Z.isWebGL2&&p.morphTargetsCount!==o&&(t=!0):t=!0:t=!0:(t=!0,p.__version=d.version);let u=p.currentProgram;!0===t&&(u=aR(d,b,e));let v=!1,z=!1,A=!1,B=u.getUniforms(),C=p.uniforms;if(_.useProgram(u.program)&&(v=!0,z=!0,A=!0),d.id!==x&&(x=d.id,z=!0),v||y!==a){if(B.setValue(T,"projectionMatrix",a.projectionMatrix),Z.logarithmicDepthBuffer&&B.setValue(T,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),y!==a&&(y=a,z=!0,A=!0),d.isShaderMaterial||d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshStandardMaterial||d.envMap){let F=B.map.cameraPosition;void 0!==F&&F.setValue(T,Q.setFromMatrixPosition(a.matrixWorld))}(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial)&&B.setValue(T,"isOrthographic",!0===a.isOrthographicCamera),(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial||d.isShadowMaterial||e.isSkinnedMesh)&&B.setValue(T,"viewMatrix",a.matrixWorldInverse)}if(e.isSkinnedMesh){B.setOptional(T,e,"bindMatrix"),B.setOptional(T,e,"bindMatrixInverse");let G=e.skeleton;G&&(Z.floatVertexTextures?(null===G.boneTexture&&G.computeBoneTexture(),B.setValue(T,"boneTexture",G.boneTexture,ac),B.setValue(T,"boneTextureSize",G.boneTextureSize)):B.setOptional(T,G,"boneMatrices"))}return c&&(void 0!==c.morphAttributes.position|| void 0!==c.morphAttributes.normal)&&ar.update(e,c,d,u),(z||p.receiveShadow!==e.receiveShadow)&&(p.receiveShadow=e.receiveShadow,B.setValue(T,"receiveShadow",e.receiveShadow)),z&&(B.setValue(T,"toneMappingExposure",s.toneMappingExposure),p.needsLights&&aU(C,A),f&&d.fog&&aj.refreshFogUniforms(C,f),aj.refreshMaterialUniforms(C,d,E,D,O),gD.upload(T,p.uniformsList,C,ac)),d.isShaderMaterial&& !0===d.uniformsNeedUpdate&&(gD.upload(T,p.uniformsList,C,ac),d.uniformsNeedUpdate=!1),d.isSpriteMaterial&&B.setValue(T,"center",e.center),B.setValue(T,"modelViewMatrix",e.modelViewMatrix),B.setValue(T,"normalMatrix",e.normalMatrix),B.setValue(T,"modelMatrix",e.matrixWorld),u}function aU(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aV(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&& !0===a.lights}aK.setAnimationLoop(function(a){aH&&aH(a)}),"undefined"!=typeof window&&aK.setContext(window),this.setAnimationLoop=function(a){aH=a,az.setAnimationLoop(a),null===a?aK.stop():aK.start()},az.addEventListener("sessionstart",aI),az.addEventListener("sessionend",aJ),this.render=function(a,b){if(void 0!==b&& !0!==b.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===t)return;!0===a.autoUpdate&&a.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),!0===az.enabled&& !0===az.isPresenting&&(!0===az.cameraAutoUpdate&&az.updateCamera(b),b=az.getCamera()),!0===a.isScene&&a.onBeforeRender(s,a,b,w),(m=al.get(a,r.length)).init(),r.push(m),P.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),L.setFromProjectionMatrix(P),N=this.localClippingEnabled,M=an.init(this.clippingPlanes,N,b),(l=ak.get(a,n.length)).init(),n.push(l),aL(a,b,0,s.sortObjects),l.finish(),!0===s.sortObjects&&l.sort(F,G),!0===M&&an.beginShadows();let c=m.state.shadowsArray;if(ap.render(c,a,b),!0===M&&an.endShadows(),!0===this.info.autoReset&&this.info.reset(),aq.render(l,a),m.setupLights(s.physicallyCorrectLights),b.isArrayCamera){let d=b.cameras;for(let e=0,f=d.length;e<f;e++){let g=d[e];aN(l,a,g,g.viewport)}}else aN(l,a,b);null!==w&&(ac.updateMultisampleRenderTarget(w),ac.updateRenderTargetMipmap(w)),!0===a.isScene&&a.onAfterRender(s,a,b),_.buffers.depth.setTest(!0),_.buffers.depth.setMask(!0),_.buffers.color.setMask(!0),_.setPolygonOffset(!1),av.resetDefaultState(),x=-1,y=null,r.pop(),m=r.length>0?r[r.length-1]:null,n.pop(),l=n.length>0?n[n.length-1]:null},this.getActiveCubeFace=function(){return u},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return w},this.setRenderTarget=function(a,b=0,c=0){w=a,u=b,v=c,a&& void 0===ab.get(a).__webglFramebuffer&&ac.setupRenderTarget(a);let d=null,e=!1,f=!1;if(a){let g=a.texture;(g.isDataTexture3D||g.isDataTexture2DArray)&&(f=!0);let h=ab.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(d=h[b],e=!0):d=a.isWebGLMultisampleRenderTarget?ab.get(a).__webglMultisampledFramebuffer:h,z.copy(a.viewport),A.copy(a.scissor),B=a.scissorTest}else z.copy(H).multiplyScalar(E).floor(),A.copy(I).multiplyScalar(E).floor(),B=J;let i=_.bindFramebuffer(36160,d);if(i&&Z.drawBuffers){let j=!1;if(a){if(a.isWebGLMultipleRenderTargets){let k=a.texture;if(K.length!==k.length||36064!==K[0]){for(let l=0,m=k.length;l<m;l++)K[l]=36064+l;K.length=k.length,j=!0}}else(1!==K.length||36064!==K[0])&&(K[0]=36064,K.length=1,j=!0)}else(1!==K.length||1029!==K[0])&&(K[0]=1029,K.length=1,j=!0);j&&(Z.isWebGL2?T.drawBuffers(K):Y.get("WEBGL_draw_buffers").drawBuffersWEBGL(K))}if(_.viewport(z),_.scissor(A),_.setScissorTest(B),e){let n=ab.get(a.texture);T.framebufferTexture2D(36160,36064,34069+b,n.__webglTexture,c)}else if(f){let o=ab.get(a.texture),p=b||0;T.framebufferTextureLayer(36160,36064,o.__webglTexture,c||0,p)}x=-1},this.readRenderTargetPixels=function(a,b,c,d,e,f,g){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let h=ab.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&& void 0!==g&&(h=h[g]),h){_.bindFramebuffer(36160,h);try{let i=a.texture,j=i.format,k=i.type;if(j!==aM&&au.convert(j)!==T.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let l=k===aF&&(Y.has("EXT_color_buffer_half_float")||Z.isWebGL2&&Y.has("EXT_color_buffer_float"));if(k!==ay&&au.convert(k)!==T.getParameter(35738)&&!(k===aE&&(Z.isWebGL2||Y.has("OES_texture_float")||Y.has("WEBGL_color_buffer_float")))&&!l){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}36053===T.checkFramebufferStatus(36160)?b>=0&&b<=a.width-d&&c>=0&&c<=a.height-e&&T.readPixels(b,c,d,e,au.convert(j),au.convert(k),f):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let m=null!==w?ab.get(w).__webglFramebuffer:null;_.bindFramebuffer(36160,m)}}},this.copyFramebufferToTexture=function(a,b,c=0){let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d),g=au.convert(b.format);Z.isWebGL2&&(6407===g&&(g=32849),6408===g&&(g=32856)),ac.setTexture2D(b,0),T.copyTexImage2D(3553,c,g,a.x,a.y,e,f,0),_.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d=0){let e=b.image.width,f=b.image.height,g=au.convert(c.format),h=au.convert(c.type);ac.setTexture2D(c,0),T.pixelStorei(37440,c.flipY),T.pixelStorei(37441,c.premultiplyAlpha),T.pixelStorei(3317,c.unpackAlignment),b.isDataTexture?T.texSubImage2D(3553,d,a.x,a.y,e,f,g,h,b.image.data):b.isCompressedTexture?T.compressedTexSubImage2D(3553,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,g,b.mipmaps[0].data):T.texSubImage2D(3553,d,a.x,a.y,g,h,b.image),0===d&&c.generateMipmaps&&T.generateMipmap(3553),_.unbindTexture()},this.copyTextureToTexture3D=function(a,b,c,d,e=0){if(s.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let f=a.max.x-a.min.x+1,g=a.max.y-a.min.y+1,h=a.max.z-a.min.z+1,i=au.convert(d.format),j=au.convert(d.type),k;if(d.isDataTexture3D)ac.setTexture3D(d,0),k=32879;else if(d.isDataTexture2DArray)ac.setTexture2DArray(d,0),k=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}T.pixelStorei(37440,d.flipY),T.pixelStorei(37441,d.premultiplyAlpha),T.pixelStorei(3317,d.unpackAlignment);let l=T.getParameter(3314),m=T.getParameter(32878),n=T.getParameter(3316),o=T.getParameter(3315),p=T.getParameter(32877),q=c.isCompressedTexture?c.mipmaps[0]:c.image;T.pixelStorei(3314,q.width),T.pixelStorei(32878,q.height),T.pixelStorei(3316,a.min.x),T.pixelStorei(3315,a.min.y),T.pixelStorei(32877,a.min.z),c.isDataTexture||c.isDataTexture3D?T.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q.data):c.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),T.compressedTexSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,q.data)):T.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q),T.pixelStorei(3314,l),T.pixelStorei(32878,m),T.pixelStorei(3316,n),T.pixelStorei(3315,o),T.pixelStorei(32877,p),0===e&&d.generateMipmaps&&T.generateMipmap(k),_.unbindTexture()},this.initTexture=function(a){ac.setTexture2D(a,0),_.unbindTexture()},this.resetState=function(){u=0,v=0,w=null,_.reset(),av.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class hj extends hi{}hj.prototype.isWebGL1Renderer=!0;class hk{constructor(a,b=25e-5){this.name="",this.color=new d7(a),this.density=b}clone(){return new hk(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}hk.prototype.isFogExp2=!0;class hl{constructor(a,b=1,c=1e3){this.name="",this.color=new d7(a),this.near=b,this.far=c}clone(){return new hl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}hl.prototype.isFog=!0;class hm extends dP{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.fog&&(b.object.fog=this.fog.toJSON()),b}}hm.prototype.isScene=!0;class hn{constructor(a,b){this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=ce,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=cw()}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this}copyAt(a,b,c){a*=this.stride,c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this}set(a,b=0){return this.array.set(a,b),this}clone(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=cw()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let b=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),c=new this.constructor(b,this.stride);return c.setUsage(this.usage),c}onUpload(a){return this.onUploadCallback=a,this}toJSON(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=cw()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}hn.prototype.isInterleavedBuffer=!0;let ho=new cW;class hp{constructor(a,b,c,d=!1){this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(a){this.data.needsUpdate=a}applyMatrix4(a){for(let b=0,c=this.data.count;b<c;b++)ho.x=this.getX(b),ho.y=this.getY(b),ho.z=this.getZ(b),ho.applyMatrix4(a),this.setXYZ(b,ho.x,ho.y,ho.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)ho.x=this.getX(b),ho.y=this.getY(b),ho.z=this.getZ(b),ho.applyNormalMatrix(a),this.setXYZ(b,ho.x,ho.y,ho.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)ho.x=this.getX(b),ho.y=this.getY(b),ho.z=this.getZ(b),ho.transformDirection(a),this.setXYZ(b,ho.x,ho.y,ho.z);return this}setX(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this}setY(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this}setZ(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this}setW(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this}getX(a){return this.data.array[a*this.data.stride+this.offset]}getY(a){return this.data.array[a*this.data.stride+this.offset+1]}getZ(a){return this.data.array[a*this.data.stride+this.offset+2]}getW(a){return this.data.array[a*this.data.stride+this.offset+3]}setXY(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this}setXYZ(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this}clone(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new hp(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return new eb(new this.array.constructor(b),this.itemSize,this.normalized)}}toJSON(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:b,normalized:this.normalized}}}}hp.prototype.isInterleavedBufferAttribute=!0;class hq extends d0{constructor(a){super(),this.type="SpriteMaterial",this.color=new d7(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this}}hq.prototype.isSpriteMaterial=!0;let hr,hs=new cW,ht=new cW,hu=new cW,hv=new cG,hw=new cG,hx=new dq,hy=new cW,hz=new cW,hA=new cW,hB=new cG,hC=new cG,hD=new cG;class hE extends dP{constructor(a){if(super(),this.type="Sprite",void 0===hr){hr=new et;let b=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),c=new hn(b,5);hr.setIndex([0,1,2,0,2,3]),hr.setAttribute("position",new hp(c,3,0,!1)),hr.setAttribute("uv",new hp(c,2,3,!1))}this.geometry=hr,this.material=void 0!==a?a:new hq,this.center=new cG(.5,.5)}raycast(a,b){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ht.setFromMatrixScale(this.matrixWorld),hx.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),hu.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&& !1===this.material.sizeAttenuation&&ht.multiplyScalar(-hu.z);let c=this.material.rotation,d,e;0!==c&&(e=Math.cos(c),d=Math.sin(c));let f=this.center;hF(hy.set(-.5,-.5,0),hu,f,ht,d,e),hF(hz.set(.5,-.5,0),hu,f,ht,d,e),hF(hA.set(.5,.5,0),hu,f,ht,d,e),hB.set(0,0),hC.set(1,0),hD.set(1,1);let g=a.ray.intersectTriangle(hy,hz,hA,!1,hs);if(null===g&&(hF(hz.set(-.5,.5,0),hu,f,ht,d,e),hC.set(0,1),null===(g=a.ray.intersectTriangle(hy,hA,hz,!1,hs))))return;let h=a.ray.origin.distanceTo(hs);h<a.near||h>a.far||b.push({distance:h,point:hs.clone(),uv:d$.getUV(hs,hy,hz,hA,hB,hC,hD,new cG),face:null,object:this})}copy(a){return super.copy(a),void 0!==a.center&&this.center.copy(a.center),this.material=a.material,this}}function hF(a,b,c,d,e,f){hv.subVectors(a,c).addScalar(.5).multiply(d),void 0!==e?(hw.x=f*hv.x-e*hv.y,hw.y=e*hv.x+f*hv.y):hw.copy(hv),a.copy(b),a.x+=hw.x,a.y+=hw.y,a.applyMatrix4(hx)}hE.prototype.isSprite=!0;let hG=new cW,hH=new cW;class hI extends dP{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(a){super.copy(a,!1);let b=a.levels;for(let c=0,d=b.length;c<d;c++){let e=b[c];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=a.autoUpdate,this}addLevel(a,b=0){b=Math.abs(b);let c=this.levels,d;for(d=0;d<c.length&&!(b<c[d].distance);d++);return c.splice(d,0,{distance:b,object:a}),this.add(a),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(a){let b=this.levels;if(b.length>0){let c,d;for(c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object}return null}raycast(a,b){let c=this.levels;if(c.length>0){hG.setFromMatrixPosition(this.matrixWorld);let d=a.ray.origin.distanceTo(hG);this.getObjectForDistance(d).raycast(a,b)}}update(a){let b=this.levels;if(b.length>1){hG.setFromMatrixPosition(a.matrixWorld),hH.setFromMatrixPosition(this.matrixWorld);let c=hG.distanceTo(hH)/a.zoom;b[0].object.visible=!0;let d,e;for(d=1,e=b.length;d<e;d++)if(c>=b[d].distance)b[d-1].object.visible=!1,b[d].object.visible=!0;else break;for(this._currentLevel=d-1;d<e;d++)b[d].object.visible=!1}}toJSON(a){let b=super.toJSON(a);!1===this.autoUpdate&&(b.object.autoUpdate=!1),b.object.levels=[];let c=this.levels;for(let d=0,e=c.length;d<e;d++){let f=c[d];b.object.levels.push({object:f.object.uuid,distance:f.distance})}return b}}let hJ=new cW,hK=new cR,hL=new cR,hM=new cW,hN=new dq;class hO extends eL{constructor(a,b){super(a,b),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new dq,this.bindMatrixInverse=new dq}copy(a){return super.copy(a),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this}bind(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.copy(b).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let a=new cR,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.w=b.getW(c);let e=1/a.manhattanLength();e!==1/0?a.multiplyScalar(e):a.set(1,0,0,0),b.setXYZW(c,a.x,a.y,a.z,a.w)}}updateMatrixWorld(a){super.updateMatrixWorld(a),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(a,b){let c=this.skeleton,d=this.geometry;hK.fromBufferAttribute(d.attributes.skinIndex,a),hL.fromBufferAttribute(d.attributes.skinWeight,a),hJ.copy(b).applyMatrix4(this.bindMatrix),b.set(0,0,0);for(let e=0;e<4;e++){let f=hL.getComponent(e);if(0!==f){let g=hK.getComponent(e);hN.multiplyMatrices(c.bones[g].matrixWorld,c.boneInverses[g]),b.addScaledVector(hM.copy(hJ).applyMatrix4(hN),f)}}return b.applyMatrix4(this.bindMatrixInverse)}}hO.prototype.isSkinnedMesh=!0;class hP extends dP{constructor(){super(),this.type="Bone"}}hP.prototype.isBone=!0;class hQ extends cP{constructor(a=null,b=1,c=1,d,e,f,g,h,i=ao,j=ao,k,l){super(null,f,g,h,i,j,d,e,k,l),this.image={data:a,width:b,height:c},this.magFilter=i,this.minFilter=j,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}hQ.prototype.isDataTexture=!0;let hR=new dq,hS=new dq;class hT{constructor(a=[],b=[]){this.uuid=cw(),this.bones=a.slice(0),this.boneInverses=b,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let a=this.bones,b=this.boneInverses;if(this.boneMatrices=new Float32Array(16*a.length),0===b.length)this.calculateInverses();else if(a.length!==b.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new dq)}}calculateInverses(){this.boneInverses.length=0;for(let a=0,b=this.bones.length;a<b;a++){let c=new dq;this.bones[a]&&c.copy(this.bones[a].matrixWorld).invert(),this.boneInverses.push(c)}}pose(){for(let a=0,b=this.bones.length;a<b;a++){let c=this.bones[a];c&&c.matrixWorld.copy(this.boneInverses[a]).invert()}for(let d=0,e=this.bones.length;d<e;d++){let f=this.bones[d];f&&(f.parent&&f.parent.isBone?(f.matrix.copy(f.parent.matrixWorld).invert(),f.matrix.multiply(f.matrixWorld)):f.matrix.copy(f.matrixWorld),f.matrix.decompose(f.position,f.quaternion,f.scale))}}update(){let a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++){let g=a[e]?a[e].matrixWorld:hS;hR.multiplyMatrices(g,b[e]),hR.toArray(c,16*e)}null!==d&&(d.needsUpdate=!0)}clone(){return new hT(this.bones,this.boneInverses)}computeBoneTexture(){let a=Math.sqrt(4*this.bones.length);a=Math.max(a=cD(a),4);let b=new Float32Array(a*a*4);b.set(this.boneMatrices);let c=new hQ(b,a,a,aM,aE);return this.boneMatrices=b,this.boneTexture=c,this.boneTextureSize=a,this}getBoneByName(a){for(let b=0,c=this.bones.length;b<c;b++){let d=this.bones[b];if(d.name===a)return d}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(a,b){this.uuid=a.uuid;for(let c=0,d=a.bones.length;c<d;c++){let e=a.bones[c],f=b[e];void 0===f&&(console.warn("THREE.Skeleton: No bone found with UUID:",e),f=new hP),this.bones.push(f),this.boneInverses.push(new dq().fromArray(a.boneInverses[c]))}return this.init(),this}toJSON(){let a={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};a.uuid=this.uuid;let b=this.bones,c=this.boneInverses;for(let d=0,e=b.length;d<e;d++){let f=b[d];a.bones.push(f.uuid);let g=c[d];a.boneInverses.push(g.toArray())}return a}}class hU extends eb{constructor(a,b,c,d=1){"number"==typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(a,b,c),this.meshPerAttribute=d}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}toJSON(){let a=super.toJSON();return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}hU.prototype.isInstancedBufferAttribute=!0;let hV=new dq,hW=new dq,hX=[],hY=new eL;class hZ extends eL{constructor(a,b,c){super(a,b),this.instanceMatrix=new hU(new Float32Array(16*c),16),this.instanceColor=null,this.count=c,this.frustumCulled=!1}copy(a){return super.copy(a),this.instanceMatrix.copy(a.instanceMatrix),null!==a.instanceColor&&(this.instanceColor=a.instanceColor.clone()),this.count=a.count,this}getColorAt(a,b){b.fromArray(this.instanceColor.array,3*a)}getMatrixAt(a,b){b.fromArray(this.instanceMatrix.array,16*a)}raycast(a,b){let c=this.matrixWorld,d=this.count;if(hY.geometry=this.geometry,hY.material=this.material,void 0!==hY.material)for(let e=0;e<d;e++){this.getMatrixAt(e,hV),hW.multiplyMatrices(c,hV),hY.matrixWorld=hW,hY.raycast(a,hX);for(let f=0,g=hX.length;f<g;f++){let h=hX[f];h.instanceId=e,h.object=this,b.push(h)}hX.length=0}}setColorAt(a,b){null===this.instanceColor&&(this.instanceColor=new hU(new Float32Array(3*this.instanceMatrix.count),3)),b.toArray(this.instanceColor.array,3*a)}setMatrixAt(a,b){b.toArray(this.instanceMatrix.array,16*a)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}hZ.prototype.isInstancedMesh=!0;class h$ extends d0{constructor(a){super(),this.type="LineBasicMaterial",this.color=new d7(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this}}h$.prototype.isLineBasicMaterial=!0;let h_=new cW,h0=new cW,h1=new dq,h2=new dp,h3=new dg;class h4 extends dP{constructor(a=new et,b=new h$){super(),this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[0];for(let d=1,e=b.count;d<e;d++)h_.fromBufferAttribute(b,d-1),h0.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=h_.distanceTo(h0);a.setAttribute("lineDistance",new ek(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),h3.copy(c.boundingSphere),h3.applyMatrix4(d),h3.radius+=e,!1===a.ray.intersectsSphere(h3))return;h1.copy(d).invert(),h2.copy(a.ray).applyMatrix4(h1);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=new cW,j=new cW,k=new cW,l=new cW,m=this.isLineSegments?2:1;if(c.isBufferGeometry){let n=c.index,o=c.attributes,p=o.position;if(null!==n){let q=Math.max(0,f.start),r=Math.min(n.count,f.start+f.count);for(let s=q,t=r-1;s<t;s+=m){let u=n.getX(s),v=n.getX(s+1);i.fromBufferAttribute(p,u),j.fromBufferAttribute(p,v);let w=h2.distanceSqToSegment(i,j,l,k);if(w>h)continue;l.applyMatrix4(this.matrixWorld);let x=a.ray.origin.distanceTo(l);x<a.near||x>a.far||b.push({distance:x,point:k.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this})}}else{let y=Math.max(0,f.start),z=Math.min(p.count,f.start+f.count);for(let A=y,B=z-1;A<B;A+=m){i.fromBufferAttribute(p,A),j.fromBufferAttribute(p,A+1);let C=h2.distanceSqToSegment(i,j,l,k);if(C>h)continue;l.applyMatrix4(this.matrixWorld);let D=a.ray.origin.distanceTo(l);D<a.near||D>a.far||b.push({distance:D,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else c.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}h4.prototype.isLine=!0;let h5=new cW,h6=new cW;class h7 extends h4{constructor(a,b){super(a,b),this.type="LineSegments"}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[];for(let d=0,e=b.count;d<e;d+=2)h5.fromBufferAttribute(b,d),h6.fromBufferAttribute(b,d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+h5.distanceTo(h6);a.setAttribute("lineDistance",new ek(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}h7.prototype.isLineSegments=!0;class h8 extends h4{constructor(a,b){super(a,b),this.type="LineLoop"}}h8.prototype.isLineLoop=!0;class h9 extends d0{constructor(a){super(),this.type="PointsMaterial",this.color=new d7(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this}}h9.prototype.isPointsMaterial=!0;let ia=new dq,ib=new dp,ic=new dg,id=new cW;class ie extends dP{constructor(a=new et,b=new h9){super(),this.type="Points",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Points.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),ic.copy(c.boundingSphere),ic.applyMatrix4(d),ic.radius+=e,!1===a.ray.intersectsSphere(ic))return;ia.copy(d).invert(),ib.copy(a.ray).applyMatrix4(ia);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g;if(c.isBufferGeometry){let i=c.index,j=c.attributes,k=j.position;if(null!==i){let l=Math.max(0,f.start),m=Math.min(i.count,f.start+f.count);for(let n=l,o=m;n<o;n++){let p=i.getX(n);id.fromBufferAttribute(k,p),ig(id,p,h,d,a,b,this)}}else{let q=Math.max(0,f.start),r=Math.min(k.count,f.start+f.count);for(let s=q,t=r;s<t;s++)id.fromBufferAttribute(k,s),ig(id,s,h,d,a,b,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ig(a,b,c,d,e,f,g){let h=ib.distanceSqToPoint(a);if(h<c){let i=new cW;ib.closestPointToPoint(a,i),i.applyMatrix4(d);let j=e.ray.origin.distanceTo(i);if(j<e.near||j>e.far)return;f.push({distance:j,distanceToRay:Math.sqrt(h),point:i,index:b,face:null,object:g})}}ie.prototype.isPoints=!0;class ih extends cP{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.format=void 0!==g?g:aL,this.minFilter=void 0!==f?f:at,this.magFilter=void 0!==e?e:at,this.generateMipmaps=!1;let j=this;function k(){j.needsUpdate=!0,a.requestVideoFrameCallback(k)}"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(k)}clone(){return new this.constructor(this.image).copy(this)}update(){let a=this.image;!1=="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}ih.prototype.isVideoTexture=!0;class ii extends cP{constructor(a,b,c,d,e,f,g,h,i,j,k,l){super(null,f,g,h,i,j,d,e,k,l),this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}}ii.prototype.isCompressedTexture=!0;class ij extends cP{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.needsUpdate=!0}}ij.prototype.isCanvasTexture=!0;class ik extends cP{constructor(a,b,c,d,e,f,g,h,i,j){if((j=void 0!==j?j:aQ)!==aQ&&j!==aR)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&j===aQ&&(c=aB),void 0===c&&j===aR&&(c=aJ),super(null,d,e,f,g,h,j,c,i),this.image={width:a,height:b},this.magFilter=void 0!==g?g:ao,this.minFilter=void 0!==h?h:ao,this.flipY=!1,this.generateMipmaps=!1}}ik.prototype.isDepthTexture=!0;class il extends et{constructor(a=1,b=8,c=0,d=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},b=Math.max(3,b);let e=[],f=[],g=[],h=[],i=new cW,j=new cG;f.push(0,0,0),g.push(0,0,1),h.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let m=c+k/b*d;i.x=a*Math.cos(m),i.y=a*Math.sin(m),f.push(i.x,i.y,i.z),g.push(0,0,1),j.x=(f[l]/a+1)/2,j.y=(f[l+1]/a+1)/2,h.push(j.x,j.y)}for(let n=1;n<=b;n++)e.push(n,n+1,0);this.setIndex(e),this.setAttribute("position",new ek(f,3)),this.setAttribute("normal",new ek(g,3)),this.setAttribute("uv",new ek(h,2))}static fromJSON(a){return new il(a.radius,a.segments,a.thetaStart,a.thetaLength)}}class im extends et{constructor(a=1,b=1,c=1,d=8,e=1,f=!1,g=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};let i=this;d=Math.floor(d),e=Math.floor(e);let j=[],k=[],l=[],m=[],n=0,o=[],p=c/2,q=0;function r(c){let e=n,f=new cG,o=new cW,r=0,s=!0===c?a:b,t=!0===c?1:-1;for(let u=1;u<=d;u++)k.push(0,p*t,0),l.push(0,t,0),m.push(.5,.5),n++;let v=n;for(let w=0;w<=d;w++){let x=w/d,y=x*h+g,z=Math.cos(y),A=Math.sin(y);o.x=s*A,o.y=p*t,o.z=s*z,k.push(o.x,o.y,o.z),l.push(0,t,0),f.x=.5*z+.5,f.y=.5*A*t+.5,m.push(f.x,f.y),n++}for(let B=0;B<d;B++){let C=e+B,D=v+B;!0===c?j.push(D,D+1,C):j.push(D+1,D,C),r+=3}i.addGroup(q,r,!0===c?1:2),q+=r}(function(){let f=new cW,r=new cW,s=0,t=(b-a)/c;for(let u=0;u<=e;u++){let v=[],w=u/e,x=w*(b-a)+a;for(let y=0;y<=d;y++){let z=y/d,A=z*h+g,B=Math.sin(A),C=Math.cos(A);r.x=x*B,r.y=-w*c+p,r.z=x*C,k.push(r.x,r.y,r.z),f.set(B,t,C).normalize(),l.push(f.x,f.y,f.z),m.push(z,1-w),v.push(n++)}o.push(v)}for(let D=0;D<d;D++)for(let E=0;E<e;E++){let F=o[E][D],G=o[E+1][D],H=o[E+1][D+1],I=o[E][D+1];j.push(F,G,I),j.push(G,H,I),s+=6}i.addGroup(q,s,0),q+=s})(),!1===f&&(a>0&&r(!0),b>0&&r(!1)),this.setIndex(j),this.setAttribute("position",new ek(k,3)),this.setAttribute("normal",new ek(l,3)),this.setAttribute("uv",new ek(m,2))}static fromJSON(a){return new im(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class io extends im{constructor(a=1,b=1,c=8,d=1,e=!1,f=0,g=2*Math.PI){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}static fromJSON(a){return new io(a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class ip extends et{constructor(a=[],b=[],c=1,d=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d};let e=[],f=[];function g(a,b,c,d){let e=d+1,f=[];for(let g=0;g<=e;g++){f[g]=[];let h=a.clone().lerp(c,g/e),j=b.clone().lerp(c,g/e),k=e-g;for(let l=0;l<=k;l++)0===l&&g===e?f[g][l]=h:f[g][l]=h.clone().lerp(j,l/k)}for(let m=0;m<e;m++)for(let n=0;n<2*(e-m)-1;n++){let o=Math.floor(n/2);n%2==0?(i(f[m][o+1]),i(f[m+1][o]),i(f[m][o])):(i(f[m][o+1]),i(f[m+1][o+1]),i(f[m+1][o]))}}function h(){for(let a=0;a<f.length;a+=6){let b=f[a+0],c=f[a+2],d=f[a+4],e=Math.max(b,c,d),g=Math.min(b,c,d);e>.9&&g<.1&&(b<.2&&(f[a+0]+=1),c<.2&&(f[a+2]+=1),d<.2&&(f[a+4]+=1))}}function i(a){e.push(a.x,a.y,a.z)}function j(b,c){let d=3*b;c.x=a[d+0],c.y=a[d+1],c.z=a[d+2]}function k(){let a=new cW,b=new cW,c=new cW,d=new cW,g=new cG,h=new cG,i=new cG;for(let j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]),b.set(e[j+3],e[j+4],e[j+5]),c.set(e[j+6],e[j+7],e[j+8]),g.set(f[k+0],f[k+1]),h.set(f[k+2],f[k+3]),i.set(f[k+4],f[k+5]),d.copy(a).add(b).add(c).divideScalar(3);let n=m(d);l(g,k+0,a,n),l(h,k+2,b,n),l(i,k+4,c,n)}}function l(a,b,c,d){d<0&&1===a.x&&(f[b]=a.x-1),0===c.x&&0===c.z&&(f[b]=d/2/Math.PI+.5)}function m(a){return Math.atan2(a.z,-a.x)}function n(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(a){let c=new cW,d=new cW,e=new cW;for(let f=0;f<b.length;f+=3)j(b[f+0],c),j(b[f+1],d),j(b[f+2],e),g(c,d,e,a)})(d),function(a){let b=new cW;for(let c=0;c<e.length;c+=3)b.x=e[c+0],b.y=e[c+1],b.z=e[c+2],b.normalize().multiplyScalar(a),e[c+0]=b.x,e[c+1]=b.y,e[c+2]=b.z}(c),function(){let a=new cW;for(let b=0;b<e.length;b+=3){a.x=e[b+0],a.y=e[b+1],a.z=e[b+2];let c=m(a)/2/Math.PI+.5,d=n(a)/Math.PI+.5;f.push(c,1-d)}k(),h()}(),this.setAttribute("position",new ek(e,3)),this.setAttribute("normal",new ek(e.slice(),3)),this.setAttribute("uv",new ek(f,2)),0===d?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(a){return new ip(a.vertices,a.indices,a.radius,a.details)}}class iq extends ip{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new iq(a.radius,a.detail)}}let ir=new cW,is=new cW,it=new cW,iu=new d$;class iv extends et{constructor(a=null,b=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:a,thresholdAngle:b},null!==a){let c=4,d=Math.pow(10,c),e=Math.cos(cr*b),f=a.getIndex(),g=a.getAttribute("position"),h=f?f.count:g.count,i=[0,0,0],j=["a","b","c"],k=[,,,],l={},m=[];for(let n=0;n<h;n+=3){f?(i[0]=f.getX(n),i[1]=f.getX(n+1),i[2]=f.getX(n+2)):(i[0]=n,i[1]=n+1,i[2]=n+2);let{a:o,b:p,c:q}=iu;if(o.fromBufferAttribute(g,i[0]),p.fromBufferAttribute(g,i[1]),q.fromBufferAttribute(g,i[2]),iu.getNormal(it),k[0]=`${Math.round(o.x*d)},${Math.round(o.y*d)},${Math.round(o.z*d)}`,k[1]=`${Math.round(p.x*d)},${Math.round(p.y*d)},${Math.round(p.z*d)}`,k[2]=`${Math.round(q.x*d)},${Math.round(q.y*d)},${Math.round(q.z*d)}`,k[0]!==k[1]&&k[1]!==k[2]&&k[2]!==k[0])for(let r=0;r<3;r++){let s=(r+1)%3,t=k[r],u=k[s],v=iu[j[r]],w=iu[j[s]],x=`${t}_${u}`,y=`${u}_${t}`;y in l&&l[y]?(it.dot(l[y].normal)<=e&&(m.push(v.x,v.y,v.z),m.push(w.x,w.y,w.z)),l[y]=null):x in l||(l[x]={index0:i[r],index1:i[s],normal:it.clone()})}}for(let z in l)if(l[z]){let{index0:A,index1:B}=l[z];ir.fromBufferAttribute(g,A),is.fromBufferAttribute(g,B),m.push(ir.x,ir.y,ir.z),m.push(is.x,is.y,is.z)}this.setAttribute("position",new ek(m,3))}}}class iw{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b}getSpacedPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(a=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(a,b){let c=this.getLengths(),d=0,e=c.length,f;f=b||a*c[e-1];let g=0,h=e-1,i;for(;g<=h;)if((i=c[d=Math.floor(g+(h-g)/2)]-f)<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}if(c[d=h]===f)return d/(e-1);let j=c[d],k=c[d+1],l=(f-j)/(k-j),m=(d+l)/(e-1);return m}getTangent(a,b){let c=1e-4,d=a-c,e=a+c;d<0&&(d=0),e>1&&(e=1);let f=this.getPoint(d),g=this.getPoint(e),h=b||(f.isVector2?new cG:new cW);return h.copy(g).sub(f).normalize(),h}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(a,b){let c=new cW,d=[],e=[],f=[],g=new cW,h=new dq;for(let i=0;i<=a;i++){let j=i/a;d[i]=this.getTangentAt(j,new cW)}e[0]=new cW,f[0]=new cW;let k=Number.MAX_VALUE,l=Math.abs(d[0].x),m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0)),m<=k&&(k=m,c.set(0,1,0)),n<=k&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let o=1;o<=a;o++){if(e[o]=e[o-1].clone(),f[o]=f[o-1].clone(),g.crossVectors(d[o-1],d[o]),g.length()>Number.EPSILON){g.normalize();let p=Math.acos(cx(d[o-1].dot(d[o]),-1,1));e[o].applyMatrix4(h.makeRotationAxis(g,p))}f[o].crossVectors(d[o],e[o])}if(!0===b){let q=Math.acos(cx(e[0].dot(e[a]),-1,1));q/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(q=-q);for(let r=1;r<=a;r++)e[r].applyMatrix4(h.makeRotationAxis(d[r],q*r)),f[r].crossVectors(d[r],e[r])}return{tangents:d,normals:e,binormals:f}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class ix extends iw{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(a,b){let c=b||new cG,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let j=Math.cos(this.aRotation),k=Math.sin(this.aRotation),l=h-this.aX,m=i-this.aY;h=l*j-m*k+this.aX,i=l*k+m*j+this.aY}return c.set(h,i)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}ix.prototype.isEllipseCurve=!0;class iy extends ix{constructor(a,b,c,d,e,f){super(a,b,c,c,d,e,f),this.type="ArcCurve"}}function iz(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g,j*=g,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}iy.prototype.isArcCurve=!0;let iA=new cW,iB=new iz,iC=new iz,iD=new iz;class iE extends iw{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(a,b=new cW){let c=b,d=this.points,e=d.length,f=(e-(this.closed?0:1))*a,g=Math.floor(f),h=f-g;this.closed?g+=g>0?0:(Math.floor(Math.abs(g)/e)+1)*e:0===h&&g===e-1&&(g=e-2,h=1);let i,j;this.closed||g>0?i=d[(g-1)%e]:(iA.subVectors(d[0],d[1]).add(d[0]),i=iA);let k=d[g%e],l=d[(g+1)%e];if(this.closed||g+2<e?j=d[(g+2)%e]:(iA.subVectors(d[e-1],d[e-2]).add(d[e-1]),j=iA),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,n=Math.pow(i.distanceToSquared(k),m),o=Math.pow(k.distanceToSquared(l),m),p=Math.pow(l.distanceToSquared(j),m);o<1e-4&&(o=1),n<1e-4&&(n=o),p<1e-4&&(p=o),iB.initNonuniformCatmullRom(i.x,k.x,l.x,j.x,n,o,p),iC.initNonuniformCatmullRom(i.y,k.y,l.y,j.y,n,o,p),iD.initNonuniformCatmullRom(i.z,k.z,l.z,j.z,n,o,p)}else"catmullrom"===this.curveType&&(iB.initCatmullRom(i.x,k.x,l.x,j.x,this.tension),iC.initCatmullRom(i.y,k.y,l.y,j.y,this.tension),iD.initCatmullRom(i.z,k.z,l.z,j.z,this.tension));return c.set(iB.calc(h),iC.calc(h),iD.calc(h)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new cW().fromArray(d))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}}function iF(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return(2*c-2*d+f+g)*(a*h)+(-3*c+3*d-2*f-g)*h+f*a+c}iE.prototype.isCatmullRomCurve3=!0;function iG(a,b,c,d){var e,f,g,h;return function(a,b){let c=1-a;return c*c*b}(a,b)+(e=a,2*(1-e)*e*(f=c))+(g=a,g*g*(h=d))}function iH(a,b,c,d,e){var f,g,h,i;return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+(f=a,3*(1-f)*f*f*(g=d))+(h=a,h*h*h*(i=e))}class iI extends iw{constructor(a=new cG,b=new cG,c=new cG,d=new cG){super(),this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new cG){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(iH(a,d.x,e.x,f.x,g.x),iH(a,d.y,e.y,f.y,g.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}iI.prototype.isCubicBezierCurve=!0;class iJ extends iw{constructor(a=new cW,b=new cW,c=new cW,d=new cW){super(),this.type="CubicBezierCurve3",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new cW){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(iH(a,d.x,e.x,f.x,g.x),iH(a,d.y,e.y,f.y,g.y),iH(a,d.z,e.z,f.z,g.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}iJ.prototype.isCubicBezierCurve3=!0;class iK extends iw{constructor(a=new cG,b=new cG){super(),this.type="LineCurve",this.v1=a,this.v2=b}getPoint(a,b=new cG){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b){let c=b||new cG;return c.copy(this.v2).sub(this.v1).normalize(),c}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}iK.prototype.isLineCurve=!0;class iL extends iw{constructor(a=new cW,b=new cW){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=a,this.v2=b}getPoint(a,b=new cW){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class iM extends iw{constructor(a=new cG,b=new cG,c=new cG){super(),this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new cG){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(iG(a,d.x,e.x,f.x),iG(a,d.y,e.y,f.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}iM.prototype.isQuadraticBezierCurve=!0;class iN extends iw{constructor(a=new cW,b=new cW,c=new cW){super(),this.type="QuadraticBezierCurve3",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new cW){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(iG(a,d.x,e.x,f.x),iG(a,d.y,e.y,f.y),iG(a,d.z,e.z,f.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}iN.prototype.isQuadraticBezierCurve3=!0;class iO extends iw{constructor(a=[]){super(),this.type="SplineCurve",this.points=a}getPoint(a,b=new cG){let c=b,d=this.points,e=(d.length-1)*a,f=Math.floor(e),g=e-f,h=d[0===f?f:f-1],i=d[f],j=d[f>d.length-2?d.length-1:f+1],k=d[f>d.length-3?d.length-1:f+2];return c.set(iF(g,h.x,i.x,j.x,k.x),iF(g,h.y,i.y,j.y,k.y)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new cG().fromArray(d))}return this}}iO.prototype.isSplineCurve=!0;var iP=Object.freeze({__proto__:null,ArcCurve:iy,CatmullRomCurve3:iE,CubicBezierCurve:iI,CubicBezierCurve3:iJ,EllipseCurve:ix,LineCurve:iK,LineCurve3:iL,QuadraticBezierCurve:iM,QuadraticBezierCurve3:iN,SplineCurve:iO});class iQ extends iw{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(a){this.curves.push(a)}closePath(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new iK(b,a))}getPoint(a,b){let c=a*this.getLength(),d=this.getCurveLengths(),e=0;for(;e<d.length;){if(d[e]>=c){let f=d[e]-c,g=this.curves[e],h=g.getLength(),i=0===h?0:1-f/h;return g.getPointAt(i,b)}e++}return null}getLength(){let a=this.getCurveLengths();return a[a.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],b=0;for(let c=0,d=this.curves.length;c<d;c++)a.push(b+=this.curves[c].getLength());return this.cacheLengths=a,a}getSpacedPoints(a=40){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return this.autoClose&&b.push(b[0]),b}getPoints(a=12){let b=[],c;for(let d=0,e=this.curves;d<e.length;d++){let f=e[d],g=f&&f.isEllipseCurve?2*a:f&&(f.isLineCurve||f.isLineCurve3)?1:f&&f.isSplineCurve?a*f.points.length:a,h=f.getPoints(g);for(let i=0;i<h.length;i++){let j=h[i];c&&c.equals(j)||(b.push(j),c=j)}}return this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0])&&b.push(b[0]),b}copy(a){super.copy(a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this}toJSON(){let a=super.toJSON();a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(new iP[d.type]().fromJSON(d))}return this}}class iR extends iQ{constructor(a){super(),this.type="Path",this.currentPoint=new cG,a&&this.setFromPoints(a)}setFromPoints(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this}moveTo(a,b){return this.currentPoint.set(a,b),this}lineTo(a,b){let c=new iK(this.currentPoint.clone(),new cG(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this}quadraticCurveTo(a,b,c,d){let e=new iM(this.currentPoint.clone(),new cG(a,b),new cG(c,d));return this.curves.push(e),this.currentPoint.set(c,d),this}bezierCurveTo(a,b,c,d,e,f){let g=new iI(this.currentPoint.clone(),new cG(a,b),new cG(c,d),new cG(e,f));return this.curves.push(g),this.currentPoint.set(e,f),this}splineThru(a){let b=[this.currentPoint.clone()].concat(a),c=new iO(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this}arc(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this}absarc(a,b,c,d,e,f){return this.absellipse(a,b,c,c,d,e,f),this}ellipse(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this}absellipse(a,b,c,d,e,f,g,h){let i=new ix(a,b,c,d,e,f,g,h);if(this.curves.length>0){let j=i.getPoint(0);j.equals(this.currentPoint)||this.lineTo(j.x,j.y)}this.curves.push(i);let k=i.getPoint(1);return this.currentPoint.copy(k),this}copy(a){return super.copy(a),this.currentPoint.copy(a.currentPoint),this}toJSON(){let a=super.toJSON();return a.currentPoint=this.currentPoint.toArray(),a}fromJSON(a){return super.fromJSON(a),this.currentPoint.fromArray(a.currentPoint),this}}class iS extends iR{constructor(a){super(a),this.uuid=cw(),this.type="Shape",this.holes=[]}getPointsHoles(a){let b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b}extractPoints(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}}copy(a){super.copy(a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new iR().fromJSON(d))}return this}}let iT={triangulate:function(a,b,c=2){let d=b&&b.length,e=d?b[0]*c:a.length,f=iU(a,0,e,c,!0),g=[];if(!f||f.next===f.prev)return g;let h,i,j,k,l,m,n;if(d&&(f=i_(a,b,f,c)),a.length>80*c){h=j=a[0],i=k=a[1];for(let o=c;o<e;o+=c)l=a[o],m=a[o+1],l<h&&(h=l),m<i&&(i=m),l>j&&(j=l),m>k&&(k=m);n=0!==(n=Math.max(j-h,k-i))?1/n:0}return iW(f,g,c,h,i,n),g}};function iU(a,b,c,d,e){let f,g;if(e===jm(a,b,c,d)>0)for(f=b;f<c;f+=d)g=jj(f,a[f],a[f+1],g);else for(f=c-d;f>=b;f-=d)g=jj(f,a[f],a[f+1],g);return g&&jb(g,g.next)&&(jk(g),g=g.next),g}function iV(a,b){if(!a)return a;b||(b=a);let c=a,d;do if(d=!1,!c.steiner&&(jb(c,c.next)||0===ja(c.prev,c,c.next))){if(jk(c),(c=b=c.prev)===c.next)break;d=!0}else c=c.next;while(d||c!==b);return b}function iW(a,b,c,d,e,f,g){if(!a)return;!g&&f&&i4(a,d,e,f);let h=a,i,j;for(;a.prev!==a.next;){if(i=a.prev,j=a.next,f?iY(a,d,e,f):iX(a)){b.push(i.i/c),b.push(a.i/c),b.push(j.i/c),jk(a),a=j.next,h=j.next;continue}if((a=j)===h){g?1===g?(a=iZ(iV(a),b,c),iW(a,b,c,d,e,f,2)):2===g&&i$(a,b,c,d,e,f):iW(iV(a),b,c,d,e,f,1);break}}}function iX(a){let b=a.prev,c=a,d=a.next;if(ja(b,c,d)>=0)return!1;let e=a.next.next;for(;e!==a.prev;){if(i8(b.x,b.y,c.x,c.y,d.x,d.y,e.x,e.y)&&ja(e.prev,e,e.next)>=0)return!1;e=e.next}return!0}function iY(a,b,c,d){let e=a.prev,f=a,g=a.next;if(ja(e,f,g)>=0)return!1;let h=e.x<f.x?e.x<g.x?e.x:g.x:f.x<g.x?f.x:g.x,i=e.y<f.y?e.y<g.y?e.y:g.y:f.y<g.y?f.y:g.y,j=e.x>f.x?e.x>g.x?e.x:g.x:f.x>g.x?f.x:g.x,k=e.y>f.y?e.y>g.y?e.y:g.y:f.y>g.y?f.y:g.y,l=i6(h,i,b,c,d),m=i6(j,k,b,c,d),n=a.prevZ,o=a.nextZ;for(;n&&n.z>=l&&o&&o.z<=m;){if(n!==a.prev&&n!==a.next&&i8(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&ja(n.prev,n,n.next)>=0||(n=n.prevZ,o!==a.prev&&o!==a.next&&i8(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&ja(o.prev,o,o.next)>=0))return!1;o=o.nextZ}for(;n&&n.z>=l;){if(n!==a.prev&&n!==a.next&&i8(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&ja(n.prev,n,n.next)>=0)return!1;n=n.prevZ}for(;o&&o.z<=m;){if(o!==a.prev&&o!==a.next&&i8(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&ja(o.prev,o,o.next)>=0)return!1;o=o.nextZ}return!0}function iZ(a,b,c){let d=a;do{let e=d.prev,f=d.next.next;!jb(e,f)&&jc(e,d,d.next,f)&&jg(e,f)&&jg(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),jk(d),jk(d.next),d=a=f),d=d.next}while(d!==a);return iV(d)}function i$(a,b,c,d,e,f){let g=a;do{let h=g.next.next;for(;h!==g.prev;){if(g.i!==h.i&&i9(g,h)){let i=ji(g,h);g=iV(g,g.next),i=iV(i,i.next),iW(g,b,c,d,e,f),iW(i,b,c,d,e,f);return}h=h.next}g=g.next}while(g!==a)}function i_(a,b,c,d){let e=[],f,g,h,i,j;for(f=0,g=b.length;f<g;f++)h=b[f]*d,i=f<g-1?b[f+1]*d:a.length,j=iU(a,h,i,d,!1),j===j.next&&(j.steiner=!0),e.push(i7(j));for(e.sort(i0),f=0;f<e.length;f++)i1(e[f],c),c=iV(c,c.next);return c}function i0(a,b){return a.x-b.x}function i1(a,b){if(b=i2(a,b)){let c=ji(b,a);iV(b,b.next),iV(c,c.next)}}function i2(a,b){let c=b,d=a.x,e=a.y,f=-1/0,g;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){let h=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(h<=d&&h>f){if(f=h,h===d){if(e===c.y)return c;if(e===c.next.y)return c.next}g=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b);if(!g)return null;if(d===f)return g;let i=g,j=g.x,k=g.y,l=1/0,m;c=g;do d>=c.x&&c.x>=j&&d!==c.x&&i8(e<k?d:f,e,j,k,e<k?f:d,e,c.x,c.y)&&(m=Math.abs(e-c.y)/(d-c.x),jg(c,a)&&(m<l||m===l&&(c.x>g.x||c.x===g.x&&i3(g,c)))&&(g=c,l=m)),c=c.next;while(c!==i);return g}function i3(a,b){return 0>ja(a.prev,a,b.prev)&&0>ja(b.next,a,a.next)}function i4(a,b,c,d){let e=a;do null===e.z&&(e.z=i6(e.x,e.y,b,c,d)),e.prevZ=e.prev,e.nextZ=e.next,e=e.next;while(e!==a);e.prevZ.nextZ=null,e.prevZ=null,i5(e)}function i5(a){let b,c,d,e,f,g,h,i,j=1;do{for(c=a,a=null,f=null,g=0;c;){for(g++,d=c,h=0,b=0;b<j&&(h++,d=d.nextZ);b++);for(i=j;h>0||i>0&&d;)0!==h&&(0===i||!d||c.z<=d.z)?(e=c,c=c.nextZ,h--):(e=d,d=d.nextZ,i--),f?f.nextZ=e:a=e,e.prevZ=f,f=e;c=d}f.nextZ=null,j*=2}while(g>1);return a}function i6(a,b,c,d,e){return a=32767*(a-c)*e,b=32767*(b-d)*e,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function i7(a){let b=a,c=a;do(b.x<c.x||b.x===c.x&&b.y<c.y)&&(c=b),b=b.next;while(b!==a);return c}function i8(a,b,c,d,e,f,g,h){return(e-g)*(b-h)-(a-g)*(f-h)>=0&&(a-g)*(d-h)-(c-g)*(b-h)>=0&&(c-g)*(f-h)-(e-g)*(d-h)>=0}function i9(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!jf(a,b)&&(jg(a,b)&&jg(b,a)&&jh(a,b)&&(ja(a.prev,a,b.prev)||ja(a,b.prev,b))||jb(a,b)&&ja(a.prev,a,a.next)>0&&ja(b.prev,b,b.next)>0)}function ja(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function jb(a,b){return a.x===b.x&&a.y===b.y}function jc(a,b,c,d){let e=je(ja(a,b,c)),f=je(ja(a,b,d)),g=je(ja(c,d,a)),h=je(ja(c,d,b));return!!(e!==f&&g!==h||0===e&&jd(a,c,b)||0===f&&jd(a,d,b)||0===g&&jd(c,a,d)||0===h&&jd(c,b,d))}function jd(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function je(a){return a>0?1:a<0?-1:0}function jf(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&jc(c,c.next,a,b))return!0;c=c.next}while(c!==a);return!1}function jg(a,b){return 0>ja(a.prev,a,a.next)?ja(a,b,a.next)>=0&&ja(a,a.prev,b)>=0:0>ja(a,b,a.prev)||0>ja(a,a.next,b)}function jh(a,b){let c=a,d=!1,e=(a.x+b.x)/2,f=(a.y+b.y)/2;do c.y>f!=c.next.y>f&&c.next.y!==c.y&&e<(c.next.x-c.x)*(f-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a);return d}function ji(a,b){let c=new jl(a.i,a.x,a.y),d=new jl(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,c.next=e,e.prev=c,d.next=c,c.prev=d,f.next=d,d.prev=f,d}function jj(a,b,c,d){let e=new jl(a,b,c);return d?(e.next=d.next,e.prev=d,d.next.prev=e,d.next=e):(e.prev=e,e.next=e),e}function jk(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function jl(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function jm(a,b,c,d){let e=0;for(let f=b,g=c-d;f<c;f+=d)e+=(a[g]-a[f])*(a[f+1]+a[g+1]),g=f;return e}class jn{static area(a){let b=a.length,c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return .5*c}static isClockWise(a){return 0>jn.area(a)}static triangulateShape(a,b){let c=[],d=[],e=[];jo(a),jp(c,a);let f=a.length;b.forEach(jo);for(let g=0;g<b.length;g++)d.push(f),f+=b[g].length,jp(c,b[g]);let h=iT.triangulate(c,d);for(let i=0;i<h.length;i+=3)e.push(h.slice(i,i+3));return e}}function jo(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function jp(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}class jq extends et{constructor(a=new iS([new cG(.5,.5),new cG(-.5,.5),new cG(-.5,-.5),new cG(.5,-.5)]),b={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:b},a=Array.isArray(a)?a:[a];let c=this,d=[],e=[];for(let f=0,g=a.length;f<g;f++){let h=a[f];i(h)}function i(a){let f=[],g=void 0!==b.curveSegments?b.curveSegments:12,h=void 0!==b.steps?b.steps:1,i=void 0!==b.depth?b.depth:1,j=void 0===b.bevelEnabled||b.bevelEnabled,k=void 0!==b.bevelThickness?b.bevelThickness:.2,l=void 0!==b.bevelSize?b.bevelSize:k-.1,m=void 0!==b.bevelOffset?b.bevelOffset:0,n=void 0!==b.bevelSegments?b.bevelSegments:3,o=b.extrudePath,p=void 0!==b.UVGenerator?b.UVGenerator:jr;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),i=b.amount);let q,r=!1,s,t,u,v;o&&(q=o.getSpacedPoints(h),r=!0,j=!1,s=o.computeFrenetFrames(h,!1),t=new cW,u=new cW,v=new cW),j||(n=0,k=0,l=0,m=0);let w=a.extractPoints(g),x=w.shape,y=w.holes,z=!jn.isClockWise(x);if(z){x=x.reverse();for(let A=0,B=y.length;A<B;A++){let C=y[A];jn.isClockWise(C)&&(y[A]=C.reverse())}}let D=jn.triangulateShape(x,y),E=x;for(let F=0,G=y.length;F<G;F++){let H=y[F];x=x.concat(H)}function I(a,b,c){return b||console.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}let J=x.length,K=D.length;function L(a,b,c){let d,e,f,g=a.x-b.x,h=a.y-b.y,i=c.x-a.x,j=c.y-a.y,k=g*g+h*h,l=g*j-h*i;if(Math.abs(l)>Number.EPSILON){let m=Math.sqrt(k),n=Math.sqrt(i*i+j*j),o=b.x-h/m,p=b.y+g/m,q=c.x-j/n,r=c.y+i/n,s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=o+g*s-a.x,e=p+h*s-a.y;let t=d*d+e*e;if(t<=2)return new cG(d,e);f=Math.sqrt(t/2)}else{let u=!1;g>Number.EPSILON?i>Number.EPSILON&&(u=!0):g< -Number.EPSILON?i< -Number.EPSILON&&(u=!0):Math.sign(h)===Math.sign(j)&&(u=!0),u?(d=-h,e=g,f=Math.sqrt(k)):(d=g,e=h,f=Math.sqrt(k/2))}return new cG(d/f,e/f)}let M=[];for(let N=0,O=E.length,P=O-1,Q=N+1;N<O;N++,P++,Q++)P===O&&(P=0),Q===O&&(Q=0),M[N]=L(E[N],E[P],E[Q]);let R=[],S,T=M.concat();for(let U=0,V=y.length;U<V;U++){let W=y[U];S=[];for(let X=0,Y=W.length,Z=Y-1,$=X+1;X<Y;X++,Z++,$++)Z===Y&&(Z=0),$===Y&&($=0),S[X]=L(W[X],W[Z],W[$]);R.push(S),T=T.concat(S)}for(let _=0;_<n;_++){let aa=_/n,ab=k*Math.cos(aa*Math.PI/2),ac=l*Math.sin(aa*Math.PI/2)+m;for(let ad=0,ae=E.length;ad<ae;ad++){let af=I(E[ad],M[ad],ac);aG(af.x,af.y,-ab)}for(let ag=0,ah=y.length;ag<ah;ag++){let ai=y[ag];S=R[ag];for(let aj=0,ak=ai.length;aj<ak;aj++){let al=I(ai[aj],S[aj],ac);aG(al.x,al.y,-ab)}}}let am=l+m;for(let an=0;an<J;an++){let ao=j?I(x[an],T[an],am):x[an];r?(u.copy(s.normals[0]).multiplyScalar(ao.x),t.copy(s.binormals[0]).multiplyScalar(ao.y),v.copy(q[0]).add(u).add(t),aG(v.x,v.y,v.z)):aG(ao.x,ao.y,0)}for(let ap=1;ap<=h;ap++)for(let aq=0;aq<J;aq++){let ar=j?I(x[aq],T[aq],am):x[aq];r?(u.copy(s.normals[ap]).multiplyScalar(ar.x),t.copy(s.binormals[ap]).multiplyScalar(ar.y),v.copy(q[ap]).add(u).add(t),aG(v.x,v.y,v.z)):aG(ar.x,ar.y,i/h*ap)}for(let as=n-1;as>=0;as--){let at=as/n,au=k*Math.cos(at*Math.PI/2),av=l*Math.sin(at*Math.PI/2)+m;for(let aw=0,ax=E.length;aw<ax;aw++){let ay=I(E[aw],M[aw],av);aG(ay.x,ay.y,i+au)}for(let az=0,aA=y.length;az<aA;az++){let aB=y[az];S=R[az];for(let aC=0,aD=aB.length;aC<aD;aC++){let aE=I(aB[aC],S[aC],av);r?aG(aE.x,aE.y+q[h-1].y,q[h-1].x+au):aG(aE.x,aE.y,i+au)}}}function aF(a,b){let c=a.length;for(;--c>=0;){let d=c,e=c-1;e<0&&(e=a.length-1);for(let f=0,g=h+2*n;f<g;f++){let i=J*f,j=J*(f+1),k=b+d+i,l=b+e+i,m=b+e+j,o=b+d+j;aI(k,l,m,o)}}}function aG(a,b,c){f.push(a),f.push(b),f.push(c)}function aH(a,b,e){aJ(a),aJ(b),aJ(e);let f=d.length/3,g=p.generateTopUV(c,d,f-3,f-2,f-1);aK(g[0]),aK(g[1]),aK(g[2])}function aI(a,b,e,f){aJ(a),aJ(b),aJ(f),aJ(b),aJ(e),aJ(f);let g=d.length/3,h=p.generateSideWallUV(c,d,g-6,g-3,g-2,g-1);aK(h[0]),aK(h[1]),aK(h[3]),aK(h[1]),aK(h[2]),aK(h[3])}function aJ(a){d.push(f[3*a+0]),d.push(f[3*a+1]),d.push(f[3*a+2])}function aK(a){e.push(a.x),e.push(a.y)}(function(){let a=d.length/3;if(j){let b=0,e=J*b;for(let f=0;f<K;f++){let g=D[f];aH(g[2]+e,g[1]+e,g[0]+e)}e=J*(b=h+2*n);for(let i=0;i<K;i++){let k=D[i];aH(k[0]+e,k[1]+e,k[2]+e)}}else{for(let l=0;l<K;l++){let m=D[l];aH(m[2],m[1],m[0])}for(let o=0;o<K;o++){let p=D[o];aH(p[0]+J*h,p[1]+J*h,p[2]+J*h)}}c.addGroup(a,d.length/3-a,0)})(),function(){let a=d.length/3,b=0;aF(E,b),b+=E.length;for(let e=0,f=y.length;e<f;e++){let g=y[e];aF(g,b),b+=g.length}c.addGroup(a,d.length/3-a,1)}()}this.setAttribute("position",new ek(d,3)),this.setAttribute("uv",new ek(e,2)),this.computeVertexNormals()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return js(b,c,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}let g=a.options.extrudePath;return void 0!==g&&(a.options.extrudePath=new iP[g.type]().fromJSON(g)),new jq(c,a.options)}}let jr={generateTopUV:function(a,b,c,d,e){let f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new cG(f,g),new cG(h,i),new cG(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){let g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return Math.abs(h-k)<Math.abs(g-j)?[new cG(g,1-i),new cG(j,1-l),new cG(m,1-o),new cG(p,1-r)]:[new cG(h,1-i),new cG(k,1-l),new cG(n,1-o),new cG(q,1-r)]}};function js(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class jt extends ip{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new jt(a.radius,a.detail)}}class ju extends et{constructor(a=[new cG(0,.5),new cG(.5,0),new cG(0,-.5)],b=12,c=0,d=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=Math.floor(b),d=cx(d,0,2*Math.PI);let e=[],f=[],g=[],h=1/b,i=new cW,j=new cG;for(let k=0;k<=b;k++){let l=c+k*h*d,m=Math.sin(l),n=Math.cos(l);for(let o=0;o<=a.length-1;o++)i.x=a[o].x*m,i.y=a[o].y,i.z=a[o].x*n,f.push(i.x,i.y,i.z),j.x=k/b,j.y=o/(a.length-1),g.push(j.x,j.y)}for(let p=0;p<b;p++)for(let q=0;q<a.length-1;q++){let r=q+p*a.length,s=r,t=r+a.length,u=r+a.length+1,v=r+1;e.push(s,t,v),e.push(t,u,v)}if(this.setIndex(e),this.setAttribute("position",new ek(f,3)),this.setAttribute("uv",new ek(g,2)),this.computeVertexNormals(),d===2*Math.PI){let w=this.attributes.normal.array,x=new cW,y=new cW,z=new cW,A=b*a.length*3;for(let B=0,C=0;B<a.length;B++,C+=3)x.x=w[C+0],x.y=w[C+1],x.z=w[C+2],y.x=w[A+C+0],y.y=w[A+C+1],y.z=w[A+C+2],z.addVectors(x,y).normalize(),w[C+0]=w[A+C+0]=z.x,w[C+1]=w[A+C+1]=z.y,w[C+2]=w[A+C+2]=z.z}}static fromJSON(a){return new ju(a.points,a.segments,a.phiStart,a.phiLength)}}class jv extends ip{constructor(a=1,b=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new jv(a.radius,a.detail)}}class jw extends et{constructor(a=.5,b=1,c=8,d=1,e=0,f=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},c=Math.max(3,c),d=Math.max(1,d);let g=[],h=[],i=[],j=[],k=a,l=(b-a)/d,m=new cW,n=new cG;for(let o=0;o<=d;o++){for(let p=0;p<=c;p++){let q=e+p/c*f;m.x=k*Math.cos(q),m.y=k*Math.sin(q),h.push(m.x,m.y,m.z),i.push(0,0,1),n.x=(m.x/b+1)/2,n.y=(m.y/b+1)/2,j.push(n.x,n.y)}k+=l}for(let r=0;r<d;r++){let s=r*(c+1);for(let t=0;t<c;t++){let u=t+s,v=u,w=u+c+1,x=u+c+2,y=u+1;g.push(v,w,y),g.push(w,x,y)}}this.setIndex(g),this.setAttribute("position",new ek(h,3)),this.setAttribute("normal",new ek(i,3)),this.setAttribute("uv",new ek(j,2))}static fromJSON(a){return new jw(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)}}class jx extends et{constructor(a=new iS([new cG(0,.5),new cG(-.5,-.5),new cG(.5,-.5)]),b=12){super(),this.type="ShapeGeometry",this.parameters={shapes:a,curveSegments:b};let c=[],d=[],e=[],f=[],g=0,h=0;if(!1===Array.isArray(a))j(a);else for(let i=0;i<a.length;i++)j(a[i]),this.addGroup(g,h,i),g+=h,h=0;function j(a){let g=d.length/3,i=a.extractPoints(b),j=i.shape,k=i.holes;!1===jn.isClockWise(j)&&(j=j.reverse());for(let l=0,m=k.length;l<m;l++){let n=k[l];!0===jn.isClockWise(n)&&(k[l]=n.reverse())}let o=jn.triangulateShape(j,k);for(let p=0,q=k.length;p<q;p++){let r=k[p];j=j.concat(r)}for(let s=0,t=j.length;s<t;s++){let u=j[s];d.push(u.x,u.y,0),e.push(0,0,1),f.push(u.x,u.y)}for(let v=0,w=o.length;v<w;v++){let x=o[v],y=x[0]+g,z=x[1]+g,A=x[2]+g;c.push(y,z,A),h+=3}}this.setIndex(c),this.setAttribute("position",new ek(d,3)),this.setAttribute("normal",new ek(e,3)),this.setAttribute("uv",new ek(f,2))}toJSON(){let a=super.toJSON(),b=this.parameters.shapes;return jy(b,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}return new jx(c,a.curveSegments)}}function jy(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class jz extends et{constructor(a=1,b=32,c=16,d=0,e=2*Math.PI,f=0,g=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let h=Math.min(f+g,Math.PI),i=0,j=[],k=new cW,l=new cW,m=[],n=[],o=[],p=[];for(let q=0;q<=c;q++){let r=[],s=q/c,t=0;0==q&&0==f?t=.5/b:q==c&&h==Math.PI&&(t=-.5/b);for(let u=0;u<=b;u++){let v=u/b;k.x=-a*Math.cos(d+v*e)*Math.sin(f+s*g),k.y=a*Math.cos(f+s*g),k.z=a*Math.sin(d+v*e)*Math.sin(f+s*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(v+t,1-s),r.push(i++)}j.push(r)}for(let w=0;w<c;w++)for(let x=0;x<b;x++){let y=j[w][x+1],z=j[w][x],A=j[w+1][x],B=j[w+1][x+1];(0!==w||f>0)&&m.push(y,z,B),(w!==c-1||h<Math.PI)&&m.push(z,A,B)}this.setIndex(m),this.setAttribute("position",new ek(n,3)),this.setAttribute("normal",new ek(o,3)),this.setAttribute("uv",new ek(p,2))}static fromJSON(a){return new jz(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class jA extends ip{constructor(a=1,b=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new jA(a.radius,a.detail)}}class jB extends et{constructor(a=1,b=.4,c=8,d=6,e=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},c=Math.floor(c),d=Math.floor(d);let f=[],g=[],h=[],i=[],j=new cW,k=new cW,l=new cW;for(let m=0;m<=c;m++)for(let n=0;n<=d;n++){let o=n/d*e,p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o),k.y=(a+b*Math.cos(p))*Math.sin(o),k.z=b*Math.sin(p),g.push(k.x,k.y,k.z),j.x=a*Math.cos(o),j.y=a*Math.sin(o),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(n/d),i.push(m/c)}for(let q=1;q<=c;q++)for(let r=1;r<=d;r++){let s=(d+1)*q+r-1,t=(d+1)*(q-1)+r-1,u=(d+1)*(q-1)+r,v=(d+1)*q+r;f.push(s,t,v),f.push(t,u,v)}this.setIndex(f),this.setAttribute("position",new ek(g,3)),this.setAttribute("normal",new ek(h,3)),this.setAttribute("uv",new ek(i,2))}static fromJSON(a){return new jB(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class jC extends et{constructor(a=1,b=.4,c=64,d=8,e=2,f=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},c=Math.floor(c),d=Math.floor(d);let g=[],h=[],i=[],j=[],k=new cW,l=new cW,m=new cW,n=new cW,o=new cW,p=new cW,q=new cW;for(let r=0;r<=c;++r){let s=r/c*e*Math.PI*2;D(s,e,f,a,m),D(s+.01,e,f,a,n),p.subVectors(n,m),q.addVectors(n,m),o.crossVectors(p,q),q.crossVectors(o,p),o.normalize(),q.normalize();for(let t=0;t<=d;++t){let u=t/d*Math.PI*2,v=-b*Math.cos(u),w=b*Math.sin(u);k.x=m.x+(v*q.x+w*o.x),k.y=m.y+(v*q.y+w*o.y),k.z=m.z+(v*q.z+w*o.z),h.push(k.x,k.y,k.z),l.subVectors(k,m).normalize(),i.push(l.x,l.y,l.z),j.push(r/c),j.push(t/d)}}for(let x=1;x<=c;x++)for(let y=1;y<=d;y++){let z=(d+1)*(x-1)+(y-1),A=(d+1)*x+(y-1),B=(d+1)*x+y,C=(d+1)*(x-1)+y;g.push(z,A,C),g.push(A,B,C)}function D(a,b,c,d,e){let f=c/b*a,g=Math.cos(f);e.x=d*(2+g)*.5*Math.cos(a),e.y=d*(2+g)*Math.sin(a)*.5,e.z=d*Math.sin(f)*.5}this.setIndex(g),this.setAttribute("position",new ek(h,3)),this.setAttribute("normal",new ek(i,3)),this.setAttribute("uv",new ek(j,2))}static fromJSON(a){return new jC(a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q)}}class jD extends et{constructor(a=new iN(new cW(-1,-1,0),new cW(-1,1,0),new cW(1,1,0)),b=64,c=1,d=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new cW,h=new cW,i=new cG,j=new cW,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let n=0;n<=d;n++){let o=n/d*Math.PI*2,p=Math.sin(o),q=-Math.cos(o);h.x=q*i.x+p*m.x,h.y=q*i.y+p*m.y,h.z=q*i.z+p*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}function p(){for(let a=1;a<=b;a++)for(let c=1;c<=d;c++){let e=(d+1)*(a-1)+(c-1),f=(d+1)*a+(c-1),g=(d+1)*a+c,h=(d+1)*(a-1)+c;n.push(e,f,h),n.push(f,g,h)}}function q(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),q(),p()})(),this.setIndex(n),this.setAttribute("position",new ek(k,3)),this.setAttribute("normal",new ek(l,3)),this.setAttribute("uv",new ek(m,2))}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new jD(new iP[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}class jE extends et{constructor(a=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:a},null!==a){let b=[],c=new Set,d=new cW,e=new cW;if(null!==a.index){let f=a.attributes.position,g=a.index,h=a.groups;0===h.length&&(h=[{start:0,count:g.count,materialIndex:0}]);for(let i=0,j=h.length;i<j;++i){let k=h[i],l=k.start,m=k.count;for(let n=l,o=l+m;n<o;n+=3)for(let p=0;p<3;p++){let q=g.getX(n+p),r=g.getX(n+(p+1)%3);d.fromBufferAttribute(f,q),e.fromBufferAttribute(f,r),!0===jF(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}}else{let s=a.attributes.position;for(let t=0,u=s.count/3;t<u;t++)for(let v=0;v<3;v++){let w=3*t+v,x=3*t+(v+1)%3;d.fromBufferAttribute(s,w),e.fromBufferAttribute(s,x),!0===jF(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}this.setAttribute("position",new ek(b,3))}}}function jF(a,b,c){let d=`${a.x},${a.y},${a.z}-${b.x},${b.y},${b.z}`,e=`${b.x},${b.y},${b.z}-${a.x},${a.y},${a.z}`;return!0!==c.has(d)&& !0!==c.has(e)&&(c.add(d,e),!0)}var jG=Object.freeze({__proto__:null,BoxGeometry:eN,BoxBufferGeometry:eN,CircleGeometry:il,CircleBufferGeometry:il,ConeGeometry:io,ConeBufferGeometry:io,CylinderGeometry:im,CylinderBufferGeometry:im,DodecahedronGeometry:iq,DodecahedronBufferGeometry:iq,EdgesGeometry:iv,ExtrudeGeometry:jq,ExtrudeBufferGeometry:jq,IcosahedronGeometry:jt,IcosahedronBufferGeometry:jt,LatheGeometry:ju,LatheBufferGeometry:ju,OctahedronGeometry:jv,OctahedronBufferGeometry:jv,PlaneGeometry:e4,PlaneBufferGeometry:e4,PolyhedronGeometry:ip,PolyhedronBufferGeometry:ip,RingGeometry:jw,RingBufferGeometry:jw,ShapeGeometry:jx,ShapeBufferGeometry:jx,SphereGeometry:jz,SphereBufferGeometry:jz,TetrahedronGeometry:jA,TetrahedronBufferGeometry:jA,TorusGeometry:jB,TorusBufferGeometry:jB,TorusKnotGeometry:jC,TorusKnotBufferGeometry:jC,TubeGeometry:jD,TubeBufferGeometry:jD,WireframeGeometry:jE});class jH extends d0{constructor(a){super(),this.type="ShadowMaterial",this.color=new d7(0),this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this}}jH.prototype.isShadowMaterial=!0;class jI extends d0{constructor(a){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new d7(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new d7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bY,this.normalScale=new cG(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}jI.prototype.isMeshStandardMaterial=!0;class jJ extends jI{constructor(a){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new cG(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return cx(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.sheenTint=new d7(0),this.sheenRoughness=1,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new d7(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new d7(1,1,1),this.specularTintMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(a)}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.sheen=a.sheen,this.sheenTint.copy(a.sheenTint),this.sheenRoughness=a.sheenRoughness,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationTint.copy(a.attenuationTint),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularTint.copy(a.specularTint),this.specularTintMap=a.specularTintMap,this}}jJ.prototype.isMeshPhysicalMaterial=!0;class jK extends d0{constructor(a){super(),this.type="MeshPhongMaterial",this.color=new d7(16777215),this.specular=new d7(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new d7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bY,this.normalScale=new cG(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}jK.prototype.isMeshPhongMaterial=!0;class jL extends d0{constructor(a){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new d7(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new d7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bY,this.normalScale=new cG(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}jL.prototype.isMeshToonMaterial=!0;class jM extends d0{constructor(a){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bY,this.normalScale=new cG(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.flatShading=a.flatShading,this}}jM.prototype.isMeshNormalMaterial=!0;class jN extends d0{constructor(a){super(),this.type="MeshLambertMaterial",this.color=new d7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new d7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}jN.prototype.isMeshLambertMaterial=!0;class jO extends d0{constructor(a){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new d7(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bY,this.normalScale=new cG(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.flatShading=a.flatShading,this}}jO.prototype.isMeshMatcapMaterial=!0;class jP extends h${constructor(a){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}copy(a){return super.copy(a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this}}jP.prototype.isLineDashedMaterial=!0;var jQ=Object.freeze({__proto__:null,ShadowMaterial:jH,SpriteMaterial:hq,RawShaderMaterial:ff,ShaderMaterial:eR,PointsMaterial:h9,MeshPhysicalMaterial:jJ,MeshStandardMaterial:jI,MeshPhongMaterial:jK,MeshToonMaterial:jL,MeshNormalMaterial:jM,MeshLambertMaterial:jN,MeshDepthMaterial:g6,MeshDistanceMaterial:g7,MeshBasicMaterial:d8,MeshMatcapMaterial:jO,LineDashedMaterial:jP,LineBasicMaterial:h$,Material:d0});let jR={arraySlice:function(a,b,c){return jR.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){let b=a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;return c.sort(function(b,c){return a[b]-a[c]}),c},sortedArray:function(a,b,c){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let h=c[f]*b;for(let i=0;i!==b;++i)e[g++]=a[h+i]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&& void 0===f[d];)f=a[e++];if(void 0===f)return;let g=f[d];if(void 0!==g){if(Array.isArray(g))do void 0!==(g=f[d])&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f);else if(void 0!==g.toArray)do void 0!==(g=f[d])&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f);else do void 0!==(g=f[d])&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}},subclip:function(a,b,c,d,e=30){let f=a.clone();f.name=b;let g=[];for(let h=0;h<f.tracks.length;++h){let i=f.tracks[h],j=i.getValueSize(),k=[],l=[];for(let m=0;m<i.times.length;++m){let n=i.times[m]*e;if(!(n<c)&&!(n>=d)){k.push(i.times[m]);for(let o=0;o<j;++o)l.push(i.values[m*j+o])}}0!==k.length&&(i.times=jR.convertArray(k,i.times.constructor),i.values=jR.convertArray(l,i.values.constructor),g.push(i))}f.tracks=g;let p=1/0;for(let q=0;q<f.tracks.length;++q)p>f.tracks[q].times[0]&&(p=f.tracks[q].times[0]);for(let r=0;r<f.tracks.length;++r)f.tracks[r].shift(-1*p);return f.resetDuration(),f},makeClipAdditive:function(a,b=0,c=a,d=30){d<=0&&(d=30);let e=c.tracks.length,f=b/d;for(let g=0;g<e;++g){let h=c.tracks[g],i=h.ValueTypeName;if("bool"===i||"string"===i)continue;let j=a.tracks.find(function(a){return a.name===h.name&&a.ValueTypeName===i});if(void 0===j)continue;let k=0,l=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(k=l/3);let m=0,n=j.getValueSize();j.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=n/3);let o=h.times.length-1,p;if(f<=h.times[0]){let q=k,r=l-k;p=jR.arraySlice(h.values,q,r)}else if(f>=h.times[o]){let s=o*l+k,t=s+l-k;p=jR.arraySlice(h.values,s,t)}else{let u=h.createInterpolant(),v=k,w=l-k;u.evaluate(f),p=jR.arraySlice(u.resultBuffer,v,w)}if("quaternion"===i){let x=new cV().fromArray(p).normalize().conjugate();x.toArray(p)}let y=j.times.length;for(let z=0;z<y;++z){let A=z*n+m;if("quaternion"===i)cV.multiplyQuaternionsFlat(j.values,A,p,0,j.values,A);else{let B=n-2*m;for(let C=0;C<B;++C)j.values[A+C]-=p[C]}}}return a.blendMode=bK,a}};class jS{constructor(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c,this.settings=null,this.DefaultSettings_={}}evaluate(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(a<d)){for(let g=c+2;;){if(void 0===d){if(a<e)break forward_scan;return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,a,e)}if(c===g)break;if(e=d,a<(d=b[++c]))break seek}f=b.length;break linear_scan}if(!(a>=e)){let h=b[1];a<h&&(c=2,e=h);for(let i=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===i)break;if(d=e,a>=(e=b[--c-1]))break seek}f=c,c=0;break linear_scan}break validate_interval}for(;c<f;){let j=c+f>>>1;a<b[j]?f=j:c=j+1}if(d=b[c],e=b[c-1],void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,e,a)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let f=0;f!==d;++f)b[f]=c[e+f];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}jS.prototype.beforeStart_=jS.prototype.copySampleValue_,jS.prototype.afterEnd_=jS.prototype.copySampleValue_;class jT extends jS{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:bG,endingEnd:bG}}intervalChanged_(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case bH:e=a,g=2*b-c;break;case bI:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case bH:f=a,h=2*c-b;break;case bI:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e}}class jU extends jS{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e}}class jV extends jS{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class jW{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=jR.convertArray(b,this.TimeBufferType),this.values=jR.convertArray(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let b=a.constructor,c;if(b.toJSON!==this.toJSON)c=b.toJSON(a);else{c={name:a.name,times:jR.convertArray(a.times,Array),values:jR.convertArray(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(c.interpolation=d)}return c.type=a.ValueTypeName,c}InterpolantFactoryMethodDiscrete(a){return new jV(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new jU(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new jT(this.times,this.values,this.getValueSize(),a)}setInterpolation(a){let b;switch(a){case bD:b=this.InterpolantFactoryMethodDiscrete;break;case bE:b=this.InterpolantFactoryMethodLinear;break;case bF:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=b,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return bD;case this.InterpolantFactoryMethodLinear:return bE;case this.InterpolantFactoryMethodSmooth:return bF}}getValueSize(){return this.values.length/this.times.length}shift(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this}scale(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this}trim(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let g=this.getValueSize();this.times=jR.arraySlice(c,e,f),this.values=jR.arraySlice(this.values,e*g,f*g)}return this}validate(){let a=!0,b=this.getValueSize();b-Math.floor(b)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let c=this.times,d=this.values,e=c.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let f=null;for(let g=0;g!==e;g++){let h=c[g];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,g,h),a=!1;break}if(null!==f&&f>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,g,h,f),a=!1;break}f=h}if(void 0!==d&&jR.isTypedArray(d))for(let i=0,j=d.length;i!==j;++i){let k=d[i];if(isNaN(k)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,k),a=!1;break}}return a}optimize(){let a=jR.arraySlice(this.times),b=jR.arraySlice(this.values),c=this.getValueSize(),d=this.getInterpolation()===bF,e=a.length-1,f=1;for(let g=1;g<e;++g){let h=!1,i=a[g],j=a[g+1];if(i!==j&&(1!==g||i!==a[0])){if(d)h=!0;else{let k=g*c,l=k-c,m=k+c;for(let n=0;n!==c;++n){let o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=!0;break}}}}if(h){if(g!==f){a[f]=a[g];let p=g*c,q=f*c;for(let r=0;r!==c;++r)b[q+r]=b[p+r]}++f}}if(e>0){a[f]=a[e];for(let s=e*c,t=f*c,u=0;u!==c;++u)b[t+u]=b[s+u];++f}return f!==a.length?(this.times=jR.arraySlice(a,0,f),this.values=jR.arraySlice(b,0,f*c)):(this.times=a,this.values=b),this}clone(){let a=jR.arraySlice(this.times,0),b=jR.arraySlice(this.values,0),c=this.constructor,d=new c(this.name,a,b);return d.createInterpolant=this.createInterpolant,d}}jW.prototype.TimeBufferType=Float32Array,jW.prototype.ValueBufferType=Float32Array,jW.prototype.DefaultInterpolation=bE;class jX extends jW{}jX.prototype.ValueTypeName="bool",jX.prototype.ValueBufferType=Array,jX.prototype.DefaultInterpolation=bD,jX.prototype.InterpolantFactoryMethodLinear=void 0,jX.prototype.InterpolantFactoryMethodSmooth=void 0;class jY extends jW{}jY.prototype.ValueTypeName="color";class jZ extends jW{}jZ.prototype.ValueTypeName="number";class j$ extends jS{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let j=i+g;i!==j;i+=4)cV.slerpFlat(e,0,f,i-g,f,i,h);return e}}class j_ extends jW{InterpolantFactoryMethodLinear(a){return new j$(this.times,this.values,this.getValueSize(),a)}}j_.prototype.ValueTypeName="quaternion",j_.prototype.DefaultInterpolation=bE,j_.prototype.InterpolantFactoryMethodSmooth=void 0;class j0 extends jW{}j0.prototype.ValueTypeName="string",j0.prototype.ValueBufferType=Array,j0.prototype.DefaultInterpolation=bD,j0.prototype.InterpolantFactoryMethodLinear=void 0,j0.prototype.InterpolantFactoryMethodSmooth=void 0;class j1 extends jW{}j1.prototype.ValueTypeName="vector";class j2{constructor(a,b=-1,c,d=bJ){this.name=a,this.tracks=c,this.duration=b,this.blendMode=d,this.uuid=cw(),this.duration<0&&this.resetDuration()}static parse(a){let b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(j3(c[e]).scale(d));let g=new this(a.name,a.duration,b,a.blendMode);return g.uuid=a.uuid,g}static toJSON(a){let b=[],c=a.tracks,d={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let e=0,f=c.length;e!==f;++e)b.push(jW.toJSON(c[e]));return d}static CreateFromMorphTargetSequence(a,b,c,d){let e=b.length,f=[];for(let g=0;g<e;g++){let h=[],i=[];h.push((g+e-1)%e,g,(g+1)%e),i.push(0,1,0);let j=jR.getKeyframeOrder(h);h=jR.sortedArray(h,1,j),i=jR.sortedArray(i,1,j),d||0!==h[0]||(h.push(e),i.push(i[0])),f.push(new jZ(".morphTargetInfluences["+b[g].name+"]",h,i).scale(1/c))}return new this(a,-1,f)}static findByName(a,b){let c=a;if(!Array.isArray(a)){let d=a;c=d.geometry&&d.geometry.animations||d.animations}for(let e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null}static CreateClipsFromMorphTargetSequences(a,b,c){let d={},e=/^([\w-]*?)([\d]+)$/;for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.name.match(e);if(i&&i.length>1){let j=i[1],k=d[j];k||(d[j]=k=[]),k.push(h)}}let l=[];for(let m in d)l.push(this.CreateFromMorphTargetSequence(m,d[m],b,c));return l}static parseAnimation(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let c=function(a,b,c,d,e){if(0!==c.length){let f=[],g=[];jR.flattenJSON(c,f,g,d),0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.fps||30,g=a.blendMode,h=a.length|| -1,i=a.hierarchy||[];for(let j=0;j<i.length;j++){let k=i[j].keys;if(k&&0!==k.length){if(k[0].morphTargets){let l={},m;for(m=0;m<k.length;m++)if(k[m].morphTargets)for(let n=0;n<k[m].morphTargets.length;n++)l[k[m].morphTargets[n]]=-1;for(let o in l){let p=[],q=[];for(let r=0;r!==k[m].morphTargets.length;++r){let s=k[m];p.push(s.time),q.push(s.morphTarget===o?1:0)}d.push(new jZ(".morphTargetInfluence["+o+"]",p,q))}h=l.length*(f||1)}else{let t=".bones["+b[j].name+"]";c(j1,t+".position",k,"pos",d),c(j_,t+".quaternion",k,"rot",d),c(j1,t+".scale",k,"scl",d)}}}if(0===d.length)return null;let u=new this(e,h,d,g);return u}resetDuration(){let a=this.tracks,b=0;for(let c=0,d=a.length;c!==d;++c){let e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1])}return this.duration=b,this}trim(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this}validate(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a}optimize(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}clone(){let a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new this.constructor(this.name,this.duration,a,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function j3(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return jZ;case"vector":case"vector2":case"vector3":case"vector4":return j1;case"color":return jY;case"quaternion":return j_;case"bool":case"boolean":return jX;case"string":return j0}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];jR.flattenJSON(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}let j4={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class j5{constructor(a,b,c){let d=this,e=!1,f=0,g=0,h,i=[];this.onStart=void 0,this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){g++,!1===e&& void 0!==d.onStart&&d.onStart(a,f,g),e=!0},this.itemEnd=function(a){f++,void 0!==d.onProgress&&d.onProgress(a,f,g),f===g&&(e=!1,void 0!==d.onLoad&&d.onLoad())},this.itemError=function(a){void 0!==d.onError&&d.onError(a)},this.resolveURL=function(a){return h?h(a):a},this.setURLModifier=function(a){return h=a,this},this.addHandler=function(a,b){return i.push(a,b),this},this.removeHandler=function(a){let b=i.indexOf(a);return -1!==b&&i.splice(b,2),this},this.getHandler=function(a){for(let b=0,c=i.length;b<c;b+=2){let d=i[b],e=i[b+1];if(d.global&&(d.lastIndex=0),d.test(a))return e}return null}}}let j6=new j5;class j7{constructor(a){this.manager=void 0!==a?a:j6,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})}parse(){}setCrossOrigin(a){return this.crossOrigin=a,this}setWithCredentials(a){return this.withCredentials=a,this}setPath(a){return this.path=a,this}setResourcePath(a){return this.resourcePath=a,this}setRequestHeader(a){return this.requestHeader=a,this}}let j8={};class j9 extends j7{constructor(a){super(a)}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=j4.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;if(void 0!==j8[a]){j8[a].push({onLoad:b,onProgress:c,onError:d});return}let g=a.match(/^data:(.*?)(;base64)?,(.*)$/),h;if(g){let i=g[1],j=!!g[2],k=g[3];k=decodeURIComponent(k),j&&(k=atob(k));try{let l,m=(this.responseType||"").toLowerCase();switch(m){case"arraybuffer":case"blob":let n=new Uint8Array(k.length);for(let o=0;o<k.length;o++)n[o]=k.charCodeAt(o);l="blob"===m?new Blob([n.buffer],{type:i}):n.buffer;break;case"document":let p=new DOMParser;l=p.parseFromString(k,i);break;case"json":l=JSON.parse(k);break;default:l=k}setTimeout(function(){b&&b(l),e.manager.itemEnd(a)},0)}catch(q){setTimeout(function(){d&&d(q),e.manager.itemError(a),e.manager.itemEnd(a)},0)}}else{for(let r in j8[a]=[],j8[a].push({onLoad:b,onProgress:c,onError:d}),(h=new XMLHttpRequest).open("GET",a,!0),h.addEventListener("load",function(b){let c=this.response,d=j8[a];if(delete j8[a],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),j4.add(a,c);for(let f=0,g=d.length;f<g;f++){let h=d[f];h.onLoad&&h.onLoad(c)}e.manager.itemEnd(a)}else{for(let i=0,j=d.length;i<j;i++){let k=d[i];k.onError&&k.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)}},!1),h.addEventListener("progress",function(b){let c=j8[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onProgress&&f.onProgress(b)}},!1),h.addEventListener("error",function(b){let c=j8[a];delete j8[a];for(let d=0,f=c.length;d<f;d++){let g=c[d];g.onError&&g.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)},!1),h.addEventListener("abort",function(b){let c=j8[a];delete j8[a];for(let d=0,f=c.length;d<f;d++){let g=c[d];g.onError&&g.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)},!1),void 0!==this.responseType&&(h.responseType=this.responseType),void 0!==this.withCredentials&&(h.withCredentials=this.withCredentials),h.overrideMimeType&&h.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)h.setRequestHeader(r,this.requestHeader[r]);h.send(null)}return e.manager.itemStart(a),h}setResponseType(a){return this.responseType=a,this}setMimeType(a){return this.mimeType=a,this}}class ka extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new j9(this.manager);f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(this.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b=[];for(let c=0;c<a.length;c++){let d=j2.parse(a[c]);b.push(d)}return b}}class kb extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=[],g=new ii,h=new j9(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(e.withCredentials);let i=0;function j(j){h.load(a[j],function(a){let c=e.parse(a,!0);f[j]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps},6===(i+=1)&&(1===c.mipmapCount&&(g.minFilter=at),g.image=f,g.format=c.format,g.needsUpdate=!0,b&&b(g))},c,d)}if(Array.isArray(a))for(let k=0,l=a.length;k<l;++k)j(k);else h.load(a,function(a){let c=e.parse(a,!0);if(c.isCubemap){let d=c.mipmaps.length/c.mipmapCount;for(let h=0;h<d;h++){f[h]={mipmaps:[]};for(let i=0;i<c.mipmapCount;i++)f[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]),f[h].format=c.format,f[h].width=c.width,f[h].height=c.height}g.image=f}else g.image.width=c.width,g.image.height=c.height,g.mipmaps=c.mipmaps;1===c.mipmapCount&&(g.minFilter=at),g.format=c.format,g.needsUpdate=!0,b&&b(g)},c,d);return g}}class kc extends j7{constructor(a){super(a)}load(a,b,c,d){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=j4.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g=cL("img");function h(){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1),j4.add(a,this),b&&b(this),e.manager.itemEnd(a)}function i(b){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1),d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}return g.addEventListener("load",h,!1),g.addEventListener("error",i,!1),"data:"!==a.substr(0,5)&& void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),e.manager.itemStart(a),g.src=a,g}}class kd extends j7{constructor(a){super(a)}load(a,b,c,d){let e=new eV,f=new kc(this.manager);f.setCrossOrigin(this.crossOrigin),f.setPath(this.path);let g=0;function h(c){f.load(a[c],function(a){e.images[c]=a,6== ++g&&(e.needsUpdate=!0,b&&b(e))},void 0,d)}for(let i=0;i<a.length;++i)h(i);return e}}class ke extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new hQ,g=new j9(this.manager);return g.setResponseType("arraybuffer"),g.setRequestHeader(this.requestHeader),g.setPath(this.path),g.setWithCredentials(e.withCredentials),g.load(a,function(a){let c=e.parse(a);c&&(void 0!==c.image?f.image=c.image:void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data),f.wrapS=void 0!==c.wrapS?c.wrapS:am,f.wrapT=void 0!==c.wrapT?c.wrapT:am,f.magFilter=void 0!==c.magFilter?c.magFilter:at,f.minFilter=void 0!==c.minFilter?c.minFilter:at,f.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(f.encoding=c.encoding),void 0!==c.flipY&&(f.flipY=c.flipY),void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps,f.minFilter=aw),1===c.mipmapCount&&(f.minFilter=at),void 0!==c.generateMipmaps&&(f.generateMipmaps=c.generateMipmaps),f.needsUpdate=!0,b&&b(f,c))},c,d),f}}class kf extends j7{constructor(a){super(a)}load(a,b,c,d){let e=new cP,f=new kc(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(a,function(a){e.image=a,e.needsUpdate=!0,void 0!==b&&b(e)},c,d),e}}class kg extends dP{constructor(a,b=1){super(),this.type="Light",this.color=new d7(a),this.intensity=b}dispose(){}copy(a){return super.copy(a),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(a){let b=super.toJSON(a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}kg.prototype.isLight=!0;class kh extends kg{constructor(a,b,c){super(a,c),this.type="HemisphereLight",this.position.copy(dP.DefaultUp),this.updateMatrix(),this.groundColor=new d7(b)}copy(a){return kg.prototype.copy.call(this,a),this.groundColor.copy(a.groundColor),this}}kh.prototype.isHemisphereLight=!0;let ki=new dq,kj=new cW,kk=new cW;class kl{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new cG(512,512),this.map=null,this.mapPass=null,this.matrix=new dq,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new e1,this._frameExtents=new cG(1,1),this._viewportCount=1,this._viewports=[new cR(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(a){let b=this.camera,c=this.matrix;kj.setFromMatrixPosition(a.matrixWorld),b.position.copy(kj),kk.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(kk),b.updateMatrixWorld(),ki.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ki),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(b.projectionMatrix),c.multiply(b.matrixWorldInverse)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}class km extends kl{constructor(){super(new eT(50,1,.5,500)),this.focus=1}updateMatrices(a){let b=this.camera,c=2*cs*a.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;(c!==b.fov||d!==b.aspect||e!==b.far)&&(b.fov=c,b.aspect=d,b.far=e,b.updateProjectionMatrix()),super.updateMatrices(a)}copy(a){return super.copy(a),this.focus=a.focus,this}}km.prototype.isSpotLightShadow=!0;class kn extends kg{constructor(a,b,c=0,d=Math.PI/3,e=0,f=1){super(a,b),this.type="SpotLight",this.position.copy(dP.DefaultUp),this.updateMatrix(),this.target=new dP,this.distance=c,this.angle=d,this.penumbra=e,this.decay=f,this.shadow=new km}get power(){return this.intensity*Math.PI}set power(a){this.intensity=a/Math.PI}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}kn.prototype.isSpotLight=!0;let ko=new dq,kp=new cW,kq=new cW;class kr extends kl{constructor(){super(new eT(90,1,.5,500)),this._frameExtents=new cG(4,2),this._viewportCount=6,this._viewports=[new cR(2,1,1,1),new cR(0,1,1,1),new cR(3,1,1,1),new cR(1,1,1,1),new cR(3,0,1,1),new cR(1,0,1,1)],this._cubeDirections=[new cW(1,0,0),new cW(-1,0,0),new cW(0,0,1),new cW(0,0,-1),new cW(0,1,0),new cW(0,-1,0)],this._cubeUps=[new cW(0,1,0),new cW(0,1,0),new cW(0,1,0),new cW(0,1,0),new cW(0,0,1),new cW(0,0,-1)]}updateMatrices(a,b=0){let c=this.camera,d=this.matrix,e=a.distance||c.far;e!==c.far&&(c.far=e,c.updateProjectionMatrix()),kp.setFromMatrixPosition(a.matrixWorld),c.position.copy(kp),kq.copy(c.position),kq.add(this._cubeDirections[b]),c.up.copy(this._cubeUps[b]),c.lookAt(kq),c.updateMatrixWorld(),d.makeTranslation(-kp.x,-kp.y,-kp.z),ko.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ko)}}kr.prototype.isPointLightShadow=!0;class ks extends kg{constructor(a,b,c=0,d=1){super(a,b),this.type="PointLight",this.distance=c,this.decay=d,this.shadow=new kr}get power(){return 4*this.intensity*Math.PI}set power(a){this.intensity=a/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}ks.prototype.isPointLight=!0;class kt extends kl{constructor(){super(new fe(-5,5,5,-5,.5,500))}}kt.prototype.isDirectionalLightShadow=!0;class ku extends kg{constructor(a,b){super(a,b),this.type="DirectionalLight",this.position.copy(dP.DefaultUp),this.updateMatrix(),this.target=new dP,this.shadow=new kt}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}ku.prototype.isDirectionalLight=!0;class kv extends kg{constructor(a,b){super(a,b),this.type="AmbientLight"}}kv.prototype.isAmbientLight=!0;class kw extends kg{constructor(a,b,c=10,d=10){super(a,b),this.type="RectAreaLight",this.width=c,this.height=d}get power(){return this.intensity*this.width*this.height*Math.PI}set power(a){this.intensity=a/(this.width*this.height*Math.PI)}copy(a){return super.copy(a),this.width=a.width,this.height=a.height,this}toJSON(a){let b=super.toJSON(a);return b.object.width=this.width,b.object.height=this.height,b}}kw.prototype.isRectAreaLight=!0;class kx{constructor(){this.coefficients=[];for(let a=0;a<9;a++)this.coefficients.push(new cW)}set(a){for(let b=0;b<9;b++)this.coefficients[b].copy(a[b]);return this}zero(){for(let a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this}getAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.282095),b.addScaledVector(f[1],.488603*d),b.addScaledVector(f[2],.488603*e),b.addScaledVector(f[3],.488603*c),b.addScaledVector(f[4],1.092548*(c*d)),b.addScaledVector(f[5],1.092548*(d*e)),b.addScaledVector(f[6],.315392*(3*e*e-1)),b.addScaledVector(f[7],1.092548*(c*e)),b.addScaledVector(f[8],.546274*(c*c-d*d)),b}getIrradianceAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.886227),b.addScaledVector(f[1],1.023328*d),b.addScaledVector(f[2],1.023328*e),b.addScaledVector(f[3],1.023328*c),b.addScaledVector(f[4],.858086*c*d),b.addScaledVector(f[5],.858086*d*e),b.addScaledVector(f[6],.743125*e*e-.247708),b.addScaledVector(f[7],.858086*c*e),b.addScaledVector(f[8],.429043*(c*c-d*d)),b}add(a){for(let b=0;b<9;b++)this.coefficients[b].add(a.coefficients[b]);return this}addScaledSH(a,b){for(let c=0;c<9;c++)this.coefficients[c].addScaledVector(a.coefficients[c],b);return this}scale(a){for(let b=0;b<9;b++)this.coefficients[b].multiplyScalar(a);return this}lerp(a,b){for(let c=0;c<9;c++)this.coefficients[c].lerp(a.coefficients[c],b);return this}equals(a){for(let b=0;b<9;b++)if(!this.coefficients[b].equals(a.coefficients[b]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(a,b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].fromArray(a,b+3*d);return this}toArray(a=[],b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].toArray(a,b+3*d);return a}static getBasisAt(a,b){let c=a.x,d=a.y,e=a.z;b[0]=.282095,b[1]=.488603*d,b[2]=.488603*e,b[3]=.488603*c,b[4]=1.092548*c*d,b[5]=1.092548*d*e,b[6]=.315392*(3*e*e-1),b[7]=1.092548*c*e,b[8]=.546274*(c*c-d*d)}}kx.prototype.isSphericalHarmonics3=!0;class ky extends kg{constructor(a=new kx,b=1){super(void 0,b),this.sh=a}copy(a){return super.copy(a),this.sh.copy(a.sh),this}fromJSON(a){return this.intensity=a.intensity,this.sh.fromArray(a.sh),this}toJSON(a){let b=super.toJSON(a);return b.object.sh=this.sh.toArray(),b}}ky.prototype.isLightProbe=!0;class kz extends j7{constructor(a){super(a),this.textures={}}load(a,b,c,d){let e=this,f=new j9(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b=this.textures;function c(a){return void 0===b[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),b[a]}let d=new jQ[a.type];if(void 0!==a.uuid&&(d.uuid=a.uuid),void 0!==a.name&&(d.name=a.name),void 0!==a.color&& void 0!==d.color&&d.color.setHex(a.color),void 0!==a.roughness&&(d.roughness=a.roughness),void 0!==a.metalness&&(d.metalness=a.metalness),void 0!==a.sheen&&(d.sheen=a.sheen),void 0!==a.sheenTint&&(d.sheenTint=new d7().setHex(a.sheenTint)),void 0!==a.sheenRoughness&&(d.sheenRoughness=a.sheenRoughness),void 0!==a.emissive&& void 0!==d.emissive&&d.emissive.setHex(a.emissive),void 0!==a.specular&& void 0!==d.specular&&d.specular.setHex(a.specular),void 0!==a.specularIntensity&&(d.specularIntensity=a.specularIntensity),void 0!==a.specularTint&& void 0!==d.specularTint&&d.specularTint.setHex(a.specularTint),void 0!==a.shininess&&(d.shininess=a.shininess),void 0!==a.clearcoat&&(d.clearcoat=a.clearcoat),void 0!==a.clearcoatRoughness&&(d.clearcoatRoughness=a.clearcoatRoughness),void 0!==a.transmission&&(d.transmission=a.transmission),void 0!==a.thickness&&(d.thickness=a.thickness),void 0!==a.attenuationDistance&&(d.attenuationDistance=a.attenuationDistance),void 0!==a.attenuationTint&& void 0!==d.attenuationTint&&d.attenuationTint.setHex(a.attenuationTint),void 0!==a.fog&&(d.fog=a.fog),void 0!==a.flatShading&&(d.flatShading=a.flatShading),void 0!==a.blending&&(d.blending=a.blending),void 0!==a.combine&&(d.combine=a.combine),void 0!==a.side&&(d.side=a.side),void 0!==a.shadowSide&&(d.shadowSide=a.shadowSide),void 0!==a.opacity&&(d.opacity=a.opacity),void 0!==a.format&&(d.format=a.format),void 0!==a.transparent&&(d.transparent=a.transparent),void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest),void 0!==a.depthTest&&(d.depthTest=a.depthTest),void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite),void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite),void 0!==a.stencilWrite&&(d.stencilWrite=a.stencilWrite),void 0!==a.stencilWriteMask&&(d.stencilWriteMask=a.stencilWriteMask),void 0!==a.stencilFunc&&(d.stencilFunc=a.stencilFunc),void 0!==a.stencilRef&&(d.stencilRef=a.stencilRef),void 0!==a.stencilFuncMask&&(d.stencilFuncMask=a.stencilFuncMask),void 0!==a.stencilFail&&(d.stencilFail=a.stencilFail),void 0!==a.stencilZFail&&(d.stencilZFail=a.stencilZFail),void 0!==a.stencilZPass&&(d.stencilZPass=a.stencilZPass),void 0!==a.wireframe&&(d.wireframe=a.wireframe),void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth),void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap),void 0!==a.wireframeLinejoin&&(d.wireframeLinejoin=a.wireframeLinejoin),void 0!==a.rotation&&(d.rotation=a.rotation),1!==a.linewidth&&(d.linewidth=a.linewidth),void 0!==a.dashSize&&(d.dashSize=a.dashSize),void 0!==a.gapSize&&(d.gapSize=a.gapSize),void 0!==a.scale&&(d.scale=a.scale),void 0!==a.polygonOffset&&(d.polygonOffset=a.polygonOffset),void 0!==a.polygonOffsetFactor&&(d.polygonOffsetFactor=a.polygonOffsetFactor),void 0!==a.polygonOffsetUnits&&(d.polygonOffsetUnits=a.polygonOffsetUnits),void 0!==a.dithering&&(d.dithering=a.dithering),void 0!==a.alphaToCoverage&&(d.alphaToCoverage=a.alphaToCoverage),void 0!==a.premultipliedAlpha&&(d.premultipliedAlpha=a.premultipliedAlpha),void 0!==a.visible&&(d.visible=a.visible),void 0!==a.toneMapped&&(d.toneMapped=a.toneMapped),void 0!==a.userData&&(d.userData=a.userData),void 0!==a.vertexColors&&("number"==typeof a.vertexColors?d.vertexColors=a.vertexColors>0:d.vertexColors=a.vertexColors),void 0!==a.uniforms)for(let e in a.uniforms){let f=a.uniforms[e];switch(d.uniforms[e]={},f.type){case"t":d.uniforms[e].value=c(f.value);break;case"c":d.uniforms[e].value=new d7().setHex(f.value);break;case"v2":d.uniforms[e].value=new cG().fromArray(f.value);break;case"v3":d.uniforms[e].value=new cW().fromArray(f.value);break;case"v4":d.uniforms[e].value=new cR().fromArray(f.value);break;case"m3":d.uniforms[e].value=new cH().fromArray(f.value);break;case"m4":d.uniforms[e].value=new dq().fromArray(f.value);break;default:d.uniforms[e].value=f.value}}if(void 0!==a.defines&&(d.defines=a.defines),void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader),void 0!==a.extensions)for(let g in a.extensions)d.extensions[g]=a.extensions[g];if(void 0!==a.shading&&(d.flatShading=1===a.shading),void 0!==a.size&&(d.size=a.size),void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation),void 0!==a.map&&(d.map=c(a.map)),void 0!==a.matcap&&(d.matcap=c(a.matcap)),void 0!==a.alphaMap&&(d.alphaMap=c(a.alphaMap)),void 0!==a.bumpMap&&(d.bumpMap=c(a.bumpMap)),void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale),void 0!==a.normalMap&&(d.normalMap=c(a.normalMap)),void 0!==a.normalMapType&&(d.normalMapType=a.normalMapType),void 0!==a.normalScale){let h=a.normalScale;!1===Array.isArray(h)&&(h=[h,h]),d.normalScale=new cG().fromArray(h)}return void 0!==a.displacementMap&&(d.displacementMap=c(a.displacementMap)),void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale),void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias),void 0!==a.roughnessMap&&(d.roughnessMap=c(a.roughnessMap)),void 0!==a.metalnessMap&&(d.metalnessMap=c(a.metalnessMap)),void 0!==a.emissiveMap&&(d.emissiveMap=c(a.emissiveMap)),void 0!==a.emissiveIntensity&&(d.emissiveIntensity=a.emissiveIntensity),void 0!==a.specularMap&&(d.specularMap=c(a.specularMap)),void 0!==a.specularIntensityMap&&(d.specularIntensityMap=c(a.specularIntensityMap)),void 0!==a.specularTintMap&&(d.specularTintMap=c(a.specularTintMap)),void 0!==a.envMap&&(d.envMap=c(a.envMap)),void 0!==a.envMapIntensity&&(d.envMapIntensity=a.envMapIntensity),void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity),void 0!==a.refractionRatio&&(d.refractionRatio=a.refractionRatio),void 0!==a.lightMap&&(d.lightMap=c(a.lightMap)),void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity),void 0!==a.aoMap&&(d.aoMap=c(a.aoMap)),void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity),void 0!==a.gradientMap&&(d.gradientMap=c(a.gradientMap)),void 0!==a.clearcoatMap&&(d.clearcoatMap=c(a.clearcoatMap)),void 0!==a.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap=c(a.clearcoatRoughnessMap)),void 0!==a.clearcoatNormalMap&&(d.clearcoatNormalMap=c(a.clearcoatNormalMap)),void 0!==a.clearcoatNormalScale&&(d.clearcoatNormalScale=new cG().fromArray(a.clearcoatNormalScale)),void 0!==a.transmissionMap&&(d.transmissionMap=c(a.transmissionMap)),void 0!==a.thicknessMap&&(d.thicknessMap=c(a.thicknessMap)),d}setTextures(a){return this.textures=a,this}}class kA{static decodeText(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}}static extractUrlBase(a){let b=a.lastIndexOf("/");return -1===b?"./":a.substr(0,b+1)}}class kB extends et{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(a){return super.copy(a),this.instanceCount=a.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let a=super.toJSON(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}kB.prototype.isInstancedBufferGeometry=!0;class kC extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new j9(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b={},c={};function d(a,c){if(void 0!==b[c])return b[c];let d=a.interleavedBuffers,f=d[c],g=e(a,f.buffer),h=cK(f.type,g),i=new hn(h,f.stride);return i.uuid=f.uuid,b[c]=i,i}function e(a,b){if(void 0!==c[b])return c[b];let d=a.arrayBuffers,e=d[b],f=new Uint32Array(e).buffer;return c[b]=f,f}let f=a.isInstancedBufferGeometry?new kB:new et,g=a.data.index;if(void 0!==g){let h=cK(g.type,g.array);f.setIndex(new eb(h,1))}let i=a.data.attributes;for(let j in i){let k=i[j],l;if(k.isInterleavedBufferAttribute){let m=d(a.data,k.data);l=new hp(m,k.itemSize,k.offset,k.normalized)}else{let n=cK(k.type,k.array),o=k.isInstancedBufferAttribute?hU:eb;l=new o(n,k.itemSize,k.normalized)}void 0!==k.name&&(l.name=k.name),void 0!==k.usage&&l.setUsage(k.usage),void 0!==k.updateRange&&(l.updateRange.offset=k.updateRange.offset,l.updateRange.count=k.updateRange.count),f.setAttribute(j,l)}let p=a.data.morphAttributes;if(p)for(let q in p){let r=p[q],s=[];for(let t=0,u=r.length;t<u;t++){let v=r[t],w;if(v.isInterleavedBufferAttribute){let x=d(a.data,v.data);w=new hp(x,v.itemSize,v.offset,v.normalized)}else{let y=cK(v.type,v.array);w=new eb(y,v.itemSize,v.normalized)}void 0!==v.name&&(w.name=v.name),s.push(w)}f.morphAttributes[q]=s}let z=a.data.morphTargetsRelative;z&&(f.morphTargetsRelative=!0);let A=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==A)for(let B=0,C=A.length;B!==C;++B){let D=A[B];f.addGroup(D.start,D.count,D.materialIndex)}let E=a.data.boundingSphere;if(void 0!==E){let F=new cW;void 0!==E.center&&F.fromArray(E.center),f.boundingSphere=new dg(F,E.radius)}return a.name&&(f.name=a.name),a.userData&&(f.userData=a.userData),f}}class kD extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=""===this.path?kA.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||f;let g=new j9(this.manager);g.setPath(this.path),g.setRequestHeader(this.requestHeader),g.setWithCredentials(this.withCredentials),g.load(a,function(c){let f=null;try{f=JSON.parse(c)}catch(g){void 0!==d&&d(g),console.error("THREE:ObjectLoader: Can't parse "+a+".",g.message);return}let h=f.metadata;if(void 0===h|| void 0===h.type||"geometry"===h.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+a);return}e.parse(f,b)},c,d)}async loadAsync(a,b){let c=""===this.path?kA.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||c;let d=new j9(this.manager);d.setPath(this.path),d.setRequestHeader(this.requestHeader),d.setWithCredentials(this.withCredentials);let e=await d.loadAsync(a,b),f=JSON.parse(e),g=f.metadata;if(void 0===g|| void 0===g.type||"geometry"===g.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+a);return await this.parseAsync(f)}parse(a,b){let c=this.parseAnimations(a.animations),d=this.parseShapes(a.shapes),e=this.parseGeometries(a.geometries,d),f=this.parseImages(a.images,function(){void 0!==b&&b(i)}),g=this.parseTextures(a.textures,f),h=this.parseMaterials(a.materials,g),i=this.parseObject(a.object,e,h,g,c),j=this.parseSkeletons(a.skeletons,i);if(this.bindSkeletons(i,j),void 0!==b){let k=!1;for(let l in f)if(f[l]instanceof HTMLImageElement){k=!0;break}!1===k&&b(i)}return i}async parseAsync(a){let b=this.parseAnimations(a.animations),c=this.parseShapes(a.shapes),d=this.parseGeometries(a.geometries,c),e=await this.parseImagesAsync(a.images),f=this.parseTextures(a.textures,e),g=this.parseMaterials(a.materials,f),h=this.parseObject(a.object,d,g,f,b),i=this.parseSkeletons(a.skeletons,h);return this.bindSkeletons(h,i),h}parseShapes(a){let b={};if(void 0!==a)for(let c=0,d=a.length;c<d;c++){let e=new iS().fromJSON(a[c]);b[e.uuid]=e}return b}parseSkeletons(a,b){let c={},d={};if(b.traverse(function(a){a.isBone&&(d[a.uuid]=a)}),void 0!==a)for(let e=0,f=a.length;e<f;e++){let g=new hT().fromJSON(a[e],d);c[g.uuid]=g}return c}parseGeometries(a,b){let c={};if(void 0!==a){let d=new kC;for(let e=0,f=a.length;e<f;e++){let g,h=a[e];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":g=d.parse(h);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:h.type in jG?g=jG[h.type].fromJSON(h,b):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}g.uuid=h.uuid,void 0!==h.name&&(g.name=h.name),!0===g.isBufferGeometry&& void 0!==h.userData&&(g.userData=h.userData),c[h.uuid]=g}}return c}parseMaterials(a,b){let c={},d={};if(void 0!==a){let e=new kz;e.setTextures(b);for(let f=0,g=a.length;f<g;f++){let h=a[f];if("MultiMaterial"===h.type){let i=[];for(let j=0;j<h.materials.length;j++){let k=h.materials[j];void 0===c[k.uuid]&&(c[k.uuid]=e.parse(k)),i.push(c[k.uuid])}d[h.uuid]=i}else void 0===c[h.uuid]&&(c[h.uuid]=e.parse(h)),d[h.uuid]=c[h.uuid]}}return d}parseAnimations(a){let b={};if(void 0!==a)for(let c=0;c<a.length;c++){let d=a[c],e=j2.parse(d);b[e.uuid]=e}return b}parseImages(a,b){let c=this,d={},e;function f(a){if("string"==typeof a){var b;let d=a,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:c.resourcePath+d;return b=f,c.manager.itemStart(b),e.load(b,function(){c.manager.itemEnd(b)},void 0,function(){c.manager.itemError(b),c.manager.itemEnd(b)})}return a.data?{data:cK(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==a&&a.length>0){let g=new j5(b);(e=new kc(g)).setCrossOrigin(this.crossOrigin);for(let h=0,i=a.length;h<i;h++){let j=a[h],k=j.url;if(Array.isArray(k)){d[j.uuid]=[];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=f(n);null!==o&&(o instanceof HTMLImageElement?d[j.uuid].push(o):d[j.uuid].push(new hQ(o.data,o.width,o.height)))}}else{let p=f(j.url);null!==p&&(d[j.uuid]=p)}}}return d}async parseImagesAsync(a){let b=this,c={},d;async function e(a){if("string"==typeof a){let c=a,e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:b.resourcePath+c;return await d.loadAsync(e)}return a.data?{data:cK(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==a&&a.length>0){(d=new kc(this.manager)).setCrossOrigin(this.crossOrigin);for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.url;if(Array.isArray(i)){c[h.uuid]=[];for(let j=0,k=i.length;j<k;j++){let l=i[j],m=await e(l);null!==m&&(m instanceof HTMLImageElement?c[h.uuid].push(m):c[h.uuid].push(new hQ(m.data,m.width,m.height)))}}else{let n=await e(h.url);null!==n&&(c[h.uuid]=n)}}}return c}parseTextures(a,b){function c(a,b){return"number"==typeof a?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),b[a])}let d={};if(void 0!==a)for(let e=0,f=a.length;e<f;e++){let g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',g.uuid),void 0===b[g.image]&&console.warn("THREE.ObjectLoader: Undefined image",g.image);let h,i=b[g.image];Array.isArray(i)?(h=new eV(i),6===i.length&&(h.needsUpdate=!0)):(h=i&&i.data?new hQ(i.data,i.width,i.height):new cP(i),i&&(h.needsUpdate=!0)),h.uuid=g.uuid,void 0!==g.name&&(h.name=g.name),void 0!==g.mapping&&(h.mapping=c(g.mapping,kE)),void 0!==g.offset&&h.offset.fromArray(g.offset),void 0!==g.repeat&&h.repeat.fromArray(g.repeat),void 0!==g.center&&h.center.fromArray(g.center),void 0!==g.rotation&&(h.rotation=g.rotation),void 0!==g.wrap&&(h.wrapS=c(g.wrap[0],kF),h.wrapT=c(g.wrap[1],kF)),void 0!==g.format&&(h.format=g.format),void 0!==g.type&&(h.type=g.type),void 0!==g.encoding&&(h.encoding=g.encoding),void 0!==g.minFilter&&(h.minFilter=c(g.minFilter,kG)),void 0!==g.magFilter&&(h.magFilter=c(g.magFilter,kG)),void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy),void 0!==g.flipY&&(h.flipY=g.flipY),void 0!==g.premultiplyAlpha&&(h.premultiplyAlpha=g.premultiplyAlpha),void 0!==g.unpackAlignment&&(h.unpackAlignment=g.unpackAlignment),d[g.uuid]=h}return d}parseObject(a,b,c,d,e){let f;function g(a){return void 0===b[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a),b[a]}function h(a){if(void 0!==a){if(Array.isArray(a)){let b=[];for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===c[f]&&console.warn("THREE.ObjectLoader: Undefined material",f),b.push(c[f])}return b}return void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),c[a]}}function i(a){return void 0===d[a]&&console.warn("THREE.ObjectLoader: Undefined texture",a),d[a]}let j,k;switch(a.type){case"Scene":f=new hm,void 0!==a.background&&(Number.isInteger(a.background)?f.background=new d7(a.background):f.background=i(a.background)),void 0!==a.environment&&(f.environment=i(a.environment)),void 0!==a.fog&&("Fog"===a.fog.type?f.fog=new hl(a.fog.color,a.fog.near,a.fog.far):"FogExp2"===a.fog.type&&(f.fog=new hk(a.fog.color,a.fog.density)));break;case"PerspectiveCamera":f=new eT(a.fov,a.aspect,a.near,a.far),void 0!==a.focus&&(f.focus=a.focus),void 0!==a.zoom&&(f.zoom=a.zoom),void 0!==a.filmGauge&&(f.filmGauge=a.filmGauge),void 0!==a.filmOffset&&(f.filmOffset=a.filmOffset),void 0!==a.view&&(f.view=Object.assign({},a.view));break;case"OrthographicCamera":f=new fe(a.left,a.right,a.top,a.bottom,a.near,a.far),void 0!==a.zoom&&(f.zoom=a.zoom),void 0!==a.view&&(f.view=Object.assign({},a.view));break;case"AmbientLight":f=new kv(a.color,a.intensity);break;case"DirectionalLight":f=new ku(a.color,a.intensity);break;case"PointLight":f=new ks(a.color,a.intensity,a.distance,a.decay);break;case"RectAreaLight":f=new kw(a.color,a.intensity,a.width,a.height);break;case"SpotLight":f=new kn(a.color,a.intensity,a.distance,a.angle,a.penumbra,a.decay);break;case"HemisphereLight":f=new kh(a.color,a.groundColor,a.intensity);break;case"LightProbe":f=new ky().fromJSON(a);break;case"SkinnedMesh":j=g(a.geometry),k=h(a.material),f=new hO(j,k),void 0!==a.bindMode&&(f.bindMode=a.bindMode),void 0!==a.bindMatrix&&f.bindMatrix.fromArray(a.bindMatrix),void 0!==a.skeleton&&(f.skeleton=a.skeleton);break;case"Mesh":j=g(a.geometry),k=h(a.material),f=new eL(j,k);break;case"InstancedMesh":j=g(a.geometry),k=h(a.material);let l=a.count,m=a.instanceMatrix,n=a.instanceColor;(f=new hZ(j,k,l)).instanceMatrix=new hU(new Float32Array(m.array),16),void 0!==n&&(f.instanceColor=new hU(new Float32Array(n.array),n.itemSize));break;case"LOD":f=new hI;break;case"Line":f=new h4(g(a.geometry),h(a.material));break;case"LineLoop":f=new h8(g(a.geometry),h(a.material));break;case"LineSegments":f=new h7(g(a.geometry),h(a.material));break;case"PointCloud":case"Points":f=new ie(g(a.geometry),h(a.material));break;case"Sprite":f=new hE(h(a.material));break;case"Group":f=new hd;break;case"Bone":f=new hP;break;default:f=new dP}if(f.uuid=a.uuid,void 0!==a.name&&(f.name=a.name),void 0!==a.matrix?(f.matrix.fromArray(a.matrix),void 0!==a.matrixAutoUpdate&&(f.matrixAutoUpdate=a.matrixAutoUpdate),f.matrixAutoUpdate&&f.matrix.decompose(f.position,f.quaternion,f.scale)):(void 0!==a.position&&f.position.fromArray(a.position),void 0!==a.rotation&&f.rotation.fromArray(a.rotation),void 0!==a.quaternion&&f.quaternion.fromArray(a.quaternion),void 0!==a.scale&&f.scale.fromArray(a.scale)),void 0!==a.castShadow&&(f.castShadow=a.castShadow),void 0!==a.receiveShadow&&(f.receiveShadow=a.receiveShadow),a.shadow&&(void 0!==a.shadow.bias&&(f.shadow.bias=a.shadow.bias),void 0!==a.shadow.normalBias&&(f.shadow.normalBias=a.shadow.normalBias),void 0!==a.shadow.radius&&(f.shadow.radius=a.shadow.radius),void 0!==a.shadow.mapSize&&f.shadow.mapSize.fromArray(a.shadow.mapSize),void 0!==a.shadow.camera&&(f.shadow.camera=this.parseObject(a.shadow.camera))),void 0!==a.visible&&(f.visible=a.visible),void 0!==a.frustumCulled&&(f.frustumCulled=a.frustumCulled),void 0!==a.renderOrder&&(f.renderOrder=a.renderOrder),void 0!==a.userData&&(f.userData=a.userData),void 0!==a.layers&&(f.layers.mask=a.layers),void 0!==a.children){let o=a.children;for(let p=0;p<o.length;p++)f.add(this.parseObject(o[p],b,c,d,e))}if(void 0!==a.animations){let q=a.animations;for(let r=0;r<q.length;r++){let s=q[r];f.animations.push(e[s])}}if("LOD"===a.type){void 0!==a.autoUpdate&&(f.autoUpdate=a.autoUpdate);let t=a.levels;for(let u=0;u<t.length;u++){let v=t[u],w=f.getObjectByProperty("uuid",v.object);void 0!==w&&f.addLevel(w,v.distance)}}return f}bindSkeletons(a,b){0!==Object.keys(b).length&&a.traverse(function(a){if(!0===a.isSkinnedMesh&& void 0!==a.skeleton){let c=b[a.skeleton];void 0===c?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",a.skeleton):a.bind(c,a.bindMatrix)}})}setTexturePath(a){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(a)}}let kE={UVMapping:ae,CubeReflectionMapping:af,CubeRefractionMapping:ag,EquirectangularReflectionMapping:ah,EquirectangularRefractionMapping:ai,CubeUVReflectionMapping:aj,CubeUVRefractionMapping:ak},kF={RepeatWrapping:al,ClampToEdgeWrapping:am,MirroredRepeatWrapping:an},kG={NearestFilter:ao,NearestMipmapNearestFilter:ap,NearestMipmapLinearFilter:ar,LinearFilter:at,LinearMipmapNearestFilter:au,LinearMipmapLinearFilter:aw};class kH extends j7{constructor(a){super(a),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(a){return this.options=a,this}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=j4.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g={};g.credentials="anonymous"===this.crossOrigin?"same-origin":"include",g.headers=this.requestHeader,fetch(a,g).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,Object.assign(e.options,{colorSpaceConversion:"none"}))}).then(function(c){j4.add(a,c),b&&b(c),e.manager.itemEnd(a)}).catch(function(b){d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}),e.manager.itemStart(a)}}kH.prototype.isImageBitmapLoader=!0;let kI,kJ={getContext:function(){return void 0===kI&&(kI=new(window.AudioContext||window.webkitAudioContext)),kI},setContext:function(a){kI=a}};class kK extends j7{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new j9(this.manager);f.setResponseType("arraybuffer"),f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(this.withCredentials),f.load(a,function(c){try{let f=c.slice(0),g=kJ.getContext();g.decodeAudioData(f,function(a){b(a)})}catch(h){d?d(h):console.error(h),e.manager.itemError(a)}},c,d)}}class kL extends ky{constructor(a,b,c=1){super(void 0,c);let d=new d7().set(a),e=new d7().set(b),f=new cW(d.r,d.g,d.b),g=new cW(e.r,e.g,e.b),h=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(f).add(g).multiplyScalar(h),this.sh.coefficients[1].copy(f).sub(g).multiplyScalar(h*Math.sqrt(.75))}}kL.prototype.isHemisphereLightProbe=!0;class kM extends ky{constructor(a,b=1){super(void 0,b);let c=new d7().set(a);this.sh.coefficients[0].set(c.r,c.g,c.b).multiplyScalar(2*Math.sqrt(Math.PI))}}kM.prototype.isAmbientLightProbe=!0;let kN=new dq,kO=new dq;class kP{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new eT,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new eT,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(a){let b=this._cache,c=b.focus!==a.focus||b.fov!==a.fov||b.aspect!==a.aspect*this.aspect||b.near!==a.near||b.far!==a.far||b.zoom!==a.zoom||b.eyeSep!==this.eyeSep;if(c){b.focus=a.focus,b.fov=a.fov,b.aspect=a.aspect*this.aspect,b.near=a.near,b.far=a.far,b.zoom=a.zoom,b.eyeSep=this.eyeSep;let d=a.projectionMatrix.clone(),e=b.eyeSep/2,f=e*b.near/b.focus,g=b.near*Math.tan(cr*b.fov*.5)/b.zoom,h,i;kO.elements[12]=-e,kN.elements[12]=e,h=-g*b.aspect+f,i=g*b.aspect+f,d.elements[0]=2*b.near/(i-h),d.elements[8]=(i+h)/(i-h),this.cameraL.projectionMatrix.copy(d),h=-g*b.aspect-f,i=g*b.aspect-f,d.elements[0]=2*b.near/(i-h),d.elements[8]=(i+h)/(i-h),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(kO),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(kN)}}class kQ{constructor(a=!0){this.autoStart=a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=kR(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let b=kR();a=(b-this.oldTime)/1e3,this.oldTime=b,this.elapsedTime+=a}return a}}function kR(){return("undefined"==typeof performance?Date:performance).now()}let kS=new cW,kT=new cV,kU=new cW,kV=new cW;class kW extends dP{constructor(){super(),this.type="AudioListener",this.context=kJ.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new kQ}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(a){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=a,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}updateMatrixWorld(a){super.updateMatrixWorld(a);let b=this.context.listener,c=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(kS,kT,kU),kV.set(0,0,-1).applyQuaternion(kT),b.positionX){let d=this.context.currentTime+this.timeDelta;b.positionX.linearRampToValueAtTime(kS.x,d),b.positionY.linearRampToValueAtTime(kS.y,d),b.positionZ.linearRampToValueAtTime(kS.z,d),b.forwardX.linearRampToValueAtTime(kV.x,d),b.forwardY.linearRampToValueAtTime(kV.y,d),b.forwardZ.linearRampToValueAtTime(kV.z,d),b.upX.linearRampToValueAtTime(c.x,d),b.upY.linearRampToValueAtTime(c.y,d),b.upZ.linearRampToValueAtTime(c.z,d)}else b.setPosition(kS.x,kS.y,kS.z),b.setOrientation(kV.x,kV.y,kV.z,c.x,c.y,c.z)}}class kX extends dP{constructor(a){super(),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this}setMediaElementSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this}setMediaStreamSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this}setBuffer(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this}play(a=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+a;let b=this.context.createBufferSource();return b.buffer=this.buffer,b.loop=this.loop,b.loopStart=this.loopStart,b.loopEnd=this.loopEnd,b.onended=this.onEnded.bind(this),b.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=b,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(a){return a||(a=[]),!0===this._connected?(this.disconnect(),this.filters=a.slice(),this.connect()):this.filters=a.slice(),this}setDetune(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){return this.loopStart=a,this}setLoopEnd(a){return this.loopEnd=a,this}getVolume(){return this.gain.gain.value}setVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}}let kY=new cW,kZ=new cV,k$=new cW,k_=new cW;class k0 extends kX{constructor(a){super(a),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(a){return this.panner.refDistance=a,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(a){return this.panner.rolloffFactor=a,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(a){return this.panner.distanceModel=a,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(a){return this.panner.maxDistance=a,this}setDirectionalCone(a,b,c){return this.panner.coneInnerAngle=a,this.panner.coneOuterAngle=b,this.panner.coneOuterGain=c,this}updateMatrixWorld(a){if(super.updateMatrixWorld(a),!0===this.hasPlaybackControl&& !1===this.isPlaying)return;this.matrixWorld.decompose(kY,kZ,k$),k_.set(0,0,1).applyQuaternion(kZ);let b=this.panner;if(b.positionX){let c=this.context.currentTime+this.listener.timeDelta;b.positionX.linearRampToValueAtTime(kY.x,c),b.positionY.linearRampToValueAtTime(kY.y,c),b.positionZ.linearRampToValueAtTime(kY.z,c),b.orientationX.linearRampToValueAtTime(k_.x,c),b.orientationY.linearRampToValueAtTime(k_.y,c),b.orientationZ.linearRampToValueAtTime(k_.z,c)}else b.setPosition(kY.x,kY.y,kY.z),b.setOrientation(k_.x,k_.y,k_.z)}}class k1{constructor(a,b=2048){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=b,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let a=0,b=this.getFrequencyData();for(let c=0;c<b.length;c++)a+=b[c];return a/b.length}}class k2{constructor(a,b,c){this.binding=a,this.valueSize=c;let d,e,f;switch(b){case"quaternion":d=this._slerp,e=this._slerpAdditive,f=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*c),this._workIndex=5;break;case"string":case"bool":d=this._select,e=this._select,f=this._setAdditiveIdentityOther,this.buffer=Array(5*c);break;default:d=this._lerp,e=this._lerpAdditive,f=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=d,this._mixBufferRegionAdditive=e,this._setIdentity=f,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(a,b){let c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(let g=0;g!==d;++g)c[e+g]=c[g];f=b}else{f+=b;let h=b/f;this._mixBufferRegion(c,e,0,h,d)}this.cumulativeWeight=f}accumulateAdditive(a){let b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(b,d,0,a,c),this.cumulativeWeightAdditive+=a}apply(a){let b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.cumulativeWeightAdditive,g=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let h=b*this._origIndex;this._mixBufferRegion(c,d,h,1-e,b)}f>0&&this._mixBufferRegionAdditive(c,d,this._addIndex*b,1,b);for(let i=b,j=b+b;i!==j;++i)if(c[i]!==c[i+b]){g.setValue(c,d);break}}saveOriginalState(){let a=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;a.getValue(b,d);for(let e=c,f=d;e!==f;++e)b[e]=b[d+e%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)}_setAdditiveIdentityNumeric(){let a=this._addIndex*this.valueSize,b=a+this.valueSize;for(let c=a;c<b;c++)this.buffer[c]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let a=this._origIndex*this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]}_select(a,b,c,d,e){if(d>=.5)for(let f=0;f!==e;++f)a[b+f]=a[c+f]}_slerp(a,b,c,d){cV.slerpFlat(a,b,a,b,a,c,d)}_slerpAdditive(a,b,c,d,e){let f=this._workIndex*e;cV.multiplyQuaternionsFlat(a,f,a,b,a,c),cV.slerpFlat(a,b,a,b,a,f,d)}_lerp(a,b,c,d,e){let f=1-d;for(let g=0;g!==e;++g){let h=b+g;a[h]=a[h]*f+a[c+g]*d}}_lerpAdditive(a,b,c,d,e){for(let f=0;f!==e;++f){let g=b+f;a[g]=a[g]+a[c+f]*d}}}let k3="\\[\\]\\.:\\/",k4=RegExp("["+k3+"]","g"),k5="[^"+k3+"]",k6="[^"+k3.replace("\\.","")+"]",k7=/((?:WC+[\/:])*)/.source.replace("WC",k5),k8=/(WCOD+)?/.source.replace("WCOD",k6),k9=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",k5),la=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",k5),lb=RegExp("^"+k7+k8+k9+la+"$"),lc=["material","materials","bones"];class ld{constructor(a,b,c){this.path=b,this.parsedPath=c||ld.parseTrackName(b),this.node=ld.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new ld.Composite(a,b,c):new ld(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(k4,"")}static parseTrackName(a){let b=lb.exec(a);if(!b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&& -1!==d){let e=c.nodeName.substring(d+1);-1!==lc.indexOf(e)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=e)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c}static findNode(a,b){if(!b||""===b||"."===b|| -1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let d=function(a){for(let c=0;c<a.length;c++){let e=a[c];if(e.name===b||e.uuid===b)return e;let f=d(e.children);if(f)return f}return null},e=d(a.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]}_setValue_array_setNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=ld.findNode(this.rootNode,b.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){let f=b.objectIndex;switch(c){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let g=0;g<a.length;g++)if(a[g].name===f){f=g;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let h=a[d];if(void 0===h){let i=b.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+d+" but it wasn't found.",a);return}let j=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?j=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(j=this.Versioning.MatrixWorldNeedsUpdate);let k=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}k=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=e}else void 0!==h.fromArray&& void 0!==h.toArray?(k=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(k=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=d;this.getValue=this.GetterByBindingType[k],this.setValue=this.SetterByBindingTypeAndVersioning[k][j]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ld.Composite=class{constructor(a,b,c){let d=c||ld.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}getValue(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)}setValue(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)}bind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()}unbind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}},ld.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ld.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ld.prototype.GetterByBindingType=[ld.prototype._getValue_direct,ld.prototype._getValue_array,ld.prototype._getValue_arrayElement,ld.prototype._getValue_toArray,],ld.prototype.SetterByBindingTypeAndVersioning=[[ld.prototype._setValue_direct,ld.prototype._setValue_direct_setNeedsUpdate,ld.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[ld.prototype._setValue_array,ld.prototype._setValue_array_setNeedsUpdate,ld.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[ld.prototype._setValue_arrayElement,ld.prototype._setValue_arrayElement_setNeedsUpdate,ld.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[ld.prototype._setValue_fromArray,ld.prototype._setValue_fromArray_setNeedsUpdate,ld.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class le{constructor(){this.uuid=cw(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let a={};this._indicesByUUID=a;for(let b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let a=this._objects,b=this._indicesByUUID,c=this._paths,d=this._parsedPaths,e=this._bindings,f=e.length,g,h=a.length,i=this.nCachedObjects_;for(let j=0,k=arguments.length;j!==k;++j){let l=arguments[j],m=l.uuid,n=b[m];if(void 0===n){n=h++,b[m]=n,a.push(l);for(let o=0,p=f;o!==p;++o)e[o].push(new ld(l,c[o],d[o]))}else if(n<i){g=a[n];let q=--i,r=a[q];b[r.uuid]=n,a[n]=r,b[m]=q,a[q]=l;for(let s=0,t=f;s!==t;++s){let u=e[s],v=u[q],w=u[n];u[n]=v,void 0===w&&(w=new ld(l,c[s],d[s])),u[q]=w}}else a[n]!==g&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i}remove(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_;for(let f=0,g=arguments.length;f!==g;++f){let h=arguments[f],i=h.uuid,j=b[i];if(void 0!==j&&j>=e){let k=e++,l=a[k];b[l.uuid]=j,a[j]=l,b[i]=k,a[k]=h;for(let m=0,n=d;m!==n;++m){let o=c[m],p=o[k],q=o[j];o[j]=p,o[k]=q}}}this.nCachedObjects_=e}uncache(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_,f=a.length;for(let g=0,h=arguments.length;g!==h;++g){let i=arguments[g],j=i.uuid,k=b[j];if(void 0!==k){if(delete b[j],k<e){let l=--e,m=a[l],n=--f,o=a[n];b[m.uuid]=k,a[k]=m,b[o.uuid]=l,a[l]=o,a.pop();for(let p=0,q=d;p!==q;++p){let r=c[p],s=r[l],t=r[n];r[k]=s,r[l]=t,r.pop()}}else{let u=--f,v=a[u];u>0&&(b[v.uuid]=k),a[k]=v,a.pop();for(let w=0,x=d;w!==x;++w){let y=c[w];y[k]=y[u],y.pop()}}}}this.nCachedObjects_=e}subscribe_(a,b){let c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];let f=this._paths,g=this._parsedPaths,h=this._objects,i=h.length,j=this.nCachedObjects_,k=Array(i);d=e.length,c[a]=d,f.push(a),g.push(b),e.push(k);for(let l=j,m=h.length;l!==m;++l){let n=h[l];k[l]=new ld(n,a,b)}return k}unsubscribe_(a){let b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){let d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g],i=a[g];b[i]=c,f[c]=h,f.pop(),e[c]=e[g],e.pop(),d[c]=d[g],d.pop()}}}le.prototype.isAnimationObjectGroup=!0;class lf{constructor(a,b,c=null,d=b.blendMode){this._mixer=a,this._clip=b,this._localRoot=c,this.blendMode=d;let e=b.tracks,f=e.length,g=Array(f),h={endingStart:bG,endingEnd:bG};for(let i=0;i!==f;++i){let j=e[i].createInterpolant(null);g[i]=j,j.settings=h}this._interpolantSettings=h,this._interpolants=g,this._propertyBindings=Array(f),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=bB,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){if(a.fadeOut(b),this.fadeIn(b),c){let d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1,f,b),this.warp(g,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){let d=this._mixer,e=d.time,f=this.timeScale,g=this._timeScaleInterpolant;null===g&&(g=d._lendControlInterpolant(),this._timeScaleInterpolant=g);let h=g.parameterPositions,i=g.sampleValues;return h[0]=e,h[1]=e+c,i[0]=a/f,i[1]=b/f,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(!this.enabled){this._updateWeight(a);return}let e=this._startTime;if(null!==e){let f=(a-e)*c;if(f<0||0===c)return;this._startTime=null,b=c*f}b*=this._updateTimeScale(a);let g=this._updateTime(b),h=this._updateWeight(a);if(h>0){let i=this._interpolants,j=this._propertyBindings;if(this.blendMode===bK)for(let k=0,l=i.length;k!==l;++k)i[k].evaluate(g),j[k].accumulateAdditive(h);else for(let m=0,n=i.length;m!==n;++m)i[m].evaluate(g),j[m].accumulate(d,h)}}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;let c=this._weightInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b,b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;let c=this._timeScaleInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b,b}_updateTime(a){let b=this._clip.duration,c=this.loop,d=this.time+a,e=this._loopCount,f=c===bC;if(0===a)return -1===e?d:f&&(1&e)==1?b-d:d;if(c===bA){-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(d>=b)d=b;else if(d<0)d=0;else{this.time=d;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===e&&(a>=0?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f)),d>=b||d<0){let g=Math.floor(d/b);d-=b*g,e+=Math.abs(g);let h=this.repetitions-e;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,d=a>0?b:0,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===h){let i=a<0;this._setEndings(i,!i,f)}else this._setEndings(!1,!1,f);this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:g})}}else this.time=d;if(f&&(1&e)==1)return b-d}return d}_setEndings(a,b,c){let d=this._interpolantSettings;c?(d.endingStart=bH,d.endingEnd=bH):(a?d.endingStart=this.zeroSlopeAtStart?bH:bG:d.endingStart=bI,b?d.endingEnd=this.zeroSlopeAtEnd?bH:bG:d.endingEnd=bI)}_scheduleFading(a,b,c){let d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(f=d._lendControlInterpolant(),this._weightInterpolant=f);let g=f.parameterPositions,h=f.sampleValues;return g[0]=e,h[0]=b,g[1]=e+a,h[1]=c,this}}class lg extends cp{constructor(a){super(),this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(a,b){let c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];void 0===j&&(j={},i[h]=j);for(let k=0;k!==e;++k){let l=d[k],m=l.name,n=j[m];if(void 0!==n)f[k]=n;else{if(void 0!==(n=f[k])){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,m));continue}let o=b&&b._propertyBindings[k].binding.parsedPath;n=new k2(ld.create(c,m,o),l.ValueTypeName,l.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,h,m),f[k]=n}g[k].resultBuffer=n.buffer}}_activateAction(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]),this._addInactiveAction(a,c,b)}let e=a._propertyBindings;for(let f=0,g=e.length;f!==g;++f){let h=e[f];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(a)}}_deactivateAction(a){if(this._isActiveAction(a)){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(a){let b=a._cacheIndex;return null!==b&&b<this._nActiveActions}_addInactiveAction(a,b,c){let d=this._actions,e=this._actionsByClip,f=e[b];if(void 0===f)f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f;else{let g=f.knownActions;a._byClipCacheIndex=g.length,g.push(a)}a._cacheIndex=d.length,d.push(a),f.actionByRoot[c]=a}_removeInactiveAction(a){let b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d,b[d]=c,b.pop(),a._cacheIndex=null;let e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,h[j]=i,h.pop(),a._byClipCacheIndex=null;let k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===h.length&&delete f[e],this._removeInactiveBindingsForAction(a)}_removeInactiveBindingsForAction(a){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(a){let b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackAction(a){let b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_addInactiveBinding(a,b,c){let d=this._bindingsByRootAndName,e=this._bindings,f=d[b];void 0===f&&(f={},d[b]=f),f[c]=a,a._cacheIndex=e.length,e.push(a)}_removeInactiveBinding(a){let b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i,b[i]=h,b.pop(),delete g[e],0===Object.keys(g).length&&delete f[d]}_lendBinding(a){let b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackBinding(a){let b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_lendControlInterpolant(){let a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];return void 0===c&&((c=new jU(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=b,a[b]=c),c}_takeBackControlInterpolant(a){let b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d,b[d]=a,e.__cacheIndex=c,b[c]=e}clipAction(a,b,c){let d=b||this._root,e=d.uuid,f="string"==typeof a?j2.findByName(d,a):a,g=null!==f?f.uuid:a,h=this._actionsByClip[g],i=null;if(void 0===c&&(c=null!==f?f.blendMode:bJ),void 0!==h){let j=h.actionByRoot[e];if(void 0!==j&&j.blendMode===c)return j;i=h.knownActions[0],null===f&&(f=i._clip)}if(null===f)return null;let k=new lf(this,f,b,c);return this._bindAction(k,i),this._addInactiveAction(k,g,e),k}existingAction(a,b){let c=b||this._root,d=c.uuid,e="string"==typeof a?j2.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];return void 0!==g&&g.actionByRoot[d]||null}stopAllAction(){let a=this._actions,b=this._nActiveActions;for(let c=b-1;c>=0;--c)a[c].stop();return this}update(a){a*=this.timeScale;let b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let g=0;g!==c;++g){let h=b[g];h._update(d,a,e,f)}let i=this._bindings,j=this._nActiveBindings;for(let k=0;k!==j;++k)i[k].apply(f);return this}setTime(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)}getRoot(){return this._root}uncacheClip(a){let b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(void 0!==e){let f=e.knownActions;for(let g=0,h=f.length;g!==h;++g){let i=f[g];this._deactivateAction(i);let j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,k._cacheIndex=j,b[j]=k,b.pop(),this._removeInactiveBindingsForAction(i)}delete d[c]}}uncacheRoot(a){let b=a.uuid,c=this._actionsByClip;for(let d in c){let e=c[d].actionByRoot,f=e[b];void 0!==f&&(this._deactivateAction(f),this._removeInactiveAction(f))}let g=this._bindingsByRootAndName,h=g[b];if(void 0!==h)for(let i in h){let j=h[i];j.restoreOriginalState(),this._removeInactiveBinding(j)}}uncacheAction(a,b){let c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}}lg.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class lh{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new lh(void 0===this.value.clone?this.value:this.value.clone())}}class li extends hn{constructor(a,b,c=1){super(a,b),this.meshPerAttribute=c}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}clone(a){let b=super.clone(a);return b.meshPerAttribute=this.meshPerAttribute,b}toJSON(a){let b=super.toJSON(a);return b.isInstancedInterleavedBuffer=!0,b.meshPerAttribute=this.meshPerAttribute,b}}li.prototype.isInstancedInterleavedBuffer=!0;class lj{constructor(a,b,c,d,e){this.buffer=a,this.type=b,this.itemSize=c,this.elementSize=d,this.count=e,this.version=0}set needsUpdate(a){!0===a&&this.version++}setBuffer(a){return this.buffer=a,this}setType(a,b){return this.type=a,this.elementSize=b,this}setItemSize(a){return this.itemSize=a,this}setCount(a){return this.count=a,this}}lj.prototype.isGLBufferAttribute=!0;class lk{constructor(a,b,c=0,d=1/0){this.ray=new dp(a,b),this.near=c,this.far=d,this.camera=null,this.layers=new dB,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(a,b){this.ray.set(a,b)}setFromCamera(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize(),this.camera=b):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld),this.camera=b):console.error("THREE.Raycaster: Unsupported camera type: "+b.type)}intersectObject(a,b=!0,c=[]){return lm(a,this,c,b),c.sort(ll),c}intersectObjects(a,b=!0,c=[]){for(let d=0,e=a.length;d<e;d++)lm(a[d],this,c,b);return c.sort(ll),c}}function ll(a,b){return a.distance-b.distance}function lm(a,b,c,d){if(a.layers.test(b.layers)&&a.raycast(b,c),!0===d){let e=a.children;for(let f=0,g=e.length;f<g;f++)lm(e[f],b,c,!0)}}class ln{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(cx(b/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class lo{constructor(a=1,b=0,c=0){return this.radius=a,this.theta=b,this.y=c,this}set(a,b,c){return this.radius=a,this.theta=b,this.y=c,this}copy(a){return this.radius=a.radius,this.theta=a.theta,this.y=a.y,this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+c*c),this.theta=Math.atan2(a,c),this.y=b,this}clone(){return new this.constructor().copy(this)}}let lp=new cG;class lq{constructor(a=new cG(Infinity,Infinity),b=new cG(-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=lp.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=lp.copy(a).clamp(this.min,this.max);return b.sub(a).length()}intersect(a){return this.min.max(a.min),this.max.min(a.max),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}lq.prototype.isBox2=!0;let lr=new cW,ls=new cW;class lt{constructor(a=new cW,b=new cW){this.start=a,this.end=b}set(a,b){return this.start.copy(a),this.end.copy(b),this}copy(a){return this.start.copy(a.start),this.end.copy(a.end),this}getCenter(a){return a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){return a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){return this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(a,b){lr.subVectors(a,this.start),ls.subVectors(this.end,this.start);let c=ls.dot(ls),d=ls.dot(lr),e=d/c;return b&&(e=cx(e,0,1)),e}closestPointToPoint(a,b,c){let d=this.closestPointToPointParameter(a,b);return this.delta(c).multiplyScalar(d).add(this.start)}applyMatrix4(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class lu extends dP{constructor(a){super(),this.material=a,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}lu.prototype.isImmediateRenderObject=!0;let lv=new cW;class lw extends dP{constructor(a,b){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=b;let c=new et,d=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,f=1;e<32;e++,f++){let g=e/32*Math.PI*2,h=f/32*Math.PI*2;d.push(Math.cos(g),Math.sin(g),1,Math.cos(h),Math.sin(h),1)}c.setAttribute("position",new ek(d,3));let i=new h$({fog:!1,toneMapped:!1});this.cone=new h7(c,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let a=this.light.distance?this.light.distance:1e3,b=a*Math.tan(this.light.angle);this.cone.scale.set(b,b,a),lv.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(lv),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let lx=new cW,ly=new dq,lz=new dq;class lA extends h7{constructor(a){let b=lB(a),c=new et,d=[],e=[],f=new d7(0,0,1),g=new d7(0,1,0);for(let h=0;h<b.length;h++){let i=b[h];i.parent&&i.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.setAttribute("position",new ek(d,3)),c.setAttribute("color",new ek(e,3));let j=new h$({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,j),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=a,this.bones=b,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(a){let b=this.bones,c=this.geometry,d=c.getAttribute("position");lz.copy(this.root.matrixWorld).invert();for(let e=0,f=0;e<b.length;e++){let g=b[e];g.parent&&g.parent.isBone&&(ly.multiplyMatrices(lz,g.matrixWorld),lx.setFromMatrixPosition(ly),d.setXYZ(f,lx.x,lx.y,lx.z),ly.multiplyMatrices(lz,g.parent.matrixWorld),lx.setFromMatrixPosition(ly),d.setXYZ(f+1,lx.x,lx.y,lx.z),f+=2)}c.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(a)}}function lB(a){let b=[];a&&a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,lB(a.children[c]));return b}class lC extends eL{constructor(a,b,c){let d=new jz(b,4,2),e=new d8({wireframe:!0,fog:!1,toneMapped:!1});super(d,e),this.light=a,this.light.updateMatrixWorld(),this.color=c,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let lD=new cW,lE=new d7,lF=new d7;class lG extends dP{constructor(a,b,c){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c;let d=new jv(b);d.rotateY(.5*Math.PI),this.material=new d8({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let e=d.getAttribute("position"),f=new Float32Array(3*e.count);d.setAttribute("color",new eb(f,3)),this.add(new eL(d,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let a=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let b=a.geometry.getAttribute("color");lE.copy(this.light.color),lF.copy(this.light.groundColor);for(let c=0,d=b.count;c<d;c++){let e=c<d/2?lE:lF;b.setXYZ(c,e.r,e.g,e.b)}b.needsUpdate=!0}a.lookAt(lD.setFromMatrixPosition(this.light.matrixWorld).negate())}}class lH extends h7{constructor(a=10,b=10,c=4473924,d=8947848){c=new d7(c),d=new d7(d);let e=b/2,f=a/b,g=a/2,h=[],i=[];for(let j=0,k=0,l=-g;j<=b;j++,l+=f){h.push(-g,0,l,g,0,l),h.push(l,0,-g,l,0,g);let m=j===e?c:d;m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3}let n=new et;n.setAttribute("position",new ek(h,3)),n.setAttribute("color",new ek(i,3));let o=new h$({vertexColors:!0,toneMapped:!1});super(n,o),this.type="GridHelper"}}class lI extends h7{constructor(a=10,b=16,c=8,d=64,e=4473924,f=8947848){e=new d7(e),f=new d7(f);let g=[],h=[];for(let i=0;i<=b;i++){let j=i/b*(2*Math.PI),k=Math.sin(j)*a,l=Math.cos(j)*a;g.push(0,0,0),g.push(k,0,l);let m=1&i?e:f;h.push(m.r,m.g,m.b),h.push(m.r,m.g,m.b)}for(let n=0;n<=c;n++){let o=1&n?e:f,p=a-a/c*n;for(let q=0;q<d;q++){let r=q/d*(2*Math.PI),s=Math.sin(r)*p,t=Math.cos(r)*p;g.push(s,0,t),h.push(o.r,o.g,o.b),r=(q+1)/d*(2*Math.PI),s=Math.sin(r)*p,t=Math.cos(r)*p,g.push(s,0,t),h.push(o.r,o.g,o.b)}}let u=new et;u.setAttribute("position",new ek(g,3)),u.setAttribute("color",new ek(h,3));let v=new h$({vertexColors:!0,toneMapped:!1});super(u,v),this.type="PolarGridHelper"}}let lJ=new cW,lK=new cW,lL=new cW;class lM extends dP{constructor(a,b,c){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c,void 0===b&&(b=1);let d=new et;d.setAttribute("position",new ek([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));let e=new h$({fog:!1,toneMapped:!1});this.lightPlane=new h4(d,e),this.add(this.lightPlane),(d=new et).setAttribute("position",new ek([0,0,0,0,0,1],3)),this.targetLine=new h4(d,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){lJ.setFromMatrixPosition(this.light.matrixWorld),lK.setFromMatrixPosition(this.light.target.matrixWorld),lL.subVectors(lK,lJ),this.lightPlane.lookAt(lK),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(lK),this.targetLine.scale.z=lL.length()}}let lN=new cW,lO=new eS;class lP extends h7{constructor(a){let b=new et,c=new h$({color:16777215,vertexColors:!0,toneMapped:!1}),d=[],e=[],f={},g=new d7(16755200),h=new d7(16711680),i=new d7(43775),j=new d7(16777215),k=new d7(3355443);function l(a,b,c){m(a,c),m(b,c)}function m(a,b){d.push(0,0,0),e.push(b.r,b.g,b.b),void 0===f[a]&&(f[a]=[]),f[a].push(d.length/3-1)}l("n1","n2",g),l("n2","n4",g),l("n4","n3",g),l("n3","n1",g),l("f1","f2",g),l("f2","f4",g),l("f4","f3",g),l("f3","f1",g),l("n1","f1",g),l("n2","f2",g),l("n3","f3",g),l("n4","f4",g),l("p","n1",h),l("p","n2",h),l("p","n3",h),l("p","n4",h),l("u1","u2",i),l("u2","u3",i),l("u3","u1",i),l("c","t",j),l("p","c",k),l("cn1","cn2",k),l("cn3","cn4",k),l("cf1","cf2",k),l("cf3","cf4",k),b.setAttribute("position",new ek(d,3)),b.setAttribute("color",new ek(e,3)),super(b,c),this.type="CameraHelper",this.camera=a,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()}update(){let a=this.geometry,b=this.pointMap;lO.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lQ("c",b,a,lO,0,0,-1),lQ("t",b,a,lO,0,0,1),lQ("n1",b,a,lO,-1,-1,-1),lQ("n2",b,a,lO,1,-1,-1),lQ("n3",b,a,lO,-1,1,-1),lQ("n4",b,a,lO,1,1,-1),lQ("f1",b,a,lO,-1,-1,1),lQ("f2",b,a,lO,1,-1,1),lQ("f3",b,a,lO,-1,1,1),lQ("f4",b,a,lO,1,1,1),lQ("u1",b,a,lO,.7,1.1,-1),lQ("u2",b,a,lO,-.7,1.1,-1),lQ("u3",b,a,lO,0,2,-1),lQ("cf1",b,a,lO,-1,0,1),lQ("cf2",b,a,lO,1,0,1),lQ("cf3",b,a,lO,0,-1,1),lQ("cf4",b,a,lO,0,1,1),lQ("cn1",b,a,lO,-1,0,-1),lQ("cn2",b,a,lO,1,0,-1),lQ("cn3",b,a,lO,0,-1,-1),lQ("cn4",b,a,lO,0,1,-1),a.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function lQ(a,b,c,d,e,f,g){lN.set(e,f,g).unproject(d);let h=b[a];if(void 0!==h){let i=c.getAttribute("position");for(let j=0,k=h.length;j<k;j++)i.setXYZ(h[j],lN.x,lN.y,lN.z)}}let lR=new cZ;class lS extends h7{constructor(a,b=16776960){let c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new et;e.setIndex(new eb(c,1)),e.setAttribute("position",new eb(d,3)),super(e,new h$({color:b,toneMapped:!1})),this.object=a,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(a){if(void 0!==a&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&lR.setFromObject(this.object),lR.isEmpty())return;let b=lR.min,c=lR.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x,e[1]=c.y,e[2]=c.z,e[3]=b.x,e[4]=c.y,e[5]=c.z,e[6]=b.x,e[7]=b.y,e[8]=c.z,e[9]=c.x,e[10]=b.y,e[11]=c.z,e[12]=c.x,e[13]=c.y,e[14]=b.z,e[15]=b.x,e[16]=c.y,e[17]=b.z,e[18]=b.x,e[19]=b.y,e[20]=b.z,e[21]=c.x,e[22]=b.y,e[23]=b.z,d.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(a){return this.object=a,this.update(),this}copy(a){return h7.prototype.copy.call(this,a),this.object=a.object,this}}class lT extends h7{constructor(a,b=16776960){let c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new et;d.setIndex(new eb(c,1)),d.setAttribute("position",new ek([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(d,new h$({color:b,toneMapped:!1})),this.box=a,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(a){let b=this.box;b.isEmpty()||(b.getCenter(this.position),b.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(a))}}class lU extends h4{constructor(a,b=1,c=16776960){let d=c,e=new et;e.setAttribute("position",new ek([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),e.computeBoundingSphere(),super(e,new h$({color:d,toneMapped:!1})),this.type="PlaneHelper",this.plane=a,this.size=b;let f=new et;f.setAttribute("position",new ek([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),f.computeBoundingSphere(),this.add(new eL(f,new d8({color:d,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(a){let b=-this.plane.constant;1e-8>Math.abs(b)&&(b=1e-8),this.scale.set(.5*this.size,.5*this.size,b),this.children[0].material.side=b<0?p:o,this.lookAt(this.plane.normal),super.updateMatrixWorld(a)}}let lV=new cW,lW,lX;class lY extends dP{constructor(a=new cW(0,0,1),b=new cW(0,0,0),c=1,d=16776960,e=.2*c,f=.2*e){super(),this.type="ArrowHelper",void 0===lW&&((lW=new et).setAttribute("position",new ek([0,0,0,0,1,0],3)),(lX=new im(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(b),this.line=new h4(lW,new h$({color:d,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new eL(lX,new d8({color:d,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c,e,f)}setDirection(a){if(a.y>.99999)this.quaternion.set(0,0,0,1);else if(a.y< -.99999)this.quaternion.set(1,0,0,0);else{lV.set(a.z,0,-a.x).normalize();let b=Math.acos(a.y);this.quaternion.setFromAxisAngle(lV,b)}}setLength(a,b=.2*a,c=.2*b){this.line.scale.set(1,Math.max(1e-4,a-b),1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()}setColor(a){this.line.material.color.set(a),this.cone.material.color.set(a)}copy(a){return super.copy(a,!1),this.line.copy(a.line),this.cone.copy(a.cone),this}}class lZ extends h7{constructor(a=1){let b=new et;b.setAttribute("position",new ek([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a],3)),b.setAttribute("color",new ek([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let c=new h$({vertexColors:!0,toneMapped:!1});super(b,c),this.type="AxesHelper"}setColors(a,b,c){let d=new d7,e=this.geometry.attributes.color.array;return d.set(a),d.toArray(e,0),d.toArray(e,3),d.set(b),d.toArray(e,6),d.toArray(e,9),d.set(c),d.toArray(e,12),d.toArray(e,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class l${constructor(){this.type="ShapePath",this.color=new d7,this.subPaths=[],this.currentPath=null}moveTo(a,b){return this.currentPath=new iR,this.subPaths.push(this.currentPath),this.currentPath.moveTo(a,b),this}lineTo(a,b){return this.currentPath.lineTo(a,b),this}quadraticCurveTo(a,b,c,d){return this.currentPath.quadraticCurveTo(a,b,c,d),this}bezierCurveTo(a,b,c,d,e,f){return this.currentPath.bezierCurveTo(a,b,c,d,e,f),this}splineThru(a){return this.currentPath.splineThru(a),this}toShapes(a,b){function c(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c],f=new iS;f.curves=e.curves,b.push(f)}return b}function d(a,b){let c=b.length,d=!1;for(let e=c-1,f=0;f<c;e=f++){let g=b[e],h=b[f],i=h.x-g.x,j=h.y-g.y;if(Math.abs(j)>Number.EPSILON){if(j<0&&(g=b[f],i=-i,h=b[e],j=-j),a.y<g.y||a.y>h.y)continue;if(a.y===g.y){if(a.x===g.x)return!0}else{let k=j*(a.x-g.x)-i*(a.y-g.y);if(0===k)return!0;if(k<0)continue;d=!d}}else{if(a.y!==g.y)continue;if(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x)return!0}}return d}let e=jn.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);let g,h,i,j=[];if(1===f.length)return h=f[0],(i=new iS).curves=h.curves,j.push(i),j;let k=!e(f[0].getPoints());k=a?!k:k;let l=[],m=[],n=[],o=0,p;m[o]=void 0,n[o]=[];for(let q=0,r=f.length;q<r;q++)g=e(p=(h=f[q]).getPoints()),(g=a?!g:g)?(!k&&m[o]&&o++,m[o]={s:new iS,p:p},m[o].s.curves=h.curves,k&&o++,n[o]=[]):n[o].push({h:h,p:p[0]});if(!m[0])return c(f);if(m.length>1){let s=!1,t=[];for(let u=0,v=m.length;u<v;u++)l[u]=[];for(let w=0,x=m.length;w<x;w++){let y=n[w];for(let z=0;z<y.length;z++){let A=y[z],B=!0;for(let C=0;C<m.length;C++)d(A.p,m[C].p)&&(w!==C&&t.push({froms:w,tos:C,hole:z}),B?(B=!1,l[C].push(A)):s=!0);B&&l[w].push(A)}}t.length>0&&!s&&(n=l)}let D;for(let E=0,F=m.length;E<F;E++){i=m[E].s,j.push(i),D=n[E];for(let G=0,H=D.length;G<H;G++)i.holes.push(D[G].h)}return j}}let l_=new Float32Array(1),l0=new Int32Array(l_.buffer);class l1{static toHalfFloat(a){a>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),a=65504),l_[0]=a;let b=l0[0],c=b>>16&32768,d=b>>12&2047,e=b>>23&255;return e<103?c:e>142?(c|=31744,c|=(255==e?0:1)&&8388607&b):e<113?(d|=2048,c|=(d>>114-e)+(d>>113-e&1)):(c|=e-112<<10|d>>1,c+=1&d)}}let l2=0,l3=1,l4=0,l5=1,l6=2;function l7(a){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),a}function l8(a=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),a.isMultiMaterial=!0,a.materials=a,a.clone=function(){return a.slice()},a}function l9(a,b){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ie(a,b)}function ma(a){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new hE(a)}function mb(a,b){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ie(a,b)}function mc(a){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new h9(a)}function md(a){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new h9(a)}function me(a){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new h9(a)}function mf(a,b,c){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new cW(a,b,c)}function mg(a,b){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new eb(a,b).setUsage(cf)}function mh(a,b){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new ec(a,b)}function mi(a,b){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ed(a,b)}function mj(a,b){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ee(a,b)}function mk(a,b){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new ef(a,b)}function ml(a,b){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new eg(a,b)}function mm(a,b){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new eh(a,b)}function mn(a,b){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ei(a,b)}function mo(a,b){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ek(a,b)}function mp(a,b){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new el(a,b)}function mq(a){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new lZ(a)}function mr(a,b){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new lS(a,b)}function ms(a,b){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new h7(new iv(a.geometry),new h$({color:void 0!==b?b:16777215}))}function mt(a,b){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new h7(new jE(a.geometry),new h$({color:void 0!==b?b:16777215}))}function mu(a){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new j9(a)}function mv(a){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new ke(a)}function mw(a,b,c){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new eW(a,c)}function mx(){console.error("THREE.CanvasRenderer has been removed")}function my(){console.error("THREE.JSONLoader has been removed.")}iw.create=function(a,b){return console.log("THREE.Curve.create() has been deprecated"),a.prototype=Object.create(iw.prototype),a.prototype.constructor=a,a.prototype.getPoint=b,a},iR.prototype.fromPoints=function(a){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(a)},lH.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},lA.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},j7.prototype.extractUrlBase=function(a){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),kA.extractUrlBase(a)},j7.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},lq.prototype.center=function(a){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(a)},lq.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},lq.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},lq.prototype.size=function(a){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(a)},cZ.prototype.center=function(a){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(a)},cZ.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},cZ.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},cZ.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},cZ.prototype.size=function(a){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(a)},dg.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},e1.prototype.setFromMatrix=function(a){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(a)},lt.prototype.center=function(a){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(a)},cH.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},cH.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},cH.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},cH.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},cH.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},cH.prototype.getInverse=function(a){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},dq.prototype.extractPosition=function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},dq.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},dq.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new cW().setFromMatrixColumn(this,3)},dq.prototype.setRotationFromQuaternion=function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},dq.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},dq.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dq.prototype.multiplyVector4=function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dq.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},dq.prototype.rotateAxis=function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},dq.prototype.crossVector=function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dq.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},dq.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},dq.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},dq.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},dq.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},dq.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dq.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},dq.prototype.makeFrustum=function(a,b,c,d,e,f){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(a,b,d,c,e,f)},dq.prototype.getInverse=function(a){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},e$.prototype.isIntersectionLine=function(a){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(a)},cV.prototype.multiplyVector3=function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},cV.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},dp.prototype.isIntersectionBox=function(a){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},dp.prototype.isIntersectionPlane=function(a){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(a)},dp.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},d$.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},d$.prototype.barycoordFromPoint=function(a,b){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(a,b)},d$.prototype.midpoint=function(a){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(a)},d$.prototypenormal=function(a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(a)},d$.prototype.plane=function(a){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(a)},d$.barycoordFromPoint=function(a,b,c,d,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),d$.getBarycoord(a,b,c,d,e)},d$.normal=function(a,b,c,d){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),d$.getNormal(a,b,c,d)},iS.prototype.extractAllPoints=function(a){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(a)},iS.prototype.extrude=function(a){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new jq(this,a)},iS.prototype.makeGeometry=function(a){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new jx(this,a)},cG.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cG.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},cG.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},cW.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},cW.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},cW.prototype.getPositionFromMatrix=function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},cW.prototype.getScaleFromMatrix=function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},cW.prototype.getColumnFromMatrix=function(a,b){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(b,a)},cW.prototype.applyProjection=function(a){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(a)},cW.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cW.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},cW.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},cR.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cR.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},dP.prototype.getChildByName=function(a){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},dP.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},dP.prototype.translate=function(a,b){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},dP.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},dP.prototype.applyMatrix=function(a){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(dP.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),eL.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(eL.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),bL},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),hO.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},eT.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==b&&(this.filmGauge=b),this.setFocalLength(a)},Object.defineProperties(kg.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=a}}}),Object.defineProperties(eb.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===cf},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(cf)}}}),eb.prototype.setDynamic=function(a){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?cf:ce),this},eb.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},eb.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},et.prototype.addIndex=function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(a)},et.prototype.addAttribute=function(a,b){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b),this):this.setAttribute(a,b):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(a,new eb(arguments[1],arguments[2])))},et.prototype.addDrawCall=function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(a,b)},et.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},et.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},et.prototype.removeAttribute=function(a){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(a)},et.prototype.applyMatrix=function(a){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(et.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),hn.prototype.setDynamic=function(a){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?cf:ce),this},hn.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},jq.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},jq.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},jq.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},hm.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},lh.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(d0.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new d7}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=a===r}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=a}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(eR.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=a}}}),hi.prototype.clearTarget=function(a,b,c,d){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(a),this.clear(b,c,d)},hi.prototype.animate=function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(a)},hi.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},hi.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},hi.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},hi.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},hi.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},hi.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},hi.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},hi.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},hi.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},hi.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},hi.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},hi.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},hi.prototype.enableScissorTest=function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(a)},hi.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},hi.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},hi.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},hi.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},hi.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},hi.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},hi.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},hi.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},hi.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},hi.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(hi.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(a){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===a?bP:bO}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(g8.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(cS.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=a}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=a}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=a}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=a}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=a}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=a}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=a}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=a}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=a}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=a}}}),kX.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let b=this,c=new kK;return c.load(a,function(a){b.setBuffer(a)}),this},k1.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},eU.prototype.updateCubeMap=function(a,b){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(a,b)},eU.prototype.clear=function(a,b,c,d){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(a,b,c,d)},cN.crossOrigin=void 0,cN.loadTexture=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let e=new kf;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},cN.loadTextureCube=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let e=new kd;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},cN.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},cN.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};let mz={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function mA(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function mB(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new et}function mC(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new et}function mD(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function mE(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:d}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=d)}}])